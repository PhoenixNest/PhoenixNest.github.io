<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Welcome To PhoenixNest&#39;s Blog</title>
      <link href="/Welcome/"/>
      <url>/Welcome/</url>
      
        <content type="html"><![CDATA[<h2 id="Who-i-am"><a href="#Who-i-am" class="headerlink" title="Who i am"></a>Who i am</h2><p>欢迎来到我的博客, 我是<code>PhoenixNest • (Peter Chen)</code>。</p><blockquote><ul><li>一个<code>吉林大学珠海学院</code>计算机学院软件工程专业的<code>应届本科毕业生</code>。</li><li>一个知晓C++、Java、MySQL、SQL Server等拼写的程序猿（发量犹在，Still a ROOKIE）。</li><li>一个做过服务器运维，知晓Linux，调配过数据库与服务器底层硬件的苦逼练习生。</li><li>一个知晓MVVM开发架构，使用过Google JetPack快速开发框架的Android程序猿。</li><li>一个做过高德地图(Android)开发，正在转入Web前端的新人。</li><li>一个热爱星际争霸2，喜欢暴雪游戏，梦想进入暴雪公司(Blizzard)的SCer。</li><li>一个喜欢游泳，曾做过蛙泳与自由泳教练的泳客。</li><li>一个接触计算机编程开发2年，喜欢学习新技术的软硬件攻城狮。</li><li>一个做过高达模型评测，开过电台的小Up主。</li><li>一个喜欢拍照，喜欢记录生活，不会讲粤语的广东潮汕人。</li></ul></blockquote><!-- ---## The Original在接触计算机编程的2年，踩了不少坑，从一开始最经典的因为大小写导致程序出现Bug，再到现如今能独立开发Android移动端应用，可以说很大方面来自于自己对技术的热爱与追求。有人说编程是枯燥的，但其实也充满了乐趣，你能亲眼看着你的项目如同孩子般，经历不同的成长阶段，从一开始的`"Hello World"`，再到后来的能够完成诸多需求，成为程序界里的`"搬砖工人"`(🤣🤣🤣)。`有书，哪里都是图书馆。` --><hr><h2 id="Donate-☕️"><a href="#Donate-☕️" class="headerlink" title="Donate ☕️"></a>Donate ☕️</h2><p>如果你喜欢我的博文，可以通过下面的方式支持我，你的支持是我最大的动力 😘</p><p>转载时请注明出处 ©️PhoenixNest</p><table><thead><tr><th align="center">Donate 😇</th><th align="center">Qr code</th></tr></thead><tbody><tr><td align="center">Wechat</td><td align="center"><img src="/img/wechat.png" alt="Wechat"></td></tr><tr><td align="center">Ali Pay</td><td align="center"><img src="/img/alipay.png" alt="Ali Pay"></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> About </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Top </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git • Github</title>
      <link href="/Notes-Git/"/>
      <url>/Notes-Git/</url>
      
        <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><blockquote><p>本篇将介绍有关<code>Git与Github使用</code>的一些笔记分享。</p></blockquote><hr><h2 id="Git-配置"><a href="#Git-配置" class="headerlink" title="Git 配置"></a>Git 配置</h2><blockquote><p>配置Github用户名与邮箱。</p></blockquote><pre><code class="bash">git config -global user.name = &quot;你的 Github 用户名&quot;git config -global user.email = &quot;你的 Github 邮箱&quot;</code></pre><blockquote><p>配置远端 SSH 公钥。</p></blockquote><pre><code class="bash"># 进入 ~/.ssh，若没有则创建（mkdir ~/.ssh）cd ~/.ssh# 生成公钥ssh-keygen -t rsa -C &quot;你的 Github 邮箱&quot;# 查看公钥文件cat id_rsa.pub</code></pre><blockquote><p>上传密钥</p></blockquote><p>访问Github并登录，点击右上角头像，进入 Settings - SSH and GPG keys,点击右上角的 New SSH key。</p><p>在 Key 输入框内填入 id_rsa.pub 中的全部内容。</p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Git/git_ssh_1.png"><hr><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Git/git_ssh_2.png"><hr><h2 id="Github-访问加速"><a href="#Github-访问加速" class="headerlink" title="Github 访问加速"></a>Github 访问加速</h2><blockquote><p>对于Windows系统，在日常使用过程中经常会出现访问速度慢的情况，此处将介绍通过修改 host 文件对 Github 进行加速的笔记。</p><p>Windows 环境下的host文件位于：<strong>C:\Windows\System32\drivers\etc</strong>下<br>修改时需要管理员权限</p></blockquote><p>在尾部追加以下ip，有关 Github ip 的信息可到<a href="https://www.ipaddress.com/" target="_blank" rel="noopener">ipaddress</a>上查询并修改为自己所查询到的准确地址。</p><pre><code class="text">140.82.112.3    github.com199.232.69.194  github.global.ssl.fastly.net199.232.96.133  avatars.githubusercontent.com199.232.96.133  raw.githubusercontent.com199.232.96.133  user-images.githubusercontent.com199.232.96.133  camo.githubusercontent.com</code></pre><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Git/ipaddress.png" alt="ipaddress"></p><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Git/hosts.png" alt="修改后的 host 文件"></p><hr><h2 id="Donate-☕️"><a href="#Donate-☕️" class="headerlink" title="Donate ☕️"></a>Donate ☕️</h2><p>如果你喜欢我的博文，可以通过下面的方式支持我，你的支持是我最大的动力 😘</p><p>转载时请注明出处 ©️PhoenixNest</p><table><thead><tr><th align="center">Donate 😇</th><th align="center">Qr code</th></tr></thead><tbody><tr><td align="center">Wechat</td><td align="center"><img src="/img/wechat.png" alt="Wechat"></td></tr><tr><td align="center">Ali Pay</td><td align="center"><img src="/img/alipay.png" alt="Ali Pay"></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Daily </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RAID -&gt; AHCI</title>
      <link href="/Notes-Convert-Windows-from-RAID-mode-to-AHCI-mode/"/>
      <url>/Notes-Convert-Windows-from-RAID-mode-to-AHCI-mode/</url>
      
        <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><blockquote><p>本篇整理了一些我在近期对笔记本RAID模式与AHCI模式转换的一些随记。</p></blockquote><p>所使用配置清单：</p><ul><li>型号：<code>ASUS</code> ZenBook X2 Duo</li><li>系统：<code>Windows 10</code> Professional Workstation</li></ul><p>由于我的这台 Zenbook X2 Duo 只有一个硬盘位，鉴于华硕出厂时对 BIOS 的奇葩配置，导致<code>硬盘设置（Advanced -&gt; SATA Configuration）</code>直接就是<code>RAID</code>（一个硬盘无法组成<a href="https://baike.baidu.com/item/RAID%E7%A3%81%E7%9B%98%E9%98%B5%E5%88%97/10588130" target="_blank" rel="noopener">磁盘阵列</a>，此时RAID于事无补），造成后期安装双系统时难以避免的<code>硬盘模式冲突</code>问题。</p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/RAID%20to%20AHCI/my_asus_disassemble.jpg"><hr><h2 id="RAID-to-AHCI"><a href="#RAID-to-AHCI" class="headerlink" title="RAID to AHCI"></a>RAID to AHCI</h2><p>由于出厂就设置的RAID导致Windows中缺少对AHCI的驱动支持，直接对BIOS中的硬盘设置进行修改也将导致Windows无法正常启动。</p><p>因此建议先保留RAID设置，在系统能正常运行的时候对引导进行修改，进入Windows的安全模式中让系统自动修复缺失的AHCI驱动。</p><p>操作过程如下：</p><ol><li><p><code>保持RAID模式</code>，正常开机</p></li><li><p>Win + R 运行 msconfig，在<code>引导标签页</code>下选择<code>安全引导</code>，让系统默认以安全模式重新启动。</p></li><li><p>重启电脑，进入BIOS，<code>修改硬盘模式为AHCI</code></p></li><li><p>系统将会自动以安全模式启动，并在启动期间尝试<code>自动修复AHCI驱动</code>。</p></li><li><p>在安全模式启动后，再次运行 Win + R 运行 msconfig，<code>取消安全引导</code>，让系统恢复正常启动。</p></li><li><p>重启电脑，系统将在AHCI模式下正常运行。</p></li></ol><hr><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/RAID%20to%20AHCI/windows_login.png"><hr><h2 id="Donate-☕️"><a href="#Donate-☕️" class="headerlink" title="Donate ☕️"></a>Donate ☕️</h2><p>如果你喜欢我的博文，可以通过下面的方式支持我，你的支持是我最大的动力 😘</p><p>转载时请注明出处 ©️PhoenixNest</p><table><thead><tr><th align="center">Donate 😇</th><th align="center">Qr code</th></tr></thead><tbody><tr><td align="center">Wechat</td><td align="center"><img src="/img/wechat.png" alt="Wechat"></td></tr><tr><td align="center">Ali Pay</td><td align="center"><img src="/img/alipay.png" alt="Ali Pay"></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Daily </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络原理</title>
      <link href="/Notes-Computer-Network-Technology/"/>
      <url>/Notes-Computer-Network-Technology/</url>
      
        <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><blockquote><p>本篇整理了一些我在近期复习计算机网络期末考试时所整理的一些笔记。</p><p>所用教学平台：<a href=""https://cn.netacad.com/"">Cisco Networking Academy</a></p></blockquote><hr><h2 id="当今网络"><a href="#当今网络" class="headerlink" title="当今网络"></a>当今网络</h2><h3 id="网络影响着我们的生活"><a href="#网络影响着我们的生活" class="headerlink" title="网络影响着我们的生活"></a>网络影响着我们的生活</h3><p>当今世界有了网络，人与人的联系达到空前状态。当人们想到某个创意时，可以即时与其他人沟通，使创意变为现实。用来交流思想和信息的网上社区的形成可能会提高全球的生产力。云的创建让我们可以存储文档和图片，并随时随地访问它们。</p><hr><h3 id="网络组件"><a href="#网络组件" class="headerlink" title="网络组件"></a>网络组件</h3><blockquote><p>连接到网络并直接参与网络通信的所有计算机都属于主机。</p></blockquote><ul><li>主机可以被称为终端设备。某些主机也称为客户端。许多计算机在网络中既是服务器又是客户端。这种网络称为对等网络。</li><li>终端设备是指通过网络传输的消息的来源或目的地。中间设备将每台终端设备连接到网络，并且可以将多个独立的网络连接成网际网络。中间设备使用目的终端设备地址以及有关网络互连的信息来决定消息在网络中应该采用的路径。</li><li>介质为消息从源设备传送到目的设备提供了通道。</li></ul><hr><h3 id="网络表示方式和网络拓扑"><a href="#网络表示方式和网络拓扑" class="headerlink" title="网络表示方式和网络拓扑"></a>网络表示方式和网络拓扑</h3><blockquote><p>网络图通常使用图标来表示构成网络的不同设备和连接。图可以让人们轻松了解大型网络中的设备连接方式。这种网络“图”被称为“拓扑图”。</p></blockquote><ul><li><code>物理拓扑图</code>说明了中间设备和线缆安装的物理位置。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/1_3_1.png" alt="物理拓补图"></p><ul><li><code>逻辑拓扑图</code>说明了设备、端口和网络的编址方案。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/1_3_2.png" alt="逻辑拓扑图"></p><hr><h3 id="常见网络类型"><a href="#常见网络类型" class="headerlink" title="常见网络类型"></a>常见网络类型</h3><ul><li><code>小型家庭网络</code>将少量的几台计算机互联并将它们连接到互联网。</li><li><code>小型办公室/家庭办公室（SOHO）网络</code>可让一个家庭办公室或远程办公室内的计算机连接到企业网络或访问集中的共享资源。</li><li><code>中大型网络</code>（例如大型企业和学校使用的网络）可能有许多站点，包含成百上千台相互连接的主机。</li><li><code>互联网</code>是由网络组成的网络，连接全球亿万台计算机。</li></ul><hr><blockquote><p>两种最常见的网络基础设施类型是局域网（LAN）和广域网（WAN）。</p></blockquote><ul><li><p>LAN是<code>覆盖较小地理区域</code>的网络基础设施。</p><p>局域网具有如下特点：</p><ul><li>LAN 在有限区域（如家庭、学校、办公大楼或园区）内互连终端设备。</li><li>LAN <code>通常由一个组织或个人管理</code>。实行网络级管控、安全控制并制定访问控制策略。</li><li>LAN 为内部终端设备和中间设备<code>提供高速带宽</code>。</li></ul></li></ul><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/1_4_1.png" alt="LAN"></p><hr><ul><li><p>WAN是<code>覆盖广泛地理区域</code>的网络基础设施。WAN 通常由服务提供商（SP）或互联网服务提供商（ISP）管理。</p><p>WAN 具有如下特点:</p><ul><li>WAN 互连广泛地理区域（例如各大城市、州、省、国家/地区或大陆之间）内的 LAN。</li><li>WAN <code>通常由多个服务提供商管理</code>。</li><li>WAN 通常<code>提供 LAN 之间的较慢链路</code>。</li></ul></li></ul><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/1_4_2.png" alt="WAN"></p><hr><ul><li>互联网是一个<code>遍及全球的互相连接</code>的网络（简称互联网络或互联网）的集合。</li></ul><p>互联网<code>不属于任何个人或团体</code>。要确保通过这种多元化基础设施有效通信，需要<code>采用统一的公认技术和标准</code>，也需要众多网络管理机构相互协作。</p><p>为了维护互联网协议和进程的结构和标准化，人们建立了许多组织。这些组织包括<code>互联网工程任务组（IETF）</code>、<code>互联网名称与数字地址分配机构（ICANN）</code>和<code>互联网架构委员会（IAB）</code>，以及许多其他组织。</p><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/1_4_3.png" alt="互联网"></p><hr><ul><li><p>内部网和外联网</p><blockquote><p>与术语“互联网”类似的另外两个术语是内部网和外联网。</p></blockquote><p><code>内部网</code>这个术语<code>用于表示一个组织的私有局域网和广域网连接</code>。内部网的<code>设计旨在仅允许该组织的成员、员工或其他获得授权的人员进行访问</code>。</p><p><code>组织可以使用外联网为在其他组织工作</code>，但需要本组织数据的人提供安全访问。如：</p><ul><li>公司为外部供应商和承包商提供访问。</li><li>医院为医生提供预约系统，以便医生为患者安排预约。</li><li>当地教育局为其管辖区的学校提供预算和人员信息。</li></ul></li></ul><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/1_4_4.png" alt="内部网和外联网"></p><hr><h3 id="Internet-连接"><a href="#Internet-连接" class="headerlink" title="Internet 连接"></a>Internet 连接</h3><ul><li><p>小型办公室/家庭办公室（SOHO）网络互联网连接方式：有线电视、DSL、蜂窝网络、卫星和拨号电话。</p></li><li><p>商务互联网（企业）连接方式：专用租用线路、地铁以太网、商务 DSL 和卫星。</p></li></ul><blockquote><p>选择哪种连接方式取决于地理位置和可供选择的运营商。</p><p>传统的独立网络使用不同的技术、规则和标准。</p></blockquote><ul><li>融合网络<code>通过相同的网络基础设施，在许多不同类型的设备之间传输数据、语音和视频</code>。这个网络的基础设施<code>采用一组相同的规则、协议和实施标准</code>。</li></ul><hr><h3 id="可靠网络"><a href="#可靠网络" class="headerlink" title="可靠网络"></a>可靠网络</h3><blockquote><p>“网络架构”是<code>指支持基础设施的技术以及通过该网络传输数据的编程服务及规则或协议</code>。</p></blockquote><p>随着网络的发展，我们了解到网络架构师必须解决<code>四个基本特征</code>，以满足用户的期望：</p><p>容错能力、可扩展性、服务质量（QoS）、安全性。</p><ul><li><code>容错</code>网络是在发生故障时限制受影响设备数量的网络。有多条路径到达目的地被称为冗余。</li><li><code>可扩展</code>的网络可以快速扩展，以支持新用户和应用程序。网络具有扩展能力，因为设计人员遵循广为接受的标准和协议。</li><li><code>QoS</code>是管理拥塞和确保向所有用户可靠传输内容的主要机制。网络管理员必须解决两种网络安全问题：网络基础设施安全和信息安全。</li><li>为了实现网络<code>安全</code>的目标，有三个主要要求：保密性、完整性和可用性。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/1_6_1.png" alt="容错性"></p><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/1_6_2.png" alt="可拓展性"></p><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/1_6_3.png" alt="服务质量(QoS)"></p><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/1_6_4.png" alt="网络安全性"></p><hr><h3 id="网络趋势"><a href="#网络趋势" class="headerlink" title="网络趋势"></a>网络趋势</h3><blockquote><p>最近有几种网络趋势影响着组织和消费者：自带设备（BYOD）、在线协作、视频通信和云计算。</p></blockquote><ul><li>BYOD 意味着设备由任何使用者在任意地点使用，包括笔记本电脑、上网本、平板电脑、智能手机和电子阅读器。。</li><li>在线协作工具，如：Cisco Webex、腾讯会议、钉钉，为员工、学生、教师、客户和合作伙伴即时连接、交互和实现其目标提供了一种方法。</li><li>视频可用于通信、协作和娱乐。无论身处何地，只要能上网，任何人都可以接打视频电话。</li><li>云计算使我们可以在互联网上存储个人文件，甚至可以在服务器上备份整个硬盘驱动器。使用云可以访问文字处理和图片编辑等应用程序。</li></ul><hr><blockquote><p>云类型主要有四种：公有云、私有云、混合云和定制云。</p></blockquote><table><thead><tr><th align="center">云类型</th><th align="left">说明</th></tr></thead><tbody><tr><td align="center"><strong>公有云</strong></td><td align="left">在公有云中提供的云应用和云服务， 可供大众使用。服务可能免费，也可能按 即用即付模式提供，比如按在线存储付费。公有 云利用互联网提供服务。</td></tr><tr><td align="center"><strong>私有云</strong></td><td align="left">私有云提供的基于云的应用和服务专供 特定组织或实体（例如政府）使用。私有 云可以使用组织的私有网络来搭建， 虽然构建和维护私有云的成本很高。私有 云也可以由具有严格访问安全控制的外部组织 管理。</td></tr><tr><td align="center"><strong>混合云</strong></td><td align="left">混合云由两个或多个云组成（例如：部分私有， 部分公共），其中每个部分仍然是一个不同的对象，但两者都 使用单一架构进行连接。混合云中的个人 将能够根据用户访问权限对各种服务进行 不同程度的访问。</td></tr><tr><td align="center"><strong>社区云</strong></td><td align="left">社区云是专为特定实体或组织使用而创建的。公共云和社区云之间的区别在于为团体定制的功能需求。例如，医疗机构必须遵从要求特殊身份验证和保密性的政策与法律（比如 HIPAA）。社区云由具有类似需求和关注的多个组织使用。社区云类似于公共云环境，但是具有一定级别的安全性、隐私性，甚至具有私有云的法规合规性。</td></tr></tbody></table><p>人们正在开发<code>可用于家里所有房间的智能家庭技术</code>。随着家庭网络和高速互联网技术的普及，智能家庭技术将变得越来越普遍。通过使用供电的同一线路，电力线网络通过按一定频率发送数据来发送信息。<code>无线互联网服务提供商（WISP）是使用类似家庭无线局域网（WLAN）的无线技术，将用户连接到专用的接入点或热点的ISP</code>。</p><hr><h3 id="网络安全"><a href="#网络安全" class="headerlink" title="网络安全"></a>网络安全</h3><blockquote><p>不论是小到只有单个互联网连接的家庭网络，还是大到拥有数以千计用户的企业网络，<code>网络安全都是计算机网络中不可或缺的一部分</code>。网络安全必须考虑环境以及网络的工具和需求。它必须能够保护数据安全，同时仍要满足网络的服务质量要求。</p></blockquote><p>保护网络涉及使用各种协议、技术、设备和工具来保护数据和防御威胁。<code>威胁因素可能来自外部，也可能来自内部</code>。当今许多外部网络安全威胁都来自互联网。</p><p><strong>网络有几种常见的<code>外部</code>威胁：</strong></p><ul><li><strong>病毒、蠕虫和特洛伊木马</strong> - 这些包括在用户设备上运行的恶意软件或代码。</li><li><strong>间谍软件和广告软件</strong> - 这些是安装在用户设备上的软件类型。这些软件会秘密收集有关用户的信息。</li><li><strong>零日攻击（0day）</strong> - 在出现漏洞的第一天发起的攻击。</li><li><strong>威胁参与者攻击</strong> - 恶意人员攻击用户设备或网络资源。</li><li><strong>拒绝服务攻击</strong> - 使网络设备上的应用和进程减缓或崩溃的攻击</li><li><strong>数据拦截和窃取</strong> - 通过公司网络捕获私人信息的攻击。</li><li><strong>身份盗窃</strong> - 窃取用户的登录凭证来访问私人数据的攻击。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/1_8_1.png" alt="网络威胁"></p><hr><h3 id="安全解决方案"><a href="#安全解决方案" class="headerlink" title="安全解决方案"></a>安全解决方案</h3><blockquote><p>没有哪个单一的解决方案能保护网络不受到各式各样的现有威胁。因此，应使用多个安全解决方案在多个层上实施安全。当一个安全组件无法识别和保护网络时，其他组件可以保护网络。</p></blockquote><p><strong>这些是家庭或小型办公室网络的基本安全组件：</strong></p><ul><li><strong>防病毒和反间谍软件</strong> - 这些应用帮助防止终端设备感染恶意软件。</li><li><strong>防火墙过滤</strong> - 防火墙过滤阻止未经授权的进出网络访问。这可以是基于主机的防火墙系统，用于阻止未经授权访问终端设备，也可以是家用路由器上的基本过滤服务，用于阻止外部人员未经授权访问网络。</li></ul><hr><blockquote><p>企业网络的安全实施通常包含内嵌在网络中的许多组件来监控和过滤流量。理想情况下，所有组件配合工作，从而最大程度地减少维护并提高安全性。大型网络和公司网络使用防病毒、反间谍软件和防火墙过滤，但它们也有其他安全要求:</p></blockquote><p><strong>大型网络和公司网络使用防病毒、反间谍软件和防火墙过滤，但它们也有其他安全要求:</strong></p><ul><li><strong>专用防火墙系统</strong> - 提供更高级的防火墙功能，更详细地过滤大量数据流。</li><li><strong>访问控制列表（ACL）</strong> - 基于IP地址和应用程序，进一步过滤访问和流量转发。</li><li><strong>入侵防御系统（IPS）</strong> - 识别快速扩散的威胁，例如零日攻击或零小时攻击。</li><li><strong>虚拟专用网络（VPN）</strong> - 为远程工作人员提供对组织机构的安全访问。</li></ul><p>网络环境必须考虑网络安全要求以及各种应用和计算要求。家庭环境和企业必须能够保护他们的数据，同时满足每种技术的预期服务质量。此外，实施的安全解决方案必须适应不断发展变化的网络趋势。</p><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/1_8_2.png" alt="安全解决方案"></p><hr><h2 id="协议和模型"><a href="#协议和模型" class="headerlink" title="协议和模型"></a>协议和模型</h2><h3 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h3><blockquote><p>所有通信方法都有三个共同元素：消息源（发送方）、消息目的地（接收方）和信道。</p></blockquote><ul><li><strong>消息源（发送方）</strong> - 是需要向其他人或设备发送消息的人或电子设备。</li><li><strong>消息目的地（接收方）</strong> - 目的地接收并解释消息。</li><li><strong>信道</strong> - 这由为消息从源传送到目的地提供路径的介质组成。</li></ul><hr><blockquote><p>发送的消息由称为“协议”的规则管理。</p><p>协议必须包括：已识别的发送方和接收方、通用语言和语法、传输的速率和时序以及确认或确认要求。常用的计算机协议包括这些要求：消息编码、格式、封装、大小、时序、传输方式。</p></blockquote><ul><li><strong>编码</strong> - 是为了便于传输信息，将信息转换为另一种广为接受的形式。</li><li><strong>解码</strong> - 是编码的逆向过程，用来解释信息。</li><li><strong>消息格式和封装</strong> - 当消息从源发送到目的地时，必须使用特定的格式或结构，取决于消息的类型和传输信道。</li><li><strong>消息大小</strong></li><li><strong>消息时序</strong> - 流量控制、响应超时、访问方法。</li></ul><hr><p><strong>流量控制</strong>：定义了可以发送多少信息以及传递信息的速率。例如，如果一个人讲话太快，对方就难以听清和理解。在网络通信中，源设备和目的设备使用网络协议来协商和管理信息流。</p><p><strong>响应超时</strong>：如果一个人提问之后在合理的时间内没有得到回答，就会认为没有获得回答并作出相应的反应。此人可能会重复这个问题，也可能继续谈话。网络上的主机会使用网络协议来指定等待响应的时长，以及在响应超时的情况下执行什么操作</p><p><strong>访问方法</strong>：这决定人们可以发送消息的时间。</p><hr><p><code>消息传输方式</code>：单播（1：1）、组播（1：n - 1）和广播（1：n）。</p><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/2_1.png" alt="消息传输方式"></p><hr><h3 id="协议"><a href="#协议" class="headerlink" title="协议"></a>协议</h3><blockquote><p>网络协议定义了用于设备之间交换消息的通用格式和规则集。<code>协议由软件、硬件或两者中的终端设备和中间设备实现</code>。</p><p>通过计算机网络发送的消息通常需要使用多种协议，<code>每个网络协议都有自己的功能、格式和通信规则</code>。</p></blockquote><table><thead><tr><th align="center">协议类型</th><th align="left">描述</th></tr></thead><tbody><tr><td align="center"><strong>网络<code>通信</code>协议</strong></td><td align="left">这类协议使两个或多个设备能够在一个或多个网络上通信。以太网技术家族涉及多种协议，例如：IP、TCP、HTTP等。</td></tr><tr><td align="center"><strong>网络<code>安全</code>协议</strong></td><td align="left">这类协议保护数据以提供身份验证、数据完整性和数据加密。安全协议的示例包括安全外壳协议（SSH）、安全套接字层协议（SSL）和传输层安全协议（TLS）。</td></tr><tr><td align="center"><strong><code>路由</code>协议</strong></td><td align="left">这类协议使路由器能够交换路由信息，比较路径 信息，然后选择到达目标网络的 最佳路径。路由协议的示例包括开放最短路径优先协议（OSPF）和边界网关协议（BGP）。</td></tr><tr><td align="center"><strong><code>服务发现</code>协议（设备或服务自动检测协议）</strong></td><td align="left">这类协议用于设备或服务的自动检测。 服务发现协议的示例包括发现用于IP地址分配 服务的动态主机配置协议（DHCP），和用于执行域名到IP地址转换的域名系统（DNS）。</td></tr></tbody></table><hr><h3 id="协议功能"><a href="#协议功能" class="headerlink" title="协议功能"></a>协议功能</h3><blockquote><p>计算机和网络设备使用商定的协议，这些协议提供以下功能：编址，可靠性，流量控制，排序，错误检测和应用程序接口。</p></blockquote><table><thead><tr><th align="center">功能</th><th align="left">描述</th></tr></thead><tbody><tr><td align="center"><strong>编址</strong></td><td align="left">这使用已定义的编址方案来标识消息的发送者和预期的接收者。提供编址的协议示例，包括以太网，IPv4和IPv6。</td></tr><tr><td align="center"><strong>可靠性</strong></td><td align="left">此功能提供了有保证的传输机制，以防消息在传输过程中丢失或损坏。TCP提供可靠的传输。</td></tr><tr><td align="center"><strong>流量控制</strong></td><td align="left">此功能可确保数据在两个通信设备之间高效传输。TCP提供流量控制服务。</td></tr><tr><td align="center"><strong>排序</strong></td><td align="left">此功能唯一地标记每个传输的数据段。接收设备使用排序信息正确地重组信息。如果数据段丢失，延迟或未按顺序接收，这将很有用。TCP提供排序服务。</td></tr><tr><td align="center"><strong>差错检测</strong></td><td align="left">此功能用于确定传输过程中数据是否已损坏。提供差错检测的各种协议包括以太网，IPv4，IPv6和TCP。</td></tr><tr><td align="center"><strong>应用接口</strong></td><td align="left">此功能包含用于网络应用程序之间的进程间通信的信息。例如，访问网页时， 使用HTTP或HTTPS协议在客户端和服务器Web进程 之间进行通信。</td></tr></tbody></table><hr><h3 id="协议簇"><a href="#协议簇" class="headerlink" title="协议簇"></a>协议簇</h3><blockquote><p>在许多情况下，<code>协议必须能够与其他协议配合使用</code>，以便让在线体验为您提供网络通信所需的一切。<code>协议簇旨在相互无缝协作</code>。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/2_3_1.png" alt="协议簇"></p><p>执行某种通信功能所需的一组内在相关协议称为协议簇。</p><p>协议栈展示了协议簇中的单个协议是如何实施的。协议显示为分层结构，每种上层服务都依赖于其余下层协议所定义的功能。协议栈的下层负责通过网络传输数据和向上层提供服务，而上层则负责处理发送的消息内容。</p><hr><p>自20世纪70年代以来，出现了几种不同的协议簇，<code>有些是由一个标准组织开发的，有些是由不同的供应商开发的</code>。</p><p>在网络通信和互联网的发展过程中，出现了几个<code>相互竞争的协议簇</code>，如图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/2_3_2.png" alt="相互竞争的协议簇"></p><hr><h3 id="TCP-IP-协议示例"><a href="#TCP-IP-协议示例" class="headerlink" title="TCP/IP 协议示例"></a>TCP/IP 协议示例</h3><ul><li><p>TCP/IP 协议可用于应用层、传输层和互联网层。网络接入层中没有 TCP/IP 协议。最常见的网络接入层LAN协议是以太网和WLAN(无线LAN)协议。网络接入层协议负责通过物理介质传输 IP 数据包。</p></li><li><p>TCP/IP 是当今网络和互联网使用的协议簇。</p></li><li><p>TCP/IP 为供应商和制造商提供了两个重要的方面:开放标准协议簇和基于标准的协议簇。</p></li><li><p>TCP/IP 协议簇通信过程支持这样的过程：web 服务器封装 web 页面并将其发送到客户端，以及客户端解封 web 页面以便在 web 浏览器中显示。</p></li></ul><blockquote><p>图中显示了用于在主机的 web 浏览器和 web 服务器之间发送数据包的三种 TCP/IP 协议的示例。HTTP、TCP 和 IP 是所使用的 TCP/IP 协议。在网络接入层，示例中使用了以太网。然而，这里也可以使用一种无线标准，如WLAN或蜂窝服务。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/2_3_3.png" alt="示例"></p><h3 id="TCP-IP-协议簇"><a href="#TCP-IP-协议簇" class="headerlink" title="TCP/IP 协议簇"></a>TCP/IP 协议簇</h3><p>如今，TCP/IP 协议簇包含许多协议，并且不断发展以支持新服务。图中显示一些较为常用的协议。</p><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/2_4.png" alt="TCP/IP 协议簇"></p><hr><h3 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h3><blockquote><p>域名系统</p></blockquote><ul><li><strong>DNS</strong> - 域名系统。将域名转换为 IP 地址。</li></ul><blockquote><p>主机配置</p></blockquote><ul><li><p><strong>DHCPv4</strong> - IPv4动态主机配置协议。DHCPv4 服务器在启动时动态地将 IPv4 编址信息分配给 DHCPv4 客户端，并允许在不再需要时重新使用这些地址。</p></li><li><p><strong>DHCPv6</strong> - IPv6动态主机配置协议。DHCPv6类似于DHCPv4。DHCPv6服务器在启动时动态地将IPv6编址信息分配给DHCPv6客户端。</p></li><li><p><strong>SLAAC</strong> - 无状态地址自动配置。一种允许设备在不使用DHCPv6服务器的情况下获得其IPv6编址信息的方法。</p></li></ul><blockquote><p>邮件</p></blockquote><ul><li><p><strong>SMTP</strong> - 简单邮件传输协议。使客户端能够将邮件发送到邮件服务器，并使服务器能够将邮件发送到其他服务器。</p></li><li><p><strong>POP3</strong> - 邮局协议第 3 版。使客户端能够从邮件服务器检索电子邮件并将电子邮件下载到客户端本地邮件应用程序。</p></li><li><p><strong>IMAP</strong> - 互联网消息访问协议。使客户端能够访问存储在邮件服务器上的电子邮件，并在服务器上维护电子邮件。</p></li></ul><blockquote><p>文件传输</p></blockquote><ul><li><p><strong>FTP</strong> - 文件传输协议。它设置规则，使得一台主机上的用户能够通过网络访问另一台主机或向其传输文件。FTP是一种可靠、面向连接且进行确认的文件传输协议。</p></li><li><p><strong>SFTP</strong> - SSH文件传输协议。作为安全外壳 (SSH)协议的扩展，SFTP可用于建立安全的文件传输会话，在该会话中对文件传输进行加密。SSH 是一种安全远程登录的方法，通常用于访问设备的命令行。</p></li><li><p><strong>TFTP</strong> - 简单文件传输协议。这是一个简单的，无连接的文件传输协议，使用尽最大努力、无需确认的文件传输方式。它使用的开销比FTP少。</p></li></ul><blockquote><p>Web和Web服务</p></blockquote><ul><li><p><strong>HTTP</strong> - 超文本传输协议。这是有关在万维网上交换文本、图形图像、音频、视频以及其他多媒体文件的一组规则集。</p></li><li><p><strong>HTTPS</strong> - 安全HTTP。这是一种安全的HTTP形式，它对在万维网上交换的数据进行加密。</p></li><li><p><strong>REST</strong> - 具象状态传输协议。它使用应用程序编程接口 (API) 和 HTTP 请求创建 Web 应用程序的 Web 服务。</p></li></ul><hr><h3 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h3><blockquote><p>面向连接</p></blockquote><ul><li><strong>TCP</strong> - 传输控制协议。它使运行在不同主机上的进程之间能够进行可靠的通信，并提供可靠的、需要确认的传输，以确保传输成功。</li></ul><blockquote><p>无连接</p></blockquote><ul><li><strong>UDP</strong> - 用户数据报协议。它允许一台主机上运行的进程向另一台主机上运行的进程发送数据包。但是，UDP不会确认数据报传输是否成功。</li></ul><hr><h3 id="互联网层"><a href="#互联网层" class="headerlink" title="互联网层"></a>互联网层</h3><blockquote><p>Internet 协议</p></blockquote><ul><li><p><strong>IPv4</strong> - 互联网协议第 4 版。它接收来自传输层的消息段，将消息打包成数据包，并为通过网络进行端到端传递的数据包进行地址分配。IPv4 使用 32 位地址。</p></li><li><p><strong>IPv6</strong> - 互联网协议第 6 版。与 IPv4 类似，但使用 128 位地址。</p></li><li><p><strong>NAT</strong> - 网络地址转换。将私有网络 IPv4 地址转换为全球唯一的公有 IPv4 地址。</p></li></ul><blockquote><p>消息传送</p></blockquote><ul><li><p><strong>ICMPv4</strong> - IPv4 互联网控制消息协议。目的主机针对数据包传输中出现的错误，向源主机提供反馈。</p></li><li><p><strong>ICMPv6</strong> - 用于 IPv6 的ICMP。与 ICMPv4 类似的功能，但用于 IPv6 数据包。</p></li><li><p><strong>ICMPv6 ND</strong> - IPv6 邻居发现。包括用于地址解析和重复地址检测的四个协议消息。</p></li></ul><blockquote><p>路由协议</p></blockquote><ul><li><p><strong>OSPF</strong> - 开放最短路径优先协议。它使用基于区域的分层设计的链路状态路由协议。OSPF是一种开放式标准内部路由协议。</p></li><li><p><strong>EIGRP</strong> — 增强型内部网关路由协议这是一种思科开发的开放标准路由协议，使用基于带宽、延迟、负载和可靠性的复合度量。</p></li><li><p><strong>BGP</strong> - 边界网关协议。这是一种开放标准的外部网关路由协议，用于互联网服务提供商(ISP)之间。BGP 还通常用于 ISP 与其大型私有客户端之间来交换路由信息。</p></li></ul><h3 id="网络接入层"><a href="#网络接入层" class="headerlink" title="网络接入层"></a>网络接入层</h3><blockquote><p>地址解析</p></blockquote><ul><li><strong>ARP</strong> - 地址解析协议。提供 IPv4 地址与硬件地址之间的动态地址映射。</li></ul><blockquote><p>数据链路协议</p></blockquote><ul><li><p><strong>以太网</strong> - 为网络接入层的布线和信令标准定义规则。</p></li><li><p><strong>WLAN</strong> - 无线局域网。定义 2.4 GHz 和 5 GHz 无线电频率的无线信号规则。</p></li></ul><hr><h3 id="开放标准"><a href="#开放标准" class="headerlink" title="开放标准"></a>开放标准</h3><p>开放标准<code>鼓励互操作性、竞争和创新</code>。</p><p>关于这一点有个不错的例子，您需要购买一个家用无线路由器。有出自众多供应商的许多不同路由器供您选择。这些路由器都融合了标准协议，例如 IPv4、IPv6、DHCP、SLAAC、以太网和 802.11无线局域网。这些开放标准还能够使运行 Apple 的 OS X 操作系统的客户端从运行 Linux 操作系统的 Web 服务器上下载网页。这是因为两种操作系统都实施开放标准协议，例如 TCP/IP 协议簇中的协议。</p><p><code>标准组织通常是中立于厂商的非营利性组织</code>。它的建立是为了发展和推广开放标准的概念。这些组织对维护一个开放的互联网，允许自由访问规范和协议并允许所有供应商实施这些规范和协议起着至关重要的作用。</p><p><code>标准组织可能会独立起草规则集，也可能在其他情况下将某个专有协议作为一个标准的基础</code>。如果要使用专有协议，通常就会涉及到创建了该协议的供应商。</p><hr><h3 id="互联网标准组织"><a href="#互联网标准组织" class="headerlink" title="互联网标准组织"></a>互联网标准组织</h3><p>各个组织在互联网和 TCP/IP 协议标准的推广和建立方面具有不同的责任。</p><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/2_5_1.png" alt="互联网标准组织"></p><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/2_5_2.png" alt="参与互联网开发和支持的标准组织"></p><hr><h3 id="电子和通信标准组织"><a href="#电子和通信标准组织" class="headerlink" title="电子和通信标准组织"></a>电子和通信标准组织</h3><ul><li><p><strong>电气电子工程师协会（**</strong>IEEE**，读作“I-triple-E”）– 是为致力于推动诸多行业领域的技术创新和标准创建的工程师设立的组织，涉及的领域包括电力与能源、医疗保健、电信和网络。重要的IEEE网络标准包括802.3以太网和802.11无线局域网标准。可在互联网上搜索其他IEEE网络标准。</p></li><li><p><strong>美国电子工业协会（**</strong>EIA**）- 该组织因其在用于安装网络设备的电线、连接器和19英寸机架方面的标准而知名。</p></li><li><p><strong>电信工业协会（**</strong>TIA**） - 该组织负责开发各种领域的通信标准，包括无线电设备、手机信号塔、IP 语音（VoIP）设备和卫星通信等。</p></li><li><p><strong>国际电信联盟电信标准局（**</strong>ITU-T**）- 是最大最早的通信标准组织之一。ITU-T定义视频压缩、Internet协议电视（IPTV）和宽带通信的标准，例如数字用户线路（DSL）。</p></li></ul><hr><h3 id="参考模型"><a href="#参考模型" class="headerlink" title="参考模型"></a>参考模型</h3><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/2_6.png" alt="开放式系统互联(OSI)参考模型 TCP/IP 参考模型"></p><p><code>OSI 模型有七层</code>：</p><blockquote><p>OSI 参考模型详细罗列了每一层可以实现的功能和服务。 这种类型的模型通过描述特定层必须完成什么但不规定如何完成来保持各类网络协议和服务中的一致性。</p></blockquote><table><thead><tr><th align="center">Num.</th><th align="center">Layer.</th><th align="left">描述</th></tr></thead><tbody><tr><td align="center">7</td><td align="center">应用层</td><td align="left">应用层包含用于进程间通信的协议。</td></tr><tr><td align="center">6</td><td align="center">表示层</td><td align="left">表示层用常用方式表示数据在应用层服务之间的传输。</td></tr><tr><td align="center">5</td><td align="center">会话层</td><td align="left">会话层向表示层提供服务，组织对话并管理数据交换。</td></tr><tr><td align="center">4</td><td align="center">传输层</td><td align="left">传输层定义服务以对数据进行分段，传输和重组，以进行终端设备之间的单独通信。</td></tr><tr><td align="center">3</td><td align="center">网络层</td><td align="left">网络层为所标识的终端设备之间通过网络交换独立的数据的片段提供服务。</td></tr><tr><td align="center">2</td><td align="center">数据链路层</td><td align="left">数据链路层协议描述了设备之间通过公共介质交换数据帧的方法。</td></tr><tr><td align="center">1</td><td align="center">物理层</td><td align="left">物理层协议描述了机械的、电气的、功能的和程序化的方法，以激活，维护和解除物理连接， 实现与网络设备之间的位设备。</td></tr></tbody></table><hr><p><code>TCP/IP 模型包括四层</code>：</p><blockquote><p>用于网际通信的 TCP/IP 协议模型建立于二十世纪七十年代早期，<code>有时称为互联网模型</code>。 这种类型的模型与特定的协议簇结构紧密配合。TCP/IP 模型描述了 TCP/IP 协议簇中每个协议层实现的功能，因此属于协议模型。TCP/IP 也用作参考模型。下表显示了TCP/IP模型每一层的详细信息。</p></blockquote><table><thead><tr><th align="center">Num.</th><th align="center">Layer.</th><th align="left">描述</th></tr></thead><tbody><tr><td align="center">4</td><td align="center">应用层</td><td align="left">向用户提供数据，以及编码和对话控制。</td></tr><tr><td align="center">3</td><td align="center">传输层</td><td align="left">支持各种设备之间通过不同网络通信。</td></tr><tr><td align="center">2</td><td align="center">互联网层</td><td align="left">确定通过网络的最佳路径。</td></tr><tr><td align="center">1</td><td align="center">网络接入层</td><td align="left">控制组成网络的硬件设备和介质。</td></tr></tbody></table><hr><h3 id="OSI-模型与-TCP-IP-模型的比较"><a href="#OSI-模型与-TCP-IP-模型的比较" class="headerlink" title="OSI 模型与 TCP/IP 模型的比较"></a>OSI 模型与 TCP/IP 模型的比较</h3><blockquote><p>还可以根据 OSI 参考模型描述构成 TCP/IP 协议簇的协议。在 OSI 模型中，TCP/IP 模型的网络接入层和应用层被进一步划分，用于描述这些协议层需要实现的不同功能。</p></blockquote><p>TCP/IP 协议簇在网络接入层并没有指定通过物理介质传输时使用的协议，而只是描述了从互联网层到物理网络协议的传递。而 OSI 模型第 1 层和第 2 层则论述了接入介质所需的步骤以及通过网络发送数据的物理手段。</p><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/2_7.png" alt="对比图"></p><hr><h3 id="数据封装"><a href="#数据封装" class="headerlink" title="数据封装"></a>数据封装</h3><blockquote><p>消息分段 -&gt; 排序 -&gt; 封装 -&gt; 解封</p></blockquote><ul><li><p><strong><code>消息分段</code></strong>主要有两个优点：</p><ul><li><p>通过从源设备向目的地<code>发送</code>一个个<code>小片段</code>，就可以在网络上交替发送许多不同会话。这称为<code>“多路复用”</code>。</p></li><li><p>分段可以<code>增强网络通信的效率</code>。如果有部分消息未能传送到目的，则<code>只需重新传输丢失的部分</code>。</p></li></ul></li><li><p>TCP负责对单独的数据段进行 <strong><code>排序</code></strong>。一段数据在任意协议层的表示形式称为协议数据单元（PDU）。</p></li><li><p>在 <strong><code>封装</code></strong>过程中，后续的每一层都根据使用的协议封装其从上一层接收的PDU。在网络中发送消息时，封装过程自上而下工作。</p></li><li><p>接收主机上的过程称为“解封”。<strong><code>解封</code></strong>是接收设备用来删除一个或多个协议报头的过程。数据在朝着最终用户应用程序沿协议栈向上移动的过程中被解封。</p></li></ul><hr><h3 id="数据访问"><a href="#数据访问" class="headerlink" title="数据访问"></a>数据访问</h3><blockquote><p>网络层（第3层）和数据链路层（第2层）负责将数据从源设备传输到目的设备。两层中的协议都包含源地址和目的地址，但它们的地址具有不同的用途。</p></blockquote><ul><li><p><strong>网络层源地址和目的地址</strong> - 负责将IP数据包从始源设备传输到可能处于同一网络或远程网络中的最终目的设备。</p></li><li><p><strong>数据链路层源地址和目的地址</strong> – 负责将数据链路层帧从一个网络接口卡（NIC）传输到同一网络上的另一个NIC。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/2_8.png" alt="地址的不同用途"></p><hr><h3 id="网络层（第3层）逻辑地址"><a href="#网络层（第3层）逻辑地址" class="headerlink" title="网络层（第3层）逻辑地址"></a>网络层（第3层）逻辑地址</h3><blockquote><p>IP 地址是网络层（或第 3 层）逻辑地址，用于将 IP 数据包从原始源设备传输到最终目的设备，如图所示。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/2_9.png" alt="IP数据包传输过程"></p><p><code>IP 数据包</code>包含两个IP地址：</p><ul><li><p><strong>源IP地址</strong> - <code>发送</code>设备（数据包的<code>始源设备</code>）的IP地址。</p></li><li><p><strong>目的IP地址</strong> - <code>接收</code>设备（数据包的<code>最终目的设备</code>）的IP地址。</p></li></ul><p>IP地址表示始源IP地址和最终目的IP地址。<code>无论源和目的地在同一IP网络上还是在不同的IP网络上，都是如此</code>。</p><hr><p><code>IP 地址</code>包含两部分：</p><ul><li><p><strong>网络部分（IPv4）或前缀（IPv6）</strong> – 地址<code>最左边的部分</code>，<code>表示</code>IP地址是哪个<code>网络</code>的<code>成员</code>。同一网络中所有设备的地址都有相同的网络部分</p></li><li><p><strong>主机部分（IPv4）或接口ID（IPv6）</strong> - 地址的<code>其余部分</code>，用于<code>识别</code>网络上的<code>特定设备</code>。这部分对于网络中的每个设备或接口都是唯一的。</p></li></ul><hr><h3 id="同一网络（局域网）中的设备"><a href="#同一网络（局域网）中的设备" class="headerlink" title="同一网络（局域网）中的设备"></a>同一网络（局域网）中的设备</h3><p>在本示例中，客户端计算机 PC1 与<strong>同一 IP 网络</strong>中的 FTP 服务器进行通信。</p><ul><li><p><strong>源IPv4地址</strong> - 发送设备的IPv4地址，即客户端计算机PC1：192.168.1.110。</p></li><li><p><strong>目的IPv4地址</strong> - 接收设备的IPv4地址，即服务器，Web服务器：172.16.1.99。</p></li></ul><p>注意图中，源IPv4地址的网络部分和目的IPv4地址的网络部分是相同的，因此，源和目的地在同一个网络上。</p><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/2_10.png" alt="同一网络"></p><hr><h3 id="数据链路层（第2层）地址的作用：相同的-IP-网络（局域网）"><a href="#数据链路层（第2层）地址的作用：相同的-IP-网络（局域网）" class="headerlink" title="数据链路层（第2层）地址的作用：相同的 IP 网络（局域网）"></a>数据链路层（第2层）地址的作用：相同的 IP 网络（局域网）</h3><blockquote><p>当IP数据包的发送方和接收方处于 <strong><code>同一网络</code></strong>中时，数据链路层帧将直接将其发送到接收设备。在以太网中，数据链路层地址称为以太网介质访问控制（MAC）地址。</p></blockquote><p><code>MAC 地址</code>是以太网网卡的物理内嵌地址。</p><ul><li><p><strong>源MAC地址</strong> - 这是发送封装有IP数据包的数据链路帧的设备的数据链路地址，或以太网 MAC 地址。以太网网卡的MAC地址为：AA-AA-AA-AA-AA-AA，以十六进制表示法表示。</p></li><li><p><strong>目的MAC地址</strong> - 当接收设备与发送设备在同一网络中时，这就是接收设备的数据链路层地址。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/2_11.png" alt="同一网络"></p><hr><h3 id="网络层地址的作用"><a href="#网络层地址的作用" class="headerlink" title="网络层地址的作用"></a>网络层地址的作用</h3><blockquote><p>当数据包的发送方与接收方位于 <strong><code>不同网络</code></strong>时，源 IP 地址和目的 IP 地址将代表位于不同网络的主机。这将由目的主机 IP 地址的网络部分来表明。</p></blockquote><ul><li><p><strong>源IPv4地址</strong> – 发送设备的IPv4地址，即客户端计算机PC1：192.168.1.110。</p></li><li><p><strong>目的IPv4地址</strong> – 接收设备的IPv4地址，即服务器，Web服务器：172.16.1.99。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/2_12.png" alt="不同网络"></p><hr><h3 id="数据链路层地址的作用：不同的IP网络"><a href="#数据链路层地址的作用：不同的IP网络" class="headerlink" title="数据链路层地址的作用：不同的IP网络"></a>数据链路层地址的作用：不同的IP网络</h3><blockquote><p>当 IP 数据包的发送方和接收方位于不同网络时，以太网数据链路帧不能直接发送到目的主机，因为在发送方的网络中无法直接到达该主机。必须将以太网帧发送到称为路由器或默认网关的另一设备。在我们的示例中，默认网关是 R1。R1 有一个以太网数据链路地址与 PC1 位于同一网络中。这使 PC1 能够直接到达路由器。</p></blockquote><ul><li><p>源 MAC 地址 - 发送设备 PC1 的以太网 MAC 地址。PC1 以太网接口的 MAC 地址是 AA-AA-AA-AA-AA-AA。</p></li><li><p>目的 MAC 地址 - 当接收设备（目的 IP 地址）与发送设备位于不同网络时，发送设备使用默认网关或路由器的以太网 MAC 地址。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/2_13.png" alt="不同网络"></p><hr><h3 id="数据链路层（第2层）地址"><a href="#数据链路层（第2层）地址" class="headerlink" title="数据链路层（第2层）地址"></a>数据链路层（第2层）地址</h3><p>数据链路层地址的作用是<code>将数据链路层帧从一个网络接口传输到同一网络中的另一个网络接口</code>。</p><p>在IP数据包可以通过有线或无线网络<code>发送之前</code>，必须将其<code>封装成数据链路层帧</code>，以便通过物理介质传输。</p><blockquote><p>当IP数据包从主机到路由器、从路由器到路由器和最终从路由器到主机传输时，沿途中的每个点上都会将IP数据包封装到新的数据链路层帧中。每个数据链路层帧包含发送帧的NIC卡的源数据链路层地址和接收帧的NIC卡的目的数据链路层地址。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/2_13_1.png" alt="主机到路由器"></p><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/2_13_2.png" alt="路由器到路由器"></p><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/2_13_3.png" alt="路由器到服务器"></p><blockquote><p>第2层，数据链路层协议仅用于在同一网络中的NIC之间传输数据包。路由器会将其NIC上收到的第2层信息删除，添加新的数据链路层信息，然后将数据包从通往最终目的地路径的出口NIC上转发出去。</p></blockquote><p>IP数据包会封装到包含以下数据链路层信息的数据链路层帧中：</p><ul><li><p><strong>源数据链路层地址</strong> - 发送数据链路层帧的网卡的物理地址。</p></li><li><p><strong>目的数据链路层地址</strong> - 接收数据链路层帧的NIC的物理地址。该地址为下一跳路由器，或最终目的设备的地址。</p></li></ul><hr><h2 id="物理层（第1层）"><a href="#物理层（第1层）" class="headerlink" title="物理层（第1层）"></a>物理层（第1层）</h2><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/3_1.png" alt="层级示意图"></p><blockquote><p>OSI物理层通过网络介质传输构成数据链路层帧的比特（位）。该层从数据链路层接收完整的帧，并将这些帧编码为一系列信号，传输到本地介质上。帧由经过编码的比特（位）构成，这些位可以被终端设备或中间设备接收。</p></blockquote><h3 id="物理层标准"><a href="#物理层标准" class="headerlink" title="物理层标准"></a>物理层标准</h3><blockquote><p>OSI上层的协议及操作是使用软件工程师和计算机科学家设计的软件来执行的。TCP/IP 协议簇中的服务和协议是由互联网工程任务组（IETF）定义的。</p></blockquote><p><code>物理层由工程师开发的电子电路、介质和连接器组成</code>。因此，由相关的电气和通信工程组织定义管制该硬件的标准是很合适的。</p><p>在物理层标准的制定和维护中涉及许多不同的国际和国家组织、政府监管机构和私营企业。例如，物理层硬件、介质、编码和信令标准由以下组织定义和管理：</p><ul><li><p><strong>国际标准化组织（ISO）</strong></p></li><li><p><strong>电信工业协会/电子工业协会（TIA/EIA）</strong></p></li><li><p><strong>国际电信联盟（ITU）</strong></p></li><li><p><strong>美国国家标准学会（ANSI）</strong></p></li><li><p><strong>电气电子工程师协会（IEEE）</strong></p></li><li><p><strong>国家级电信管理局：包括美国联邦通信委员会（FCC）和欧洲电信标准协会 (ETSI）</strong></p></li></ul><p>除了这些组织之外，通常还有<code>地方性布线标准组织</code>，例如 <strong>CSA：（加拿大标准协会）</strong>、<strong>CENELEC（欧洲电工标准化委员会）</strong>和 <strong>JSA/JIS（日本标准协会）</strong>，开发<code>本地规范</code>。</p><hr><h3 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h3><blockquote><p>编码或线路编码是一种将数据位流转换为预先定义“代码”的方法。这些代码就是位的编组，用于提供一种可预测模式，以便发送者和接收者均能识别。换句话说，<strong>编码是用于表示数字信息的方法或模式</strong>。这类似于摩尔斯电码如何使用一系列点和短划线编码消息。</p></blockquote><p>例如，<code>曼彻斯特编码的0位表示为从高到低的电压转换，而1位表示为从低到高的电压转换</code>。曼彻斯特编码的一个示例如图所示。转换在每个位周期的中间进行。这种类型的编码用于10Mbps的以太网。更快的数据速率需要更复杂的编码。</p><p>曼彻斯特编码用于较旧的以太网标准，如：10BASE-T（双绞线以太网）。 以太网 100BASE-TX使用4B/5B编码。1000BASE-T使用8B/10B编码。</p><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/3_2.png" alt="曼彻斯提编码"></p><hr><h3 id="信令"><a href="#信令" class="headerlink" title="信令"></a>信令</h3><blockquote><p>物理层必须在介质上生成代表“1”和“0”的电信号、光信号或无线信号。<strong>表示位的方法称为信令方法</strong>。物理层标准必须定义哪种类型的信号代表“1”，而哪种类型的信号代表“0”。这可以简单到只是改变电信号或光脉冲的级别。例如，长脉冲可能代表 1，而短脉冲可能代表 0。</p></blockquote><p>这类似于莫尔斯电码中使用的信令方法，可以使用一系列开关音、灯或点击通过电话线或在海上船舶之间发送文本。</p><ul><li>铜缆</li></ul><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/3_3_1.png"><ul><li>光缆</li></ul><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/3_3_2.png"><ul><li>无线介质</li></ul><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/3_3_3.png"><hr><h3 id="带宽"><a href="#带宽" class="headerlink" title="带宽"></a>带宽</h3><p>不同的物理介质所支持的位传输速率不同。数据传输的讨论通常都会提及带宽。</p><p><strong>带宽是介质承载数据的能力。</strong></p><blockquote><p>数字带宽可以测量在给定时间内从一个位置流向另一个位置的数据量。带宽通常使用千位每秒（kbps）、兆位每秒（Mbps）或千兆位每秒（Gbps）来度量。有时带宽被认为是位传输的速度，而这是不准确的。例如，在 10Mbps 和 100Mbps 的以太网上，都以电的速率发送位。不同的是每秒传输的位的数量。</p></blockquote><p>多种因素的结合，决定了网络的实际带宽：</p><p>物理介质的属性</p><ul><li><p>信令和检测网络信号所选用的技术</p></li><li><p>物理介质属性、当前技术和物理法则共同扮演确定可用带宽的角色。</p></li></ul><table><thead><tr><th align="center">带宽单位</th><th align="center">缩写</th><th align="left">单位</th></tr></thead><tbody><tr><td align="center">位/秒</td><td align="center">bps</td><td align="left">1 bps = 带宽的基本单位</td></tr><tr><td align="center">千位/秒</td><td align="center">Kbps</td><td align="left">1 Kbps = 1,000 bps = 10^3bps</td></tr><tr><td align="center">兆位/秒</td><td align="center">Mbps</td><td align="left">1 Mbps = 1,000,000 bps = 10^6 bps</td></tr><tr><td align="center">千兆位/秒</td><td align="center">Gbps</td><td align="left">1 Gbps = 1,000,000,000 bps = 10^9 bps</td></tr><tr><td align="center">兆兆位/秒</td><td align="center">Tbps</td><td align="left">1 Tbps = 1,000,000,000,000 bps = 10^12 bps</td></tr></tbody></table><hr><h3 id="带宽术语"><a href="#带宽术语" class="headerlink" title="带宽术语"></a>带宽术语</h3><p>用来衡量带宽质量的术语包括:</p><ul><li><p><strong>延迟</strong></p></li><li><p><strong>吞吐量</strong></p></li><li><p><strong>实际吞吐量</strong></p></li></ul><hr><h3 id="延迟"><a href="#延迟" class="headerlink" title="延迟"></a>延迟</h3><blockquote><p>延迟是指数据从一个给定点传送到另一给定点所用的时间，包括时延。</p></blockquote><p>在拥有多个网段的网际网络或网络中，<code>吞吐量不能超过从源到目的地之间路径的最低链路</code>。纵使这些网段全部或多数具备高速带宽，它也只使用那段低速率路径的吞吐量，这就会造成整个网络的吞吐量瓶颈。</p><h3 id="吞吐量"><a href="#吞吐量" class="headerlink" title="吞吐量"></a>吞吐量</h3><blockquote><p>吞吐量是给定时段内通过介质传输的位的量度。</p></blockquote><p>由于各种因素的影响，吞吐量经常与物理层实施中指定的带宽不符。吞吐量通常低于带宽。影响吞吐量的因素有很多:</p><ul><li><p>流量大小</p></li><li><p>流量类型</p></li><li><p>从源通往目的地的过程中遇到的网络设备数量所造成的延时。</p></li></ul><h3 id="实际吞吐量"><a href="#实际吞吐量" class="headerlink" title="实际吞吐量"></a>实际吞吐量</h3><blockquote><p>用于评估可用数据传输的第三个测量标准称为实际吞吐量。实际吞吐量是在给定时间段内传输的有用数据的衡量标准。</p></blockquote><p>实际吞吐量就是<code>吞吐量减去建立会话、确认、封装和重传所产生的流量开销</code>。</p><p>实际吞吐量总是低于吞吐量，而吞吐量通常低于带宽。</p><hr><h2 id="数据链路层（第2层）"><a href="#数据链路层（第2层）" class="headerlink" title="数据链路层（第2层）"></a>数据链路层（第2层）</h2><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/4_1.png" alt="层级示意图"></p><blockquote><p>OSI模型的数据链路层（第2层）为物理网络准备网络数据。数据链路层负责网络接口卡（NIC）到网络接口卡的通信。数据链路层执行以下操作：</p></blockquote><ul><li><p>允许上层访问介质。上层协议完全不知道用于转发数据的介质类型。</p></li><li><p>接受数据，通常是第 3 层数据包（即 IPv4 或 IPv6），并将它们封装到第 2 层帧中。</p></li><li><p>控制数据在介质上的放置和接收方式，</p></li><li><p>通过网络介质在终端之间交换帧。</p></li><li><p>接收封装的数据，通常是第 3 层数据包，并将它们定向到适当的上层协议。</p></li><li><p>执行错误检测并拒绝任何损坏的帧。</p></li></ul><hr><p>在计算机网络中，<code>节点是可以沿通信路径接收、创建、存储或转发数据的设备</code>。节点可以是笔记本电脑或移动电话等终端设备，也可以是中间设备如以太网交换机。</p><p>如果没有数据链路层，则网络层协议（如：IP）必须提供连接到传输路径中可能存在的各种类型介质所需的连接。此外，<code>每当开发出一种新的网络技术或介质时，IP必须做出相应调整</code>。</p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/4_1_1.png"><hr><h3 id="IEEE-802LAN-MAN-数据链路子层"><a href="#IEEE-802LAN-MAN-数据链路子层" class="headerlink" title="IEEE 802LAN/MAN 数据链路子层"></a>IEEE 802LAN/MAN 数据链路子层</h3><blockquote><p>IEEE 802 LAN/MAN 标准专用于以太网局域网、无线局域网（WLAN）、无线个人区域网（WPAN）和其他类型的局域网和城域网。IEEE 802 LAN/MAN 数据链路层由以下两个子层组成：</p></blockquote><ul><li><p><strong>逻辑链路控制（LLC）</strong> - 这个 IEEE 802.2 子层在上层的网络软件与下层的设备硬件之间进行通信。它放入帧中的信息用于确定帧所使用的网络层协议。此信息允许多个第 3 层协议（如 IPv4 和 IPv6）使用相同的网络接口和介质。</p></li><li><p><strong>介质访问控制（MAC）</strong> - 在硬件上实现这个子层（IEEE 802.3、802.11 或 802.15）。它负责数据封装和介质访问控制。它提供数据链路层寻址，并与各种物理层技术集成。</p></li></ul><hr><p>该图显示了数据链路层的两个子层（LLC 和 MAC）。</p><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/4_2.png" alt="数据链路子层"></p><blockquote><p>LLC 子层获取网络协议数据（通常是 IPv4 或 IPv6数据包）并加入第2层控制信息，帮助将数据包传送到目的节点。</p></blockquote><p>MAC 子层控制网卡和负责在有线或无线LAN/MAN介质上发送和接收数据的其他硬件。</p><p>MAC 子层提供数据封装：</p><ul><li><p><strong>帧定界</strong> - 在成帧过程中提供重要的定界符，用来标识帧中的字段。这些定界符位可以在发送节点与接收节点之间提供同步。</p></li><li><p><strong>编址</strong> - 提供源和目的编址，用于在同一共享介质上的设备之间传输第 2 层帧。</p></li><li><p><strong>错误检测</strong> - 包含一个帧尾，用于检测传输错误。</p></li></ul><p>MAC 子层还提供介质访问控制，允许多个设备通过共享（半双工）介质进行通信。全双工通信不需要访问控制。</p><hr><h3 id="提供介质访问"><a href="#提供介质访问" class="headerlink" title="提供介质访问"></a>提供介质访问</h3><blockquote><p>在数据包从本地主机传送到远程主机的过程中，其遇到的各种网络环境可能具有不同的特性。</p></blockquote><p>例如，以太网 LAN 通常由许多争用网络介质访问的主机组成。</p><p>MAC 子层解决了这个问题。对于串行链路，访问方法可能只包括两个设备之间的直接连接，通常是两个路由器。因此，它们不需要 IEEE 802 MAC 子层所使用的技术。</p><blockquote><p>路由器接口将数据包封装到适当的帧中。使用合适的介质访问控制方法来访问每个链路。在任意指定的网络层数据包交换过程中，可能存在多次数据链路层和介质的转换。</p></blockquote><p>在路径上的每一跳，路由器都执行以下第 2 层功能：</p><ol><li>从介质接受帧</li><li>解封帧</li><li>将数据包重新封装到新帧中</li><li>从适合该物理网络网段的介质转发新帧</li></ol><hr><h3 id="数据链路层（第2层）标准"><a href="#数据链路层（第2层）标准" class="headerlink" title="数据链路层（第2层）标准"></a>数据链路层（第2层）标准</h3><blockquote><p>与 TCP/IP 的上层协议不同，数据链路层协议通常不是由征求意见 (RFC) 文档定义的。互联网工程任务组 (IETF) 虽然维护着 TCP/IP 协议簇上层的工作协议和服务，但它没有定义TCP/IP模型的网络接入层的功能和操作。</p></blockquote><p>定义适用于网络接入层（即，OSI的物理和数据链路层）的开放标准和协议的工程组织包括：</p><ul><li><strong>电气电子工程师协会 (IEEE)</strong></li><li><strong>国际电信联盟 (ITU)</strong></li><li><strong>国际标准化组织 (ISO)</strong></li><li><strong>美国国家标准学会 (ANSI)</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/4_3.png" alt="工程组织徽标"></p><hr><h3 id="拓扑"><a href="#拓扑" class="headerlink" title="拓扑"></a>拓扑</h3><blockquote><p>网络拓扑是指网络设备及它们之间的互连布局或关系。</p></blockquote><p>描述 LAN 和 WAN 网络时使用两种类型的拓扑：</p><p><strong>物理拓扑</strong> - 标识物理连接，以及终端设备和中间设备（即，路由器、交换机和无线接入点）如何互连。这个拓扑还可能包括特定的设备位置，如房间号和设备机架上的位置。物理拓扑通常是点对点拓扑或星型拓扑。</p><p><strong>逻辑拓扑</strong> - 是指网络将帧从一个节点传输到另一节点的方法。此拓扑使用设备接口和第 3 层 IP 寻址方案识别虚拟连接。</p><blockquote><p>在控制对介质的数据访问时，数据链路层“看见”的是网络的逻辑拓扑。正是<strong>逻辑拓扑在影响网络成帧和介质访问控制的类型</strong>。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/4_4_1.png" alt="物理拓扑"></p><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/4_4_2.png" alt="逻辑拓扑"></p><hr><h3 id="WAN-拓补"><a href="#WAN-拓补" class="headerlink" title="WAN 拓补"></a>WAN 拓补</h3><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/4_5_1.png" alt="点对点"></p><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/4_5_2.png" alt="中心辐射型"></p><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/4_5_3.png" alt="网状"></p><blockquote><p>混合拓扑是任何拓扑的变体或组合。例如，部分网状就是一种混合拓扑，因为其中一些而并非所有的终端设备都是互连的。</p></blockquote><hr><h3 id="点对点-WAN-拓扑"><a href="#点对点-WAN-拓扑" class="headerlink" title="点对点 WAN 拓扑"></a>点对点 WAN 拓扑</h3><blockquote><p>物理点对点拓扑直接连接两个节点。在这种布局中，<strong>两个节点无需与其他主机共享介质</strong>。此外，当使用串行通信协议，如点对点协议(PPP)时，节点无需判定收到的帧是指向它还是指向另一节点。</p></blockquote><p>因此，逻辑数据链路协议将非常简单，因为介质中的所有帧都只去往或来自这两个节点。节点将帧放置到一端的介质上，然后点对点线路另一端的节点从介质取走帧。</p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/4_6_1.png"><p>注意：通过以太网进行的点对点连接需要设备确定传入帧是否发往此节点。</p><p>使用多个中间设备，距离较远的源节点和目的节点彼此可以间接相连。但是，在网络中使用物理设备并不会影响逻辑拓扑，如图所示。在图中，添加中间物理连接不会改变逻辑拓扑。逻辑点对点连接相同。</p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/4_6_2.png"><hr><h3 id="LAN-拓扑"><a href="#LAN-拓扑" class="headerlink" title="LAN 拓扑"></a>LAN 拓扑</h3><blockquote><p>在多路访问局域网中，终端设备（即节点）使用<code>星型或扩展星型</code>拓扑相互连接，如图所示。在这种类型的拓扑中，终端设备连接到一个中央中间设备，在本例中是一个以太网交换机。扩展星型（扩展星型）通过连接多个以太网交换机来扩展此拓扑。星型和扩展星型拓扑安装简单、扩展性好（易于添加和删除终端设备），而且故障排除容易。早期的星型拓扑使用以太网集线器互连终端设备。</p></blockquote><p>有时可能只有两个设备连接在以太网局域网上。两个相互连接的路由器就是一个例子。</p><p><code>传统LAN拓扑</code></p><blockquote><p>早期的以太网和传统令牌环局域网技术包括另外两种拓扑结构:</p></blockquote><ul><li><p><strong>总线</strong> - <code>所有终端系统都相互连接</code>，并在两端以某种形式端接。终端设备互连时不需要基础设施设备（例如交换机）。传统的以太网络中会使用采用同轴电缆的总线拓扑，因为它<code>价格低廉而且安装简易</code>。</p></li><li><p><strong>环</strong> - <code>终端系统与其各自的邻居相连</code>，形成一个环状。与总线拓扑不同，环拓扑不需要端接。传统的光纤分布式数据接口 (FDDI) 和令牌环网络使用环拓扑。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/4_7.png" alt="物理拓扑"></p><hr><h3 id="半双工与全双工通信"><a href="#半双工与全双工通信" class="headerlink" title="半双工与全双工通信"></a>半双工与全双工通信</h3><blockquote><p>半双工通信</p></blockquote><p>两台设备都可以通过该介质发送和接收，但<code>无法同时执行</code>这两个操作。WLAN和带有以太网集线器的传统总线拓扑使用半双工模式。半双工<code>每次只允许一台设备</code>通过共享介质发送或接收。</p><blockquote><p>全双工通信</p></blockquote><p>两台设备都可以在共享介质上<code>同时发送和接收</code>。数据链路层假定介质随时可供两个节点实现传输。默认情况下，以太网交换机在全双工模式下运行，<code>但是如果与以太网集线器等设备连接，它们则可以在半双工模式下运</code>行。</p><blockquote><p>总之，<strong>半双工通信限制为每次在一个方向进行数据交换</strong>。<strong>全双工允许同时发送和接收数据</strong>。两个互连设备，比如一个主机网卡和以太网交换机上的一个接口，必须采用同一双工模式运行。否则，将会出现双工不匹配，导致链路效率低下和延时。</p></blockquote><hr><h3 id="访问控制方法"><a href="#访问控制方法" class="headerlink" title="访问控制方法"></a>访问控制方法</h3><blockquote><p>以太网 LAN 和 WLAN 都是多路访问网络的示例。多路访问网络是指可能有两个或多个终端设备同时试图访问网络的网络。</p><p>某些多路访问网络需要使用规则来管理设备共享物理介质的方式。对于共享介质，有两种基本的访问控制方法：</p></blockquote><ul><li><p><strong>基于竞争的访问</strong></p><blockquote><p>在基于竞争的多路访问网络中，<code>所有节点都工作在半双工方式，争夺介质的使用</code>。然而，<code>一次只有一台设备能够发送</code>。因此，当多台设备同时传输时，会使用一个处理过程。</p></blockquote><p>基于竞争的访问方法示例如下：</p><ul><li><p>在传统总线拓扑以太网局域网上使用载波侦听多路访问/冲突检测 (CSMA/CD)</p></li><li><p>在无线局域网上使用载波侦听多路访问/冲突避免 (CSMA/CA)</p></li></ul></li></ul><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/4_9_1.png" alt="基于竞争的访问"></p><ul><li><p><strong>受控访问</strong></p><blockquote><p>在基于控制的多路访问网络中，<code>每个节点都有自己的时间来使用介质</code>。这种确定性的传统网络类型效率很低，因为设备必须等到轮到自己才能访问介质。使用受控访问的多路访问网络的示例包括：</p></blockquote><ul><li><p>传统令牌环</p></li><li><p>传统ARCNET</p></li></ul></li></ul><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/4_9_2.png" alt="受控访问"></p><blockquote><p>注意: <strong>如今，以太网网络以全双工方式运行，不需要访问方法。</strong></p></blockquote><hr><h3 id="基于竞争的访问-CSMA-CD"><a href="#基于竞争的访问-CSMA-CD" class="headerlink" title="基于竞争的访问 - CSMA/CD"></a>基于竞争的访问 - CSMA/<code>CD</code></h3><p>基于竞争的访问网络示例如下：</p><ul><li><p>无线局域网（使用 CSMA/CA）</p></li><li><p>传统总线拓扑以太网局域网（使用 CSMA/CD）</p></li><li><p>使用集线器的传统以太网局域网（使用 CSMA/CD）</p></li></ul><p>这些网络在<code>半双工模式</code>下运行，意味着<code>一台设备一次只能发送或接收</code>。这<code>需要有一个进程来管理设备何时可以发送以及当多台设备同时发送时会发生什么情况</code>。</p><p>如果两台设备<code>同时传输</code>，则会发生<code>冲突</code>。<strong>对于传统以太网局域网，两台设备将会检测到网络上的冲突。这就是 CSMA/<code>CD</code> 的冲突检测（<code>CD</code>）部分。</strong>网卡通过比较传输的数据与接收的数据，或通过识别介质中的信号振幅是否高于正常状况来实现。<code>两台设备发送的数据会损坏且需重新发送</code>。</p><blockquote><p>PC1 有一个以太网帧要发送给 PC3。PC1 的网卡需要确定是否有设备正在通过介质传输。如果它没有检测到载波信号，也就是说，它没有收到来自其他设备的传输，则假定网络可用于发送。</p><p>当介质可用时，PC1 NIC 发送以太网帧，如图所示。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/4_10_1.png" alt="PC1发送帧"></p><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/4_10_2.png" alt="集线器接收帧"></p><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/4_10_3.png" alt="集线器发送帧"></p><hr><h3 id="基于竞争的访问-CSMA-CA"><a href="#基于竞争的访问-CSMA-CA" class="headerlink" title="基于竞争的访问 - CSMA/CA"></a>基于竞争的访问 - CSMA/<code>CA</code></h3><p><strong>IEEE 802.11 WLAN</strong> 所使用的另一种 CSMA 形式为载波侦听多路访问/冲突避免 (CSMA/<code>CA</code>)。</p><p>CMSA/<code>CA</code> 采用一种与 CSMA/CD 类似的方法来检测介质是否空闲。CMSA/<code>CA</code> 采用其他技术。在无线环境中，设备可能无法检测到冲突。<strong>CMSA/<code>CA</code> 不会检测冲突</strong>，但会通过在传输之前等待来尝试避免冲突。每台设备发送时都会包含传输所需的持续时间。所有其他无线设备都会收到此信息，知道介质将有多长时间不可用。</p><blockquote><p>在图中，如果主机 A 从接入点接收到一个无线帧，那么主机 B 和 C 也会看到该帧以及介质有多久不可用。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/4_11.png" alt="集线器发送帧"></p><p>当无线设备发送 802.11 帧后，接收方会返回确认，以使发送方知道帧已到达。</p><p>不管是使用集线器的以太网 LAN，还是 WLAN，基于竞争的系统在介质使用率高的情况下都无法很好地扩展。</p><p><code>注意：</code>使用交换机的以太网 LAN 不使用基于竞争的系统，因为交换机和主机网卡在全双工模式下运行。</p><hr><h3 id="帧"><a href="#帧" class="headerlink" title="帧"></a>帧</h3><blockquote><p>数据链路层通过使用<code>帧头和帧尾</code>将其封装以<code>创建帧</code>，从而<code>准备封装后的数据</code>（通常是IPv4或IPv6数据包），以便在本地介质上进行传输。</p><p>数据链路协议负责<code>同一网络中的网卡间通信</code>。虽然有许多描述数据链路层帧的不同数据链路层协议，但每种帧均有<code>三个基本组成部分</code>：</p></blockquote><ul><li><p>帧头</p></li><li><p>数据</p></li><li><p>帧尾</p></li></ul><p>与其他封装协议不同，<code>数据链路层以帧尾的形式在帧的末尾附加信息</code>。</p><blockquote><p><strong>所有数据链路层协议均将数据封装于帧的数据字段内</strong>。但是，由于协议的不同，帧结构以及帧头和帧尾中包含的字段会存在差异。</p></blockquote><p><strong>没有一种帧结构能满足通过所有类型介质的全部数据传输需求</strong>。根据环境的不同，帧中所需的控制信息量也相应变化，以匹配介质和逻辑拓扑的访问控制需求。例如，WLAN帧必须包含避免冲突的过程，因此与以太网帧相比需要额外的控制信息。</p><p>如图所示，在脆弱的环境下，需要更多控制才能确保送达。<code>由于所需控制信息较多，因此帧头和帧尾字段都较大</code>。</p><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/4_12.png" alt="帧"></p><hr><h3 id="帧字段"><a href="#帧字段" class="headerlink" title="帧字段"></a>帧字段</h3><blockquote><p>成帧技术将位流拆分成可破解的多个分组，且将控制信息作为不同字段值插入帧头和帧尾中。此格式使物理信号具备能被节点识别且可在目的地解码成数据包的一种结构。</p></blockquote><p>图中显示了<code>通用帧字段</code>。<code>并非所有协议均包含全部此类字段</code>。特定数据链路协议的标准定义了实际帧格式。</p><p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/Notes/Computer%20Network%20Technology/4_13.png" alt="帧字段"></p><p>数据链路层协议将帧尾添加到各帧结尾处。</p><blockquote><p>在一个叫做<code>错误检测</code>的过程中，帧尾会判断帧是否到达时没有错误。它将组成帧的各个位的逻辑或数学摘要放入帧尾中。要将错误检测添加到数据链路层，因为介质中的信号可能遭受干扰、失真或丢失，从而大幅更改这些信号所代表的位值。</p></blockquote><p>发送节点会创建帧内容的逻辑摘要，称为循环冗余校验（CRC）值。此值将放入帧校验序列（FCS）字段中以代表帧内容。在以太网尾部，FCS 为接收节点提供一种方法，用于确定帧是否出现传输错误。</p><hr><h2 id="Donate-☕️"><a href="#Donate-☕️" class="headerlink" title="Donate ☕️"></a>Donate ☕️</h2><p>如果你喜欢我的博文，可以通过下面的方式支持我，你的支持是我最大的动力 😘</p><p>转载时请注明出处 ©️PhoenixNest</p><table><thead><tr><th align="center">Donate 😇</th><th align="center">Qr code</th></tr></thead><tbody><tr><td align="center">Wechat</td><td align="center"><img src="/img/wechat.png" alt="Wechat"></td></tr><tr><td align="center">Ali Pay</td><td align="center"><img src="/img/alipay.png" alt="Ali Pay"></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Exam </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软件测试方法和技术</title>
      <link href="/Notes-Software-Testing/"/>
      <url>/Notes-Software-Testing/</url>
      
        <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><blockquote><p>本篇整理了一些我在近期复习软件测试期末考试时所整理的一些笔记。</p><p>所用教科书：《软件测试方法和技术（第三版）》 – 朱少民 • 清华大学出版社</p></blockquote><hr><h2 id="一-引论"><a href="#一-引论" class="headerlink" title="(一) 引论"></a>(一) 引论</h2><h3 id="1-为什么要开展软件测试活动"><a href="#1-为什么要开展软件测试活动" class="headerlink" title="1.为什么要开展软件测试活动"></a>1.为什么要开展软件测试活动</h3><p>(1) 软件测试是保证软件质量的重要手段，所有软件都会存在或多或少的问题，错误需要测试来发现，同时还需要测试来评估错误密度。</p><p>(2) 软件测试是软件质量保证的关键步骤，越早发现错误代价越低。</p><h3 id="2-什么是软件测试"><a href="#2-什么是软件测试" class="headerlink" title="2.什么是软件测试"></a>2.什么是软件测试</h3><p>软件测试是验证和有效性确认构成的整体。</p><h3 id="3-软件测试和开发的关系"><a href="#3-软件测试和开发的关系" class="headerlink" title="3.软件测试和开发的关系"></a>3.软件测试和开发的关系</h3><p>测试活动在开发之后，测试与开发同步进行，最后再进行总的测试，没有开发就没有测试，不同的软件开发模型中，测试所处位置不同。</p><h3 id="4-软件测试与质量保证的关系"><a href="#4-软件测试与质量保证的关系" class="headerlink" title="4.软件测试与质量保证的关系"></a>4.软件测试与质量保证的关系</h3><p>软件测试和软件质量是对立统一的，软件测试既是找bug的，又能保证软件质量。对软件进行充分的测试才能够有效的保证软件质量，对软件产品进行充分测试，找出其中的缺陷。</p><hr><h2 id="二-软件测试基本概念"><a href="#二-软件测试基本概念" class="headerlink" title="(二) 软件测试基本概念"></a>(二) 软件测试基本概念</h2><h3 id="1-软件质量的定义"><a href="#1-软件质量的定义" class="headerlink" title="1.软件质量的定义"></a>1.软件质量的定义</h3><p>(1) 软件产品满足规定的和隐含的与需求能力有关的全部特征与特性</p><p>(2) 软件各种属性的组合程度</p><p>(3) 用户对软件产品的综合反映程度</p><p>(4) 软件在使用过程中满足用户需求的程度</p><h3 id="2-软件缺陷的定义"><a href="#2-软件缺陷的定义" class="headerlink" title="2.软件缺陷的定义"></a>2.软件缺陷的定义</h3><p>(1)从<code>产品内部</code>看，软件缺陷是<code>软件产品开发和维护过程中所存在的错误、毛病等各种问题</code>。</p><p>(2)从<code>外部</code>看，软件缺陷是<code>系统所需要实现的某种功能的失效或违背</code></p><h4 id="2-1-什么是软件缺陷"><a href="#2-1-什么是软件缺陷" class="headerlink" title="2.1 什么是软件缺陷"></a>2.1 什么是软件缺陷</h4><p>(1) 软件未实现产品说明书要求的功能。</p><p>(2) 软件出现了产品说明书提到不应该的错误。</p><p>(3) 软件实现了产品说明书未提到的功能。</p><p>(4) 软件未实现产品说明书<code>未提到但应实现的目标</code>。</p><p>(5) 软件难以理解、不易使用、运行缓慢等问题。</p><h4 id="2-2-修复-软件缺陷的代价"><a href="#2-2-修复-软件缺陷的代价" class="headerlink" title="2.2 修复.软件缺陷的代价"></a>2.2 修复.软件缺陷的代价</h4><p>软件缺陷随着时间的推移所带来的成本越来越大。</p><h3 id="3-软件测试的分类"><a href="#3-软件测试的分类" class="headerlink" title="3.软件测试的分类"></a>3.软件测试的分类</h3><p>单元测试 -&gt; 集成测试 -&gt; (功能测试) -&gt; 系统测试 -&gt; 验收测试</p><p>按<code>测试层次</code>：</p><p>(1) 底层测试：单元测试。</p><p>(2) 接口层次：集成测试，完成系统内单元之间接口和单元集成为一个完整系统的测试。</p><p>(3) 系统测试：负载测试、压力测试、强壮性测试。</p><p>(4) 用户层次：验收测试，验收用户是否真正所需要的产品特性，验收测试关注用户环境、用户数据，用户也需要参与测试。</p><hr><p>按<code>测试对象</code>：</p><p>(1) 单元测试</p><p>(2) 程序测试</p><p>(3) 系统测试</p><p>(4) 文档测试</p><p>(5) Web应用测试、客户端测试</p><p>(6) 数据库测试、服务器测试</p><hr><p>按<code>测试目的</code>：</p><p>(1) 功能测试：黑盒和白盒测试</p><p>(2) 性能测试</p><p>(3) 压力测试</p><p>(4) 可靠性测试</p><p>(5) 安全性测试</p><p>(6) 兼容性测试</p><p>(7) 回归测试</p><hr><p>按<code>测试阶段</code>：</p><p>(1) 需求评审、设计评审</p><p>(2) 单元测试</p><p>(3) 集成测试</p><p>(4) 系统测试</p><p>(5) 验收测试：α测、β测</p><hr><p>根据系统内部结构和具体实现算法角度分为黑盒测试和白盒测试两类；</p><p>根据测试对象在测试过程中是否发生状态变化分为动态测试和静态测试方法；</p><h3 id="4-测试计划"><a href="#4-测试计划" class="headerlink" title="4.测试计划"></a>4.测试计划</h3><p>(1) 规定<code>测试活动的范围、方法、资源和进度</code>；</p><p>(2) 明确正在测试的<code>项目</code>、要测试的<code>特性</code>、要执行的<code>测试任务</code>、每个任务的<code>负责人</code>以及与计划相关的<code>风险</code>。</p><h3 id="5-测试用例"><a href="#5-测试用例" class="headerlink" title="5.测试用例"></a>5.测试用例</h3><p>有效性、组织性、可复用性、跟踪、测试证实</p><p>(1) 测试用例是为了特定目的而设计的测试数据及其相关的测试规程的一个特定集合，或是有效发现软件缺陷的<code>最小测试执行单元</code>。</p><p>(2) 测试用例是测试工作的指导，是软件测试的必须遵守的准则，更是软件测试质量稳定的根本保障。</p><p>(3) 测试用例是测试执行的基础。</p><hr><h2 id="三-软件测试方法"><a href="#三-软件测试方法" class="headerlink" title="(三) 软件测试方法"></a>(三) 软件测试方法</h2><h3 id="1-基于直觉和经验的方法"><a href="#1-基于直觉和经验的方法" class="headerlink" title="1.基于直觉和经验的方法"></a>1.基于直觉和经验的方法</h3><p>错误推测法：</p><p>基于经验和直觉推测程序中所有可能存在的各种错误，从而有针对性地设计测试用例。</p><hr><h3 id="2-基于输入域的方法-黑盒"><a href="#2-基于输入域的方法-黑盒" class="headerlink" title="2.基于输入域的方法(黑盒)"></a>2.基于输入域的方法(黑盒)</h3><h4 id="2-1-等价类划分法"><a href="#2-1-等价类划分法" class="headerlink" title="2.1 等价类划分法"></a>2.1 等价类划分法</h4><p>等价类的分类：<code>有效</code>等价类、<code>无效</code>等价类。</p><p>有效等价类：是有意义的、合理的输入数据，可以检查程序是否实现了规格说明书中所规定的功能和性能。</p><p>无效等价类：不妈祖程序输入要求或无效的输入数据构成的集合。</p><p><code>PS</code>：在规定了输入数据必须遵守的规则的情况下，可确定一个有效等价类和若干个无效等价类。</p><h4 id="2-2-边界值分析法"><a href="#2-2-边界值分析法" class="headerlink" title="2.2 边界值分析法"></a>2.2 边界值分析法</h4><p>边界值分析是一种<code>补充等价类划分</code>的测试用例设计技术。</p><p>设计方法：</p><p>(1) 确定边界情况<code>(选择等价类边界)</code>。</p><p>(2) 选取<code>正好等于、刚刚大于或刚刚小于</code>边界值作为测试数据。</p><hr><h3 id="3-基于逻辑覆盖的方法-白盒"><a href="#3-基于逻辑覆盖的方法-白盒" class="headerlink" title="3.基于逻辑覆盖的方法(白盒)"></a>3.基于逻辑覆盖的方法(白盒)</h3><h4 id="3-3-1-判定覆盖"><a href="#3-3-1-判定覆盖" class="headerlink" title="3.3.1 判定覆盖"></a>3.3.1 判定覆盖</h4><p>使得程序中每个判定至少为True或False各一次。</p><h4 id="3-3-2-条件覆盖"><a href="#3-3-2-条件覆盖" class="headerlink" title="3.3.2 条件覆盖"></a>3.3.2 条件覆盖</h4><p>使得判定中的每个条件获得各种可能的结果。</p><h4 id="3-3-3-判定-条件覆盖"><a href="#3-3-3-判定-条件覆盖" class="headerlink" title="3.3.3 判定-条件覆盖"></a>3.3.3 判定-条件覆盖</h4><p>同时满足判定覆盖和条件覆盖。即使得程序中每个判定至少为True或False各一次，同时使得判定中的每个条件获得各种可能的结果。</p><h4 id="3-3-4-基本路径覆盖"><a href="#3-3-4-基本路径覆盖" class="headerlink" title="3.3.4 基本路径覆盖"></a>3.3.4 基本路径覆盖</h4><p>设计所有的测试用例，覆盖程序中所有可能的、独立的执行路径。</p><hr><p>V(G) = 区域数目</p><p>V(G) = 边界数目 - 节点数目 + 2</p><p>V(G) = 判断节点数 + 1</p><hr><h2 id="四-软件测试流程与规范"><a href="#四-软件测试流程与规范" class="headerlink" title="(四) 软件测试流程与规范"></a>(四) 软件测试流程与规范</h2><h3 id="W模型"><a href="#W模型" class="headerlink" title="W模型"></a>W模型</h3><p>测试过程和开发过程贯穿了软件过程的整个生命周期，它们是相辅相成的关系，有以下的关键点：</p><p>(1) 测试过程和开发过程是同时开始，同时结束两者保持同步关系。</p><p>(2) 测试过程是对开发过程中的阶段性结果和产品进行验证的过程，两者相互依赖。</p><p>前期：测试过程依赖于开发过程。</p><p>后期：开发过程更多地依赖于测试过程。</p><p>(3) 测试过程和开发过程的工作重点可能不一样，两者有各自的特点，不论在资源和风险管理中，两者都存在差异。</p><hr><h3 id="敏捷测试"><a href="#敏捷测试" class="headerlink" title="敏捷测试"></a>敏捷测试</h3><p>目标：尽快的交付高质量的软件。</p><p>核心(质量内建的三个关键实践)：测试左移、持续测试、测试驱动开发。</p><p>敏捷测试是一套解决方案、一类测试操作与管理的框架、一组实践或由一定顺序的测试活动构成的特定的测试流程。是不断修正质量指标、正确建立测试策略，确认客户的有效需求能得以圆满实现和确保整个生产的过程安全的、及时的发布最终产品。</p><hr><h3 id="TMM的五个等级"><a href="#TMM的五个等级" class="headerlink" title="TMM的五个等级"></a>TMM的五个等级</h3><h4 id="1-初始级"><a href="#1-初始级" class="headerlink" title="1.初始级"></a>1.初始级</h4><p>(1) 没有正式的文档化和结构化。</p><p>(2) 测试在编码后执行，与调试没有区别。</p><p>(3) 测试的目的被理解为证明软件正常工作。</p><h4 id="2-定义级"><a href="#2-定义级" class="headerlink" title="2.定义级"></a>2.定义级</h4><p>(1) 组织已设定测试方针和目标。</p><p>(2) 引入了测试计划过程。</p><p>(3) 具有基本的测试技术和方法。</p><h4 id="3-集成"><a href="#3-集成" class="headerlink" title="3.集成"></a>3.集成</h4><p>(1) 测试过程和软件开发周期集成在一起。</p><p>(2) 标准、步骤和方法的文档化。</p><p>(3) 相应的监督和控制措施。</p><h4 id="4-管理-amp-度量"><a href="#4-管理-amp-度量" class="headerlink" title="4.管理&amp;度量"></a>4.管理&amp;度量</h4><p>(1) 测试过程可有效地度量、管理。</p><h4 id="5-优化"><a href="#5-优化" class="headerlink" title="5.优化"></a>5.优化</h4><p>(1) 测试过程的数据可以用户防止错误。</p><p>(2) 注意力集中在优化已建立的过程的发生。</p><hr><h2 id="五-单元测试与集成测试"><a href="#五-单元测试与集成测试" class="headerlink" title="(五) 单元测试与集成测试"></a>(五) 单元测试与集成测试</h2><h3 id="1-单元测试的原则"><a href="#1-单元测试的原则" class="headerlink" title="1.单元测试的原则"></a>1.单元测试的原则</h3><p>自动化、独立性、可重复</p><h3 id="2-单元测试的任务"><a href="#2-单元测试的任务" class="headerlink" title="2.单元测试的任务"></a>2.单元测试的任务</h3><p>(1) 单元独立执行路径的测试：检查每一条独立执行路径的测试，保证每条语句至少被执行一次(基本路径测试)</p><p>(2) 单元局部数据结构的测试：检查局部数据结构完整性。</p><p>(3) 单元接口测试：检查模块接口是否正确。</p><p>(4) 单元边界条件的测试：检查临界数据处理的正确性。</p><p>(5) 单元容错性测试：预见、预设的各种出错处理是否正确有效。</p><p>(6) 内存分析</p><h3 id="3-单元测试常用工具"><a href="#3-单元测试常用工具" class="headerlink" title="3.单元测试常用工具"></a>3.单元测试常用工具</h3><p>单元测试工具：(xUnit工具家族)Junit、CppUnit、NUnit、HtmlUnit</p><p>静态检查工具：CheckStyle、PMD、FindBug</p><p>单元性能测试工具：SourceMonitor</p><hr><h3 id="4-静态测试"><a href="#4-静态测试" class="headerlink" title="4.静态测试"></a>4.静态测试</h3><p>包括：<code>需求评审、互查、走查、设计评审</code></p><p>定义：在<code>不执行软件</code>的条件下有条理地仔细审查<code>软件设计、体系结构和代码</code>，从而找出<code>软件缺陷</code>的过程。有时也称为结构分析。</p><p>作用：</p><p>(1) 尽早发现软件缺陷，以找出动态黑盒白盒测试难以揭示或发现的软件缺陷。</p><p>(2) 为接受该软件的黑盒测试员进行测试设计测试案例提供思路，他们不必了解代码细节，但是根据审查备注，可以确定有问题或者容易存在软件缺陷的特性范围。</p><p>问题：认为会减慢软件开发过程。</p><hr><h3 id="5-动态测试"><a href="#5-动态测试" class="headerlink" title="5.动态测试"></a>5.动态测试</h3><h4 id="5-1-驱动程序"><a href="#5-1-驱动程序" class="headerlink" title="5.1 驱动程序"></a>5.1 驱动程序</h4><p>驱动程序/驱动模块(Driver)：用以模拟被测模块的上级模块。</p><p>作用：接受测试数据，把相关的数据传送给被测模块，启动被测模块，并打印出相应的结果。</p><h4 id="5-2-桩程序"><a href="#5-2-桩程序" class="headerlink" title="5.2 桩程序"></a>5.2 桩程序</h4><p>桩程序/桩模块(Stub)：用以模拟被测模块工作过程中所调用的模块。</p><p>作用：由被测模块调用，一般只进行很少的数据处理。例如打印入口和返回，以便于检验被测模块与其下级模块的接口。</p><hr><h3 id="6-自顶向下和自底向上的集成方法"><a href="#6-自顶向下和自底向上的集成方法" class="headerlink" title="6.自顶向下和自底向上的集成方法"></a>6.自顶向下和自底向上的集成方法</h3><p>自顶向下法：类似树的层次遍历，依次结合各个模块。</p><p>自底向上法：从“原子”模块开始集成以进行测试。</p><hr><h2 id="六-系统测试"><a href="#六-系统测试" class="headerlink" title="(六)系统测试"></a>(六)系统测试</h2><h3 id="1-性能测试"><a href="#1-性能测试" class="headerlink" title="1.性能测试"></a>1.性能测试</h3><p>性能测试就是为了发现系统性能问题或获取系统性能相关指标(如运行速度、响应时间、资源使用率等)</p><h3 id="1-1-性能测试指标"><a href="#1-1-性能测试指标" class="headerlink" title="1.1 性能测试指标"></a>1.1 性能测试指标</h3><h4 id="系统资源"><a href="#系统资源" class="headerlink" title="系统资源"></a>系统资源</h4><p>CPU、内存占用率等。</p><h4 id="系统行为"><a href="#系统行为" class="headerlink" title="系统行为"></a>系统行为</h4><p>(1) 请求响应时间</p><p>客户端向服务器提交一个请求到收到响应之间的间隔时间。</p><p>(2) 事务响应时间</p><p>事务由一系列请求组成，事务的响应时间就是这些请求完成处理所花费的时间。</p><p>(3) 数据吞吐量</p><p>单位时间内客户端和服务器之间网络上传输的数据量。</p><h3 id="1-2-系统负载及其模式"><a href="#1-2-系统负载及其模式" class="headerlink" title="1.2 系统负载及其模式"></a>1.2 系统负载及其模式</h3><h4 id="要素"><a href="#要素" class="headerlink" title="要素"></a>要素</h4><p>并发用户并发数量 + 思考时间 + 每次请求发送的数据量 + 负载模式</p><p>(1) 在线用户：通过浏览器访问登录Web应用系统后没有退出该应用系统的用户。</p><p>(2) 并发用户：严格意义上，这些用户选择在同一时间做同一事情或同一操作；不严格地说，并发用户同时在线并操作系统，但可以是不相同操作。</p><p>(3) 用户并发数量：上述并发用户的数量，近似于同时在线的用户数量，但不等于在线用户数。</p><p>(4) 思考时间：浏览器在收到响应后到提交下一个请求之间的间隔时间。</p><p>负载模式：一次加载、递增加载、高低突变加载、随即加载等方式。</p><h3 id="2-软件兼容性测试"><a href="#2-软件兼容性测试" class="headerlink" title="2.软件兼容性测试"></a>2.软件兼容性测试</h3><p>是指验证软件之间是否正确地交互和共享信息。</p><p>要考虑的问题：</p><p>何种平台、何种应用软件、何种标准或规范、何种数据。</p><h3 id="3-向前和向后兼容"><a href="#3-向前和向后兼容" class="headerlink" title="3.向前和向后兼容"></a>3.向前和向后兼容</h3><p>向后兼容指的是可以使用软件的以前版本。</p><p>向前兼容指的是可以使用软件的未来版本。</p><hr><h2 id="七-验收测试"><a href="#七-验收测试" class="headerlink" title="(七)验收测试"></a>(七)验收测试</h2><h3 id="1-进行验收测试的条件，通过标准"><a href="#1-进行验收测试的条件，通过标准" class="headerlink" title="1.进行验收测试的条件，通过标准"></a>1.进行验收测试的条件，通过标准</h3><p>验收测试是在软件产品完成了功能测试和系统测试之后、产品发布之前所进行的软件测试活动。</p><p>标准：</p><p>(1) 完全执行了验收测试计划中的每个测试用例。</p><p>(2) 在验收测试中发现的错误已经得到修改并通过了测试或经过评估留到下一版本中修改。</p><p>(3) 完成验收测试报告。</p><h3 id="2-如何进行产品说明书的验证"><a href="#2-如何进行产品说明书的验证" class="headerlink" title="2.如何进行产品说明书的验证"></a>2.如何进行产品说明书的验证</h3><p>测试人员根据产品说明书，逐字逐句地验证产品每一项特征，并在验证结束时提交基于产品规格说明书地验证报告。</p><h3 id="3-用户界面测试有哪些要素"><a href="#3-用户界面测试有哪些要素" class="headerlink" title="3.用户界面测试有哪些要素"></a>3.用户界面测试有哪些要素</h3><p>(1) 符合标准和规范</p><p>(2) 直观性</p><p>(3) 一致性</p><p>(4) 灵活性</p><p>(5) 舒适性</p><p>(6) 正确性</p><p>(7) 实用性</p><hr><h2 id="八-软件本地化测试"><a href="#八-软件本地化测试" class="headerlink" title="(八)软件本地化测试"></a>(八)软件本地化测试</h2><h3 id="1-定义"><a href="#1-定义" class="headerlink" title="1.定义"></a>1.定义</h3><h4 id="1-1-G11N-I18N-L10N"><a href="#1-1-G11N-I18N-L10N" class="headerlink" title="1.1 G11N = I18N + L10N"></a>1.1 G11N = I18N + L10N</h4><p>软件全球化 = 软件国际化 + 软件本地化</p><h4 id="1-2-软件国际化-Internationlization-I18N"><a href="#1-2-软件国际化-Internationlization-I18N" class="headerlink" title="1.2 软件国际化(Internationlization, I18N)"></a>1.2 软件国际化(Internationlization, I18N)</h4><p>是在软件设计和文档开发过程中，使得功能和代码设计能处理多种语言和文化传统。创建不要语言版本时，不需要重新设计源程序代码的软件工程方法。</p><h4 id="1-3-软件本地化-Localization-L10N"><a href="#1-3-软件本地化-Localization-L10N" class="headerlink" title="1.3 软件本地化(Localization, L10N)"></a>1.3 软件本地化(Localization, L10N)</h4><p>是将一个软件产品按特定国家/地区或语言市场的需要进行<code>全面定制</code>的过程。</p><h3 id="2-I18N与L10N的关系"><a href="#2-I18N与L10N的关系" class="headerlink" title="2. I18N与L10N的关系"></a>2. I18N与L10N的关系</h3><p>(1) 国际化是本地化的基础和前提，为本地化做准备，使本地化过程不需要对代码进行改动就能完成。</p><p>(2) 本地化是国际化向特定本地语言环境的转换，本地化要适应国际化的规定。</p><p>(3) 国际化软件，或在应用软件运行时可以动态切换语言，或在软件启动前或启动时可以设置语言。</p><hr><h2 id="九-测试自动化"><a href="#九-测试自动化" class="headerlink" title="(九)测试自动化"></a>(九)测试自动化</h2><h3 id="1-手工测试和自动化测试的区别"><a href="#1-手工测试和自动化测试的区别" class="headerlink" title="1.手工测试和自动化测试的区别"></a>1.手工测试和自动化测试的区别</h3><p>(1) 自动运行的速度更快、执行效率高，是手工无法相比的。</p><p>(2) 手工测试会感觉累，但机器不会感觉累，可以不间断工作。</p><p>(3) 测试结果准确。</p><p>(4) 可靠。人可以撒谎，但机器不会。</p><p>(5) 可复用性。一旦完成所用脚本，可多次执行。</p><p>(6) 特别能力。当需要模拟大量并发的时候，人工测试显然是不现实的，但机器则可以模拟大量的并发量。</p><h3 id="2-测试自动化实现中，关键的技术是什么？"><a href="#2-测试自动化实现中，关键的技术是什么？" class="headerlink" title="2.测试自动化实现中，关键的技术是什么？"></a>2.测试自动化实现中，关键的技术是什么？</h3><p>识别用户界面的元素以及捕获键盘、鼠标的输入，将操作过程转换为测试工具可执行的脚本；然后，对脚本进行修改和优化，加入测试的验证点；最后通过测试工具运行测试脚本，将实际输出与期望结果进行比对，确定是否存在差异。</p><hr><h2 id="十-部署测试环境"><a href="#十-部署测试环境" class="headerlink" title="(十) 部署测试环境"></a>(十) 部署测试环境</h2><h3 id="1-测试环境的定义"><a href="#1-测试环境的定义" class="headerlink" title="1.测试环境的定义"></a>1.测试环境的定义</h3><h4 id="1-1-设计环境"><a href="#1-1-设计环境" class="headerlink" title="1.1 设计环境"></a>1.1 设计环境</h4><p>设计环境指编制测试计划、说明、报告及与测试有关的文件所基于的软、硬件设备和支持。</p><h4 id="1-2-实施环境"><a href="#1-2-实施环境" class="headerlink" title="1.2 实施环境"></a>1.2 实施环境</h4><p>实施环境指对软件系统进行各项测试所基于的软、硬件设备和支持。</p><h4 id="1-3-管理环境"><a href="#1-3-管理环境" class="headerlink" title="1.3 管理环境"></a>1.3 管理环境</h4><p>管理环境指管理测试资源所基于的软、硬件设备和支持。</p><h3 id="2-要素"><a href="#2-要素" class="headerlink" title="2.要素"></a>2.要素</h3><h4 id="1-软件"><a href="#1-软件" class="headerlink" title="(1) 软件"></a>(1) 软件</h4><p>操作系统、网络协议和应用程序。</p><h4 id="2-硬件"><a href="#2-硬件" class="headerlink" title="(2) 硬件"></a>(2) 硬件</h4><p>网络设备、服务器、测试用机。</p><h4 id="3-网络环境"><a href="#3-网络环境" class="headerlink" title="(3) 网络环境"></a>(3) 网络环境</h4><p>相关网络设备、网络系统软件及配置。</p><h4 id="4-数据准备"><a href="#4-数据准备" class="headerlink" title="(4) 数据准备"></a>(4) 数据准备</h4><p>测试数据、要尽可能的取得大量真实数据。</p><h4 id="5-测试工具"><a href="#5-测试工具" class="headerlink" title="(5) 测试工具"></a>(5) 测试工具</h4><p>自动化及测试管理软件，监控诊断的使用工具等。</p><hr><h2 id="十一-测试执行、缺陷报告与跟踪"><a href="#十一-测试执行、缺陷报告与跟踪" class="headerlink" title="(十一)测试执行、缺陷报告与跟踪"></a>(十一)测试执行、缺陷报告与跟踪</h2><h3 id="1-软件缺陷的生命周期"><a href="#1-软件缺陷的生命周期" class="headerlink" title="1.软件缺陷的生命周期"></a>1.软件缺陷的生命周期</h3><p>发现 -&gt; 打开 -&gt; 修复 -&gt; 关闭</p><p>“新打开的”：发现 -&gt; 打开</p><p>“已修正的”：打开 -&gt; 修复</p><p>“已关闭的”：修复 -&gt; 关闭</p><p>生命周期的概念是一个物种从诞生到消亡经历了不同的生命阶段，软件缺陷生命周期指的是一个软件缺陷被发现、报告到这个缺陷被修复、验证直到最后关闭的完整过程。</p><h3 id="2-软件缺陷的等级"><a href="#2-软件缺陷的等级" class="headerlink" title="2.软件缺陷的等级"></a>2.软件缺陷的等级</h3><h4 id="2-1-严重性"><a href="#2-1-严重性" class="headerlink" title="2.1 严重性"></a>2.1 严重性</h4><p>分类：</p><p>(1) 致命：系统崩溃、数据丢失、数据毁坏、安全性被破坏。</p><p>(2) 严重：功能或特性没有实现，主要功能部分丧失，次要功能部分丧失或致命错误声明。</p><p>(3) 一般：系统的部分功能没有完全实现，但不影响用户的正常使用。例如：提示信息不太准确；用户界面差；操作时间长等一些问题。</p><p>(4) 较小：小问题，对功能几乎没有影响。</p><h4 id="2-2-优先级"><a href="#2-2-优先级" class="headerlink" title="2.2 优先级"></a>2.2 优先级</h4><p>分类：</p><p>(1) 立即修复(P1)：缺陷导致系统几乎不能使用或测试不能继续，需立即修复。</p><p>(2) 高优先级(P2)：缺陷严重，影响测试，需优先考虑。</p><p>(3) 正常排队(P3)：缺陷正常排队等待修复。</p><p>(4) 低优先级(P4)：即使有此缺陷产品也能发布，可在开发人员有时间的时候纠正。</p><h3 id="3-如何有效描述软件缺陷"><a href="#3-如何有效描述软件缺陷" class="headerlink" title="3.如何有效描述软件缺陷"></a>3.如何有效描述软件缺陷</h3><p>基本原则：</p><p>(1) 单一准确：尽量一个报告只针对一个软件缺陷。</p><p>(2) 可再现：提供精确步骤，可再现并修复缺陷。</p><p>(3) 完整统一：完整前后统一的软件缺陷。</p><p>(4) 短小简练：只给出事实和演示软件缺陷必须的细节。</p><p>(5) 特点条件；通常情况下软件没有问题，而是在特点条件下出现，所以缺陷描述时不要忽视这些特定条件</p><p>(6) 对缺陷跟踪到底：从发现Bug开始，要保证它被正确的报告直至修复的全过程。</p><p>(7) 不要评价缺陷。</p><h3 id="4-缺陷报告"><a href="#4-缺陷报告" class="headerlink" title="4.缺陷报告"></a>4.缺陷报告</h3><p>组成：</p><p>一份优秀的缺陷报告记录不仅包括了期望结果、实际结果和必要的附件，还提供必要的数据、测试环境或条件，以及简单的分析。</p><!-- 缺陷分布报告、缺陷趋势报告、缺陷年龄报告、缺陷结果进度报告 --><hr><h2 id="Donate-☕️"><a href="#Donate-☕️" class="headerlink" title="Donate ☕️"></a>Donate ☕️</h2><p>如果你喜欢我的博文，可以通过下面的方式支持我，你的支持是我最大的动力 😘</p><p>转载时请注明出处 ©️PhoenixNest</p><table><thead><tr><th align="center">Donate 😇</th><th align="center">Qr code</th></tr></thead><tbody><tr><td align="center">Wechat</td><td align="center"><img src="/img/wechat.png" alt="Wechat"></td></tr><tr><td align="center">Ali Pay</td><td align="center"><img src="/img/alipay.png" alt="Ali Pay"></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Exam </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu Desktop • Optimization</title>
      <link href="/Ubuntu-Desktop-Optimization/"/>
      <url>/Ubuntu-Desktop-Optimization/</url>
      
        <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><blockquote><p>本篇将介绍最近对<code>Ubuntu Desktop 20.04LTS</code>优化的一些笔记分享。<br>本文将<code>不定期</code>更新。</p></blockquote><blockquote><p>本机型号：华硕灵耀 X2 Duo - ASUS Zenbook X2 Duo (UX481FL/UX4000F)</p></blockquote><p>在进行优化前，你需要👇：</p><pre><code class="bash">sudo apt updatesudo apt upgrade</code></pre><hr><h2 id="一些实用的-APT-工具"><a href="#一些实用的-APT-工具" class="headerlink" title="一些实用的 APT 工具"></a>一些实用的 APT 工具</h2><pre><code class="bash"># neofetch - 系统信息sudo apt install neofetch# htop - 性能监视器sudo apt install htop# Vim - 大名鼎鼎的文本编辑器sudo apt install vim# Thunderbird - 邮箱管理sudo apt install thunderbird# Remmina - Linux下不输给XShell的远程连接工具sudo apt install remmina</code></pre><hr><h2 id="Ubuntu-Cleaner-Ubuntu-清理工具"><a href="#Ubuntu-Cleaner-Ubuntu-清理工具" class="headerlink" title="Ubuntu Cleaner - Ubuntu 清理工具"></a>Ubuntu Cleaner - Ubuntu 清理工具</h2><pre><code class="bash">sudo add-apt-repository ppa:gerardpuig/ppasudo apt updatesudo apt install ubuntu-cleaner</code></pre><hr><h2 id="Nvidia-驱动"><a href="#Nvidia-驱动" class="headerlink" title="Nvidia 驱动"></a>Nvidia 驱动</h2><pre><code class="bash"># 检查适合系统的NAVIDIA版本nvidia-detector # 安装推荐的显卡驱动 - xxx为你的推荐显驱sudo apt install nvidia-driver-xxx# 检测安装是否成功nvidia-smi# 查看NVIDIA显卡型号lspci |grep -i nvidia# 查看NVIDIA驱动版本sudo dpkg --list | grep nvidia-*</code></pre><h3 id="卸载-Nidia-驱动"><a href="#卸载-Nidia-驱动" class="headerlink" title="卸载 Nidia 驱动"></a>卸载 Nidia 驱动</h3><pre><code class="bash">sudo apt-get --purge remove nvidia*sudo apt-get --purge remove &quot;*nvidia*&quot;sudo apt-get --purge remove &quot;*cublas*&quot; &quot;cuda*&quot;sudo apt autoremove</code></pre><hr><h2 id="亮度调节"><a href="#亮度调节" class="headerlink" title="亮度调节"></a>亮度调节</h2><p><a href="https://askubuntu.com/questions/1200391/how-do-i-change-the-backlight-intensity-brightness-of-external-display-asus-sc" target="_blank" rel="noopener">How do I change the backlight intensity / brightness of external display ASUS Screenpad</a></p><pre><code class="bash">echo 255 | sudo tee &#39;/sys/class/leds/asus::screenpad/brightness&#39;</code></pre><pre><code class="bash">sudo add-apt-repository ppa:apandada1/brightness-controllersudo apt updatesudo apt install brightness-controller</code></pre><hr><h2 id="UI-美化"><a href="#UI-美化" class="headerlink" title="UI 美化"></a>UI 美化</h2><h3 id="gnome-tweaks-整体调整工具"><a href="#gnome-tweaks-整体调整工具" class="headerlink" title="gnome-tweaks - 整体调整工具"></a>gnome-tweaks - 整体调整工具</h3><pre><code class="bash">sudo apt install gnome-tweaks</code></pre><p><a href="https://extensions.gnome.org/" target="_blank" rel="noopener">Gnome Extensions</a></p><ul><li>Dash To Dock</li><li>NetSpeed - 顶栏网速监控</li><li>Blyr - Apply a Blur Effect to GNOME Shell UI elements.</li></ul><p><a href="https://www.gnome-look.org/browse/cat/" target="_blank" rel="noopener">Download Gnome Theme</a></p><h3 id="Dependencies"><a href="#Dependencies" class="headerlink" title="Dependencies"></a>Dependencies</h3><pre><code class="bash">sudo apt install sassc optipng libcanberra-gtk-module libglib2.0-dev libxml2-utils </code></pre><hr><h2 id="NodeJS"><a href="#NodeJS" class="headerlink" title="NodeJS"></a>NodeJS</h2><h3 id="从-NodeSource-中安装-Node-js-和-npm"><a href="#从-NodeSource-中安装-Node-js-和-npm" class="headerlink" title="从 NodeSource 中安装 Node.js 和 npm"></a>从 NodeSource 中安装 Node.js 和 npm</h3><blockquote><p><a href="https://nodesource.com/" target="_blank" rel="noopener">NodeSource</a> 是一个公司，聚焦于提供企业级的 Node 支持。它维护了一个 APT 软件源，其中包含了很多 Node.js 版本。如果你的应用需要指定版本的Node.js 版本，使用这个软件源。</p></blockquote><ul><li>以 sudo 用户身份运行下面的命令，下载并执行 NodeSource 安装脚本：</li></ul><pre><code class="bash">curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -</code></pre><p>这个脚本将会添加 NodeSource 的签名 key 到你的系统，创建一个 apt 源文件，安装必备的软件包，并且刷新 apt 缓存。</p><p>如果你需要另外的 Node.js 版本，例如12.x，将setup_14.x修改为setup_12.x。</p><ul><li>一旦 NodeSource 源被启用，安装 Node.js 和 npm:</li></ul><pre><code class="bash">sudo apt install nodejs</code></pre><p>nodejs 软件包同时包含node和npm二进制包。</p><ul><li>验证 Node.js 和 npm 是否正确安装。</li></ul><pre><code class="bash">node -vnpm -v</code></pre><hr><h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><pre><code class="bash">sudo apt install git</code></pre><h3 id="Github-Desktop"><a href="#Github-Desktop" class="headerlink" title="Github Desktop"></a>Github Desktop</h3><p><a href="https://meshworld.in/install-github-desktop-on-ubuntu-20-04-or-ubuntu-based-distributions/" target="_blank" rel="noopener">install-github-desktop-on-ubuntu-20-04-or-ubuntu-based-distributions</a></p><hr><h2 id="Donate-☕️"><a href="#Donate-☕️" class="headerlink" title="Donate ☕️"></a>Donate ☕️</h2><p>如果你喜欢我的博文，可以通过下面的方式支持我，你的支持是我最大的动力 😘</p><p>转载时请注明出处 ©️PhoenixNest</p><table><thead><tr><th align="center">Donate 😇</th><th align="center">Qr code</th></tr></thead><tbody><tr><td align="center">Wechat</td><td align="center"><img src="/img/wechat.png" alt="Wechat"></td></tr><tr><td align="center">Ali Pay</td><td align="center"><img src="/img/alipay.png" alt="Ali Pay"></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu Desktop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDS • Snort</title>
      <link href="/Notes-IDS-Snort/"/>
      <url>/Notes-IDS-Snort/</url>
      
        <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><blockquote><p>本篇将介绍我在工作期间，对办公室的一台<code>测试用服务器</code>部署<code>IDS(intrusion detection system)入侵检测系统</code>时的一些笔记分享。</p></blockquote><hr><p>参考资料:</p><ul><li><p><a href="https://www.snort.org/" target="_blank" rel="noopener">Snort Official</a></p></li><li><p><a href="https://linuxhint.com/snort-ubuntu-tutorial/" target="_blank" rel="noopener">LinuxHint • Snort Ubuntu Tutorial</a></p></li><li><p><a href="https://www.wireshark.org/" target="_blank" rel="noopener">WireShark</a></p></li></ul><hr><h2 id="About"><a href="#About" class="headerlink" title="About"></a>About</h2><p>本篇将介绍在诸多<code>开源</code>的IDS中，一个广为人知的开源系统<code>Snort</code>。</p><p>在1998年，Martin Roesch用C语言开发了开放源代码(Open Source)的入侵检测系统Snort。直至今天，Snort已发展成为一个具有多平台(Multi-Platform)、<code>实时(Real-Time)流量分析</code>、<code>网络IP数据包(Pocket)记录</code>等特性的强大的网络入侵检测/防御系统(Network Intrusion Detection/Prevention System)，即<code>NIDS/NIPS</code>。Snort符合通用公共许可(GPL——GNU General Pubic License)，在网上可以通过免费下载获得Snort，并且只需要几分钟就可以安装并开始使用。</p><hr><h2 id="一-部署Snort"><a href="#一-部署Snort" class="headerlink" title="(一) 部署Snort"></a>(一) 部署Snort</h2><pre><code class="bash">sudo apt-get install libpcap-dev bison flexsudo apt-get install snort</code></pre><h2 id="二-嗅探"><a href="#二-嗅探" class="headerlink" title="(二) 嗅探"></a>(二) 嗅探</h2><h3 id="1-基础用法"><a href="#1-基础用法" class="headerlink" title="1. 基础用法"></a>1. 基础用法</h3><pre><code class="bash">sudo snort -v</code></pre><h3 id="2-展示数据内容"><a href="#2-展示数据内容" class="headerlink" title="2. 展示数据内容"></a>2. 展示数据内容</h3><pre><code class="bash">sudo snort -vd</code></pre><h2 id="三-网络IP数据包记录"><a href="#三-网络IP数据包记录" class="headerlink" title="(三) 网络IP数据包记录"></a>(三) 网络IP数据包记录</h2><pre><code class="bash">sudo mkdir snortLogssudo snort -d -l snortLogs</code></pre><p>以上命令将会在snortLogs文件夹(用户可自行选择日志文件保存位置)下创建一个<code>.log.xxxxxx</code>结尾的日志文件，要查看该文件，可直接通过<a href="https://www.wireshark.org/download.html" target="_blank" rel="noopener">WireShark</a>打开，或使用以下命令：</p><pre><code class="bash">snort -d -v -r your-log-file-name.log.xxxxxx</code></pre><h2 id="四-NIDS"><a href="#四-NIDS" class="headerlink" title="(四) NIDS"></a>(四) NIDS</h2><p>未完待续…</p><hr><h2 id="Donate-☕️"><a href="#Donate-☕️" class="headerlink" title="Donate ☕️"></a>Donate ☕️</h2><p>如果你喜欢我的博文，可以通过下面的方式支持我，你的支持是我最大的动力 😘</p><p>转载时请注明出处 ©️PhoenixNest</p><table><thead><tr><th align="center">Donate 😇</th><th align="center">Qr code</th></tr></thead><tbody><tr><td align="center">Wechat</td><td align="center"><img src="/img/wechat.png" alt="Wechat"></td></tr><tr><td align="center">Ali Pay</td><td align="center"><img src="/img/alipay.png" alt="Ali Pay"></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Daily </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux Command Manual</title>
      <link href="/Notes-Linux-Command-Manual/"/>
      <url>/Notes-Linux-Command-Manual/</url>
      
        <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><blockquote><p>本篇将介绍有关<code>Linux终端使用</code>的一些笔记分享。</p><p>必要时请使用<code>sudo</code>权限，但<code>不建议</code>所有命令均使用sudo。</p></blockquote><hr><p>参考资料：</p><ul><li><p><a href="https://cdn.jsdelivr.net/gh/PhoenixNest/Warehouse@master/Notes/The%20Linux%20Command%20Line.pdf" target="_blank" rel="noopener">The Linux Command Line</a></p></li><li><p><a href="https://cdn.jsdelivr.net/gh/PhoenixNest/Warehouse@master/Notes/Ubuntu%20Server%20CLI%20pro%20tips.pdf" target="_blank" rel="noopener">Ubuntu Server CLI pro tips</a></p></li></ul><hr><h2 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h2><h3 id="获取所有网卡的IP地址"><a href="#获取所有网卡的IP地址" class="headerlink" title="获取所有网卡的IP地址"></a>获取所有网卡的IP地址</h3><pre><code class="bash"># get the IP address of all interfacesnetworkctl status</code></pre><h3 id="显示所有主机的IP地址"><a href="#显示所有主机的IP地址" class="headerlink" title="显示所有主机的IP地址"></a>显示所有主机的IP地址</h3><pre><code class="bash"># display all IP addresses of the hosthostname -I</code></pre><h3 id="开启-关闭某个网络接口"><a href="#开启-关闭某个网络接口" class="headerlink" title="开启/关闭某个网络接口"></a>开启/关闭某个网络接口</h3><pre><code class="bash"># enable/disable interfaceip link set &lt;interface&gt; upip link set &lt;interface&gt; down</code></pre><h3 id="防火墙规则"><a href="#防火墙规则" class="headerlink" title="防火墙规则"></a>防火墙规则</h3><pre><code class="bash"># enable firewall:sudo ufw enable# list rules:sudo ufw status# allow port:sudo ufw allow &lt;port&gt;# sudo ufw allow 22# deny port:sudo ufw deny &lt;port&gt;</code></pre><h3 id="SSH远程连接"><a href="#SSH远程连接" class="headerlink" title="SSH远程连接"></a>SSH远程连接</h3><pre><code class="bash"># connect remotely through SSHssh &lt;user&gt;@&lt;host IP&gt;</code></pre><hr><h2 id="安全性"><a href="#安全性" class="headerlink" title="安全性"></a>安全性</h2><h3 id="查看当前登录账户"><a href="#查看当前登录账户" class="headerlink" title="查看当前登录账户"></a>查看当前登录账户</h3><pre><code class="bash"># show which users are logged inw</code></pre><h3 id="查看用户密码逾期时间"><a href="#查看用户密码逾期时间" class="headerlink" title="查看用户密码逾期时间"></a>查看用户密码逾期时间</h3><pre><code class="bash"># Get password expiration date for &lt;user&gt;chage -l &lt;user&gt;</code></pre><h3 id="设置用户密码逾期时间"><a href="#设置用户密码逾期时间" class="headerlink" title="设置用户密码逾期时间"></a>设置用户密码逾期时间</h3><pre><code class="bash"># Set password expiration date for &lt;user&gt;sudo chage &lt;user&gt;</code></pre><h3 id="锁定用户"><a href="#锁定用户" class="headerlink" title="锁定用户"></a>锁定用户</h3><pre><code class="bash"># lock a user accountsudo passwd -l &lt;user&gt;</code></pre><h3 id="解锁用户"><a href="#解锁用户" class="headerlink" title="解锁用户"></a>解锁用户</h3><pre><code class="bash"># unlock a user accountsudo passwd -u &lt;user&gt;</code></pre><h3 id="列出开放的端口与其关联的进程"><a href="#列出开放的端口与其关联的进程" class="headerlink" title="列出开放的端口与其关联的进程"></a>列出开放的端口与其关联的进程</h3><pre><code class="bash"># List open ports and associated processessudo netstat -tulpn</code></pre><h3 id="自动检测并禁止危险IP"><a href="#自动检测并禁止危险IP" class="headerlink" title="自动检测并禁止危险IP"></a>自动检测并禁止危险IP</h3><pre><code class="bash"># automatically detect and ban abusive IP addressessudo apt install fail2ban# show banned IP addressessudo fail2ban-client statussudo fail2ban-client status &lt;jail&gt;</code></pre><h3 id="内核热更新"><a href="#内核热更新" class="headerlink" title="内核热更新"></a>内核热更新</h3><pre><code class="bash"># visit ubuntu.com/livepatch to get a free token for up to 3 machines.sudo snap install canonical-livepatchsudo canonical-livepatch enable &lt;token&gt;</code></pre><hr><h2 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h2><h3 id="文件列表"><a href="#文件列表" class="headerlink" title="文件列表"></a>文件列表</h3><pre><code class="bash"># List filesls# List files with permissions and datesls -al</code></pre><h3 id="文件间操作"><a href="#文件间操作" class="headerlink" title="文件间操作"></a>文件间操作</h3><pre><code class="bash"># create empty:touch &lt;filename&gt;# create with content:echo &quot;&lt;content&gt;&quot; &gt; &lt;filename&gt;# append content:echo &quot;&lt;content&gt;&quot; &gt;&gt; &lt;filename&gt;# display a text file:cat &lt;file&gt;# copy:cp &lt;file&gt; &lt;target filename&gt;# move/rename:mv &lt;file&gt; &lt;target directory/filename&gt;# delete:rm &lt;file&gt;# find files modified in the last n minutesfind &lt;directory&gt; -mmin -&lt;n&gt; -type f# eg. find . -mmin -5 -type f# display file paginatedless &lt;filename&gt;# display first n lineshead -n &lt;n&gt; &lt;filename&gt;# display last n linetail -n &lt;n&gt; &lt;filename&gt;# follow file content as it inncreasestail -f &lt;filename&gt;</code></pre><h3 id="压缩文件操作"><a href="#压缩文件操作" class="headerlink" title="压缩文件操作"></a>压缩文件操作</h3><pre><code class="bash"># Pack a directory into an archive# zip: zip -r &lt;target&gt; &lt;source dir&gt;# tar.gz: tar cvzf &lt;target&gt;.tar.gz &lt;source dir&gt;# Unpack an archive# zip: unzip &lt;zip file&gt;# tar.gz: tar xf &lt;tar.gz file&gt;</code></pre><h3 id="远程服务器文件操作"><a href="#远程服务器文件操作" class="headerlink" title="远程服务器文件操作"></a>远程服务器文件操作</h3><pre><code class="bash"># Copy file to remote serverscp &lt;filename&gt; &lt;user@server&gt;:&lt;destination&gt;# eg. scp config.yaml admin@192.0.0.0:/config# Copy directory recursively from remote serverscp -r &lt;user@server&gt;:&lt;source&gt; &lt;destination&gt;# eg. scp -r admin@192.0.0.0:/config /tmp</code></pre><h3 id="文件夹操作"><a href="#文件夹操作" class="headerlink" title="文件夹操作"></a>文件夹操作</h3><pre><code class="bash"># create a directorymkdir &lt;directory&gt;# create directories recursivelymkdir -p &lt;directory1&gt;&lt;directory2&gt;...# delete a directory recursivelyrm -r &lt;directory1&gt;&lt;directory2&gt;...</code></pre><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><pre><code class="bash"># quick file searchlocate &lt;q&gt;# search string in filegrep &lt;string&gt; &lt;filename&gt;# search string recursively in directorygrep -Iris &lt;string&gt; &lt;directory&gt;</code></pre><hr><h2 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h2><h3 id="软-硬件信息"><a href="#软-硬件信息" class="headerlink" title="软/硬件信息"></a>软/硬件信息</h3><pre><code class="bash"># display kernel versionuname -r# get disk usagedf -h# get memory usagecat /proc/meminfo</code></pre><h3 id="时区"><a href="#时区" class="headerlink" title="时区"></a>时区</h3><pre><code class="bash"># get system timetimedatectl status# set system timezonetimedatectl list-timezonessudo timedatectl set-timezone &lt;zone&gt;</code></pre><h3 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h3><pre><code class="bash"># monitor new logs for a servicejournalctl -u &lt;service&gt; --since now -f</code></pre><h3 id="登录记录"><a href="#登录记录" class="headerlink" title="登录记录"></a>登录记录</h3><pre><code class="bash"># get the list of recent loginslast</code></pre><h3 id="性能监控"><a href="#性能监控" class="headerlink" title="性能监控"></a>性能监控</h3><pre><code class="bash"># display running processessudo apt install htophtop</code></pre><h3 id="服务-进程-任务管理"><a href="#服务-进程-任务管理" class="headerlink" title="服务/进程/任务管理"></a>服务/进程/任务管理</h3><pre><code class="bash"># get all running servicessystemctl --state running# start or stop a serviceservice &lt;service&gt; start/stop# kill process by idkill &lt;process id&gt;# kill process by namepkill &lt;process name&gt;# run command in the background&lt;command&gt; &amp;# display background commandsjobs# bring command &lt;n&gt; to the foregroundfg &lt;n&gt;</code></pre><hr><h2 id="Donate-☕️"><a href="#Donate-☕️" class="headerlink" title="Donate ☕️"></a>Donate ☕️</h2><p>如果你喜欢我的博文，可以通过下面的方式支持我，你的支持是我最大的动力 😘</p><p>转载时请注明出处 ©️PhoenixNest</p><table><thead><tr><th align="center">Donate 😇</th><th align="center">Qr code</th></tr></thead><tbody><tr><td align="center">Wechat</td><td align="center"><img src="/img/wechat.png" alt="Wechat"></td></tr><tr><td align="center">Ali Pay</td><td align="center"><img src="/img/alipay.png" alt="Ali Pay"></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu Server • OpenStack</title>
      <link href="/Ubuntu-Server-OpenStack/"/>
      <url>/Ubuntu-Server-OpenStack/</url>
      
        <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><blockquote><p>本篇将介绍最近在<code>Ubuntu Sever 20.04LTS</code>上折腾 <code>OpenStack</code>时的一些笔记分享。</p></blockquote><p>在对OpenStack进行部署前，你需要执行👇：</p><pre><code class="bash"># refresh software listsudo apt-get update# [Optional] Upgrade your local softwaresudo apt-get upgrade# install MicroStack# --devmode 将不会收到更新sudo snap install microstack --beta --devmode# Once installed, you should see the following message on the terminal:microstack (beta) stein from Canonical✓ installed</code></pre><hr><p>参考资料：</p><p><a href="https://ubuntu.com/openstack/install" target="_blank" rel="noopener">Canonical • Install OpenStack yourself</a></p><p><a href="https://discourse.charmhub.io/t/microstack-install-error/4047/3" target="_blank" rel="noopener">OpenStack • Microstack install error</a></p><p><a href="https://docs.openstack.org/newton/install-guide-ubuntu/" target="_blank" rel="noopener">OpenStack • Installation Tutorial for Ubuntu</a></p><p><a href="https://docs.openstack.org/image-guide/ubuntu-image.html" target="_blank" rel="noopener">OpenStack • Example: Ubuntu image</a></p><p><a href="https://docs.openstack.org/horizon/queens/install/install-ubuntu.html" target="_blank" rel="noopener">OpenStack • Install and configure for Ubuntu</a></p><hr><h2 id="About"><a href="#About" class="headerlink" title="About"></a>About</h2><p>OpenStack是一个开源的云计算管理平台项目，是一系列软件开源项目的组合。由NASA(美国国家航空航天局)和Rackspace合作研发并发起，以Apache许可证（Apache软件基金会发布的一个自由软件许可证）授权的开源代码项目。</p><p>OpenStack为私有云和公有云提供可扩展的弹性的云计算服务。项目目标是提供实施简单、可大规模扩展、丰富、标准统一的云计算管理平台。</p><hr><h2 id="Initialise"><a href="#Initialise" class="headerlink" title="Initialise"></a>Initialise</h2><blockquote><p>自动初始化</p></blockquote><pre><code class="bash">sudo microstack init --auto --control</code></pre><blockquote><p>生成登录密钥</p></blockquote><p>登录端口： <span><a href="http://10.20.20.1/" target="_blank" rel="noopener">http://10.20.20.1/</a></span></p><pre><code class="bash">sudo snap get microstack config.credentials.keystone-password</code></pre><hr><h2 id="Donate-☕️"><a href="#Donate-☕️" class="headerlink" title="Donate ☕️"></a>Donate ☕️</h2><p>如果你喜欢我的博文，可以通过下面的方式支持我，你的支持是我最大的动力 😘</p><p>转载时请注明出处 ©️PhoenixNest</p><table><thead><tr><th align="center">Donate 😇</th><th align="center">Qr code</th></tr></thead><tbody><tr><td align="center">Wechat</td><td align="center"><img src="/img/wechat.png" alt="Wechat"></td></tr><tr><td align="center">Ali Pay</td><td align="center"><img src="/img/alipay.png" alt="Ali Pay"></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu Server </tag>
            
            <tag> OpenStack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu Server • MySQL</title>
      <link href="/Ubuntu-Server-MySQL/"/>
      <url>/Ubuntu-Server-MySQL/</url>
      
        <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><blockquote><p>本篇将介绍最近在<code>Ubuntu Server 20.04LTS</code>上折腾 <code>MySQL</code>时的一些笔记分享。</p></blockquote><p>在对MySQL进行部署与配置前，你需要执行👇：</p><pre><code class="bash"># refresh software listsudo apt-get update# [Optional] Upgrade your local softwaresudo apt-get upgrade# install MySQLsudo apt-get install mysql-server</code></pre><hr><p>参考资料：</p><ul><li><p><a href="https://www.digitalocean.com/community/tutorials/how-to-move-a-mysql-data-directory-to-a-new-location-on-ubuntu-16-04" target="_blank" rel="noopener">Digital Ocean - How To Move a MySQL Data Directory to a New Location on Ubuntu</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/89427540?utm_source=wechat_session" target="_blank" rel="noopener">知乎 • MySQL骨灰级性能优化</a></p></li><li><p><a href="https://dev.mysql.com/doc/refman/8.0/en/mysqlslap.html" target="_blank" rel="noopener">mysqlslap — A Load Emulation Client</a></p></li></ul><hr><h2 id="About"><a href="#About" class="headerlink" title="About"></a>About</h2><p>MySQL是一个关系型数据库管理系统，由瑞典MySQL AB 公司开发，属于 Oracle 旗下产品。MySQL 是最流行的关系型数据库管理系统之一，在 WEB 应用方面，MySQL是最好的 RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件之一。</p><p>MySQL是一种关系型数据库管理系统，关系数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。</p><p>MySQL所使用的 SQL 语言是用于访问数据库的最常用标准化语言。MySQL 软件采用了双授权政策，分为社区版和商业版，由于其体积小、速度快、总体拥有成本低，尤其是开放源码这一特点，一般中小型网站的开发都选择 MySQL 作为网站数据库。</p><hr><h2 id="（一）修改MySQL数据源Data文件夹位置"><a href="#（一）修改MySQL数据源Data文件夹位置" class="headerlink" title="（一）修改MySQL数据源Data文件夹位置"></a>（一）修改MySQL数据源Data文件夹位置</h2><p><code>Tips:</code> 原有MySQL的Data路径为/var/lib/mysql/，当我们进行长期存储时，硬盘空间将会持续吃紧，故本章介绍如何迁移MySQL中的Data路径以将MySQL的数据保存更换到新硬盘。</p><h3 id="Step1-关闭MySQL服务"><a href="#Step1-关闭MySQL服务" class="headerlink" title="Step1: 关闭MySQL服务"></a>Step1: 关闭MySQL服务</h3><pre><code class="bash"># 检查原有Data目录位置，默认的MySQL中Data文件夹位置位于 /var/lib/mysql/sudo mysql# 输出结果：Welcome to the MySQL monitor.  Commands end with ; or \g.Your MySQL connection id is 8Server version: 8.0.21-0ubuntu0.20.04.3 (Ubuntu)Copyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Type &#39;help;&#39; or &#39;\h&#39; for help. Type &#39;\c&#39; to clear the current input statement.mysql&gt; select @@datadir;+-------------------+| @@datadir         |+-------------------+| /var/lib/mysql/ |+-------------------+1 row in set (0.00 sec)# 关闭MySQL服务sudo systemctl stop mysql</code></pre><hr><h3 id="Step2-检查MySQL运行状况"><a href="#Step2-检查MySQL运行状况" class="headerlink" title="Step2: 检查MySQL运行状况"></a>Step2: 检查MySQL运行状况</h3><pre><code class="bash">sudo systemctl status mysql# 输出结果：• mysql.service - MySQL Community Server     Loaded: loaded (/lib/systemd/system/mysql.service; enabled; vendor preset: enabled)     Active: inactive (dead) since Mon 2020-08-03 03:32:37 UTC; 1h 55min ago   Main PID: 5065 (code=exited, status=0/SUCCESS)     Status: &quot;Server shutdown complete&quot;Aug 03 03:06:59 ubuntu-server systemd[1]: Starting MySQL Community Server...Aug 03 03:07:00 ubuntu-server systemd[1]: Started MySQL Community Server.Aug 03 03:32:35 ubuntu-server systemd[1]: Stopping MySQL Community Server...Aug 03 03:32:37 ubuntu-server systemd[1]: mysql.service: Succeeded.Aug 03 03:32:37 ubuntu-server systemd[1]: Stopped MySQL Community Server.</code></pre><hr><h3 id="Step3-迁移原MySQL数据文件"><a href="#Step3-迁移原MySQL数据文件" class="headerlink" title="Step3: 迁移原MySQL数据文件"></a>Step3: 迁移原MySQL数据文件</h3><p><code>Tips:</code> 假定待迁移Data目录为: /data/test</p><pre><code class="bash">sudo rsync -av /var/lib/mysql /data/test</code></pre><hr><h3 id="Step4-备份原MySQL数据文件"><a href="#Step4-备份原MySQL数据文件" class="headerlink" title="Step4: 备份原MySQL数据文件"></a>Step4: 备份原MySQL数据文件</h3><pre><code class="bash">sudo mv /var/lib/mysql /var/lib/mysql.bak</code></pre><hr><h3 id="Step5-交接目标目录权限"><a href="#Step5-交接目标目录权限" class="headerlink" title="Step5: 交接目标目录权限"></a>Step5: 交接目标目录权限</h3><pre><code class="bash">sudo chown -R mysql:mysql /data/test</code></pre><hr><h3 id="Step6-修改MySQL配置文件"><a href="#Step6-修改MySQL配置文件" class="headerlink" title="Step6: 修改MySQL配置文件"></a>Step6: 修改MySQL配置文件</h3><pre><code class="bash">sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf</code></pre><p><code>Tips:</code> 修改[mysqld]组中datadir的属性值，新增一行datadir键值。</p><pre><code class="bash">······[mysqld]## * Basic Settings#user            = mysql# pid-file      = /var/run/mysqld/mysqld.pid# socket        = /var/run/mysqld/mysqld.sock# port          = 3306# datadir       = /var/lib/mysql  datadir       = /data/test/mysql······</code></pre><hr><h3 id="Step7-修改apparmor的别名配置文件"><a href="#Step7-修改apparmor的别名配置文件" class="headerlink" title="Step7: 修改apparmor的别名配置文件"></a>Step7: 修改apparmor的别名配置文件</h3><pre><code class="bash">sudo vim /etc/apparmor.d/tunables/alias</code></pre><p><code>Tips:</code> 新增一项别名，并指向目标位置。</p><pre><code class="bash"># Alias rules can be used to rewrite paths and are done after variable# resolution. For example, if &#39;/usr&#39; is on removable media:# alias /usr/ -&gt; /mnt/usr/,## Or if mysql databases are stored in /home:# alias /var/lib/mysql/ -&gt; /home/mysql/,  alias /var/lib/mysql/ -&gt; /data/test/mysql/,</code></pre><hr><h3 id="Step8-重启系统apparmor服务"><a href="#Step8-重启系统apparmor服务" class="headerlink" title="Step8: 重启系统apparmor服务"></a>Step8: 重启系统apparmor服务</h3><pre><code class="bash">sudo invoke-rc.d apparmor reloadsudo systemctl restart apparmor</code></pre><hr><h3 id="Step9-越过MySQL检查"><a href="#Step9-越过MySQL检查" class="headerlink" title="Step9: 越过MySQL检查"></a>Step9: 越过MySQL检查</h3><pre><code class="bash">sudo mkdir /var/lib/mysql/mysql -p</code></pre><hr><h3 id="Step10-重启MySQL服务"><a href="#Step10-重启MySQL服务" class="headerlink" title="Step10: 重启MySQL服务"></a>Step10: 重启MySQL服务</h3><pre><code class="bash">sudo systemctl start mysqlsudo systemctl status mysql# 输出结果：● mysql.service - MySQL Community Server     Loaded: loaded (/lib/systemd/system/mysql.service; enabled; vendor preset: enabled)     Active: active (running) since Mon 2020-08-03 05:42:18 UTC; 7s ago    Process: 10205 ExecStartPre=/usr/share/mysql/mysql-systemd-start pre (code=exited, status&gt;   Main PID: 10228 (mysqld)     Status: &quot;Server is operational&quot;      Tasks: 39 (limit: 2249)     Memory: 334.7M     CGroup: /system.slice/mysql.service             └─10228 /usr/sbin/mysqldAug 03 05:42:17 ubuntu-server systemd[1]: Starting MySQL Community Server...Aug 03 05:42:18 ubuntu-server systemd[1]: Started MySQL Community Server.</code></pre><hr><h3 id="End-修改后的MySQL中Data位置"><a href="#End-修改后的MySQL中Data位置" class="headerlink" title="End: 修改后的MySQL中Data位置"></a>End: 修改后的MySQL中Data位置</h3><pre><code class="bash">sudo mysql# 输出结果：Welcome to the MySQL monitor.  Commands end with ; or \g.Your MySQL connection id is 8Server version: 8.0.21-0ubuntu0.20.04.3 (Ubuntu)Copyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Type &#39;help;&#39; or &#39;\h&#39; for help. Type &#39;\c&#39; to clear the current input statement.mysql&gt; select @@datadir;+-------------------+| @@datadir         |+-------------------+| /data/test/mysql/ |+-------------------+1 row in set (0.00 sec)</code></pre><hr><h2 id="（二）通过mysqlslap对MySQL进行压力测试"><a href="#（二）通过mysqlslap对MySQL进行压力测试" class="headerlink" title="（二）通过mysqlslap对MySQL进行压力测试"></a>（二）通过mysqlslap对MySQL进行压力测试</h2><h3 id="mysqlLslap"><a href="#mysqlLslap" class="headerlink" title="mysqlLslap"></a>mysqlLslap</h3><p>先来看看MySQL官方对mysqlslap工具的介绍：mysqlslap is a diagnostic program designed to emulate client load for a MySQL server and to report the timing of each stage. It works as if multiple clients are accessing the server.</p><p><code>简明概括</code>就是mysqlslap是MySQL5.1.4之后<code>自带</code>的benchmark<code>基准测试</code>工具，该工具可以模拟多个客户端同时<code>并发</code>的向服务器发出查询更新，给出了<code>性能测试</code>数据而且提供了<code>多种引擎的性能比较</code>。</p><p>该工具有诸多可选项可供选择以实现大部分场景下对MySQL<code>模拟</code>进行压力测试。</p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/UbuntuServer/MySQL/mysqlslap.png"><hr><h3 id="Tips-以下是常用的部分参数"><a href="#Tips-以下是常用的部分参数" class="headerlink" title="Tips: 以下是常用的部分参数"></a><code>Tips:</code> 以下是常用的部分参数</h3><pre><code class="bash"># 连接到的MySQL服务器的主机名(或IP地址)，默认为本地localhost--host=host_name# 连接MySQL服务时用的用户名(如：root)--user=root# 连接MySQL服务时用的密码(如：root)--password# 指定测试时生成的临时数据库名称(如：test)--create-schema=test# 工具自动生成测试用SQL语句--auto-generate-sql# 选择生成的SQL语句的格式(write, read, update, mixed)--auto-generate-sql-load-type=write# 执行的SQL总数量--number-of-queries=100000# 并发数，模拟多少个客户端同时执行query--concurrency=200# 引擎(如：myisam,innodb)--engines=innodb# 迭代的实验次数--iterations=100</code></pre><hr><h3 id="以下是我的机器上对MySQL进行一组压力测试的结果"><a href="#以下是我的机器上对MySQL进行一组压力测试的结果" class="headerlink" title="以下是我的机器上对MySQL进行一组压力测试的结果"></a>以下是我的机器上对MySQL进行一组压力测试的结果</h3><p><code>写入:</code></p><pre><code class="bash"># 写入脚本sudo mysqlslap --user=root --password=root --create-schema=test --auto-generate-sql --auto-generate-sql-load-type=write --concurrency=20 --number-of-queries=1000 --iterations=100# 结果mysqlslap: [Warning] Using a password on the command line interface can be insecure.Benchmark    Average number of seconds to run all queries: 0.205 seconds    Minimum number of seconds to run all queries: 0.173 seconds    Maximum number of seconds to run all queries: 0.395 seconds    Number of clients running queries: 20    Average number of queries per client: 50</code></pre><hr><p><code>读取:</code></p><pre><code class="bash"># 读取脚本sudo mysqlslap --user=root --password=root --create-schema=test --auto-generate-sql --auto-generate-sql-load-type=read --concurrency=20 --number-of-queries=1000 --iterations=100# 结果mysqlslap: [Warning] Using a password on the command line interface can be insecure.Benchmark    Average number of seconds to run all queries: 0.132 seconds    Minimum number of seconds to run all queries: 0.120 seconds    Maximum number of seconds to run all queries: 0.191 seconds    Number of clients running queries: 20    Average number of queries per client: 50</code></pre><hr><h2 id="Donate-☕️"><a href="#Donate-☕️" class="headerlink" title="Donate ☕️"></a>Donate ☕️</h2><p>如果你喜欢我的博文，可以通过下面的方式支持我，你的支持是我最大的动力 😘</p><p>转载时请注明出处 ©️PhoenixNest</p><table><thead><tr><th align="center">Donate 😇</th><th align="center">Qr code</th></tr></thead><tbody><tr><td align="center">Wechat</td><td align="center"><img src="/img/wechat.png" alt="Wechat"></td></tr><tr><td align="center">Ali Pay</td><td align="center"><img src="/img/alipay.png" alt="Ali Pay"></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu Server </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu Server • Initialization</title>
      <link href="/Ubuntu-Server-Initialization/"/>
      <url>/Ubuntu-Server-Initialization/</url>
      
        <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><blockquote><p>本篇将介绍最近在<code>Dell PowerEdge R420</code>服务器上折腾<code>Ubuntu Server 20.04LTS</code>的一些笔记分享。</p></blockquote><p>在对服务器进行配置与操作前，你需要准备👇：</p><ul><li><p>下载<a href="http://releases.ubuntu.com/20.04/" target="_blank" rel="noopener">Ubuntu Server 20.04LTS</a>镜像并将其<a href="https://rufus.ie/zh_CN.html" target="_blank" rel="noopener">刷入U盘</a></p></li><li><p><code>(建议)</code>在<code>有网络</code>连接的情况下安装Ubuntu Server 20.04LTS</p></li></ul><hr><p>参考资料:</p><ul><li><p><a href="https://ubuntu.com/download/server" target="_blank" rel="noopener">Download Ubuntu Server</a></p></li><li><p><a href="https://ubuntu.com/tutorials/install-ubuntu-server#1-overview" target="_blank" rel="noopener">Install Ubuntu Server</a></p></li><li><p><a href="https://www.tecmint.com/install-ubuntu-20-04-server/" target="_blank" rel="noopener">How to Install Ubuntu 20.04 Server</a></p></li><li><p><a href="https://linuxize.com/post/how-to-enable-ssh-on-ubuntu-20-04/#:~:text=%20Perform%20the%20following%20steps%20as%20root%20or,verify%20that%20SSH%20is%20running%20by...%20More%20" target="_blank" rel="noopener">How to Enable SSH on Ubuntu 20.04</a></p></li></ul><hr><h2 id="About"><a href="#About" class="headerlink" title="About"></a>About</h2><p>Ubuntu是一个以<code>桌面应用</code>为主的Linux操作系统，其名称来自非洲南部祖鲁语或豪萨语的“ubuntu”一词，意思是“人性”“我的存在是因为大家的存在”，是非洲传统的一种价值观。</p><p>Ubuntu基于<code>Debian发行版</code>和Gnome桌面环境，而从11.04版起，Ubuntu发行版放弃了Gnome桌面环境，改为Unity。从前人们认为Linux难以安装、难以使用，在Ubuntu出现后这些都成为了历史。</p><p>Ubuntu也拥有庞大的社区力量，用户可以方便地从社区获得帮助。自Ubuntu 18.04 LTS其，Ubuntu发行版又重新开始使用GNOME3桌面环境。</p><hr><h2 id="（一）-安装Ubuntu-Server"><a href="#（一）-安装Ubuntu-Server" class="headerlink" title="（一）. 安装Ubuntu Server"></a>（一）. 安装Ubuntu Server</h2><h3 id="Step1-选择语言"><a href="#Step1-选择语言" class="headerlink" title="Step1: 选择语言"></a>Step1: 选择语言</h3><p><code>Tips:</code> Ubuntu Server无简中，本章节将介绍英文版安装。</p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/UbuntuServer/install_1.png"><hr><h3 id="Step2-选择键盘布局"><a href="#Step2-选择键盘布局" class="headerlink" title="Step2: 选择键盘布局"></a>Step2: 选择键盘布局</h3><p><code>Tips:</code> 该处使用美式键盘布局即可，通用大部分的键盘布局。</p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/UbuntuServer/install_2.png"><hr><h3 id="Step3-网络设置"><a href="#Step3-网络设置" class="headerlink" title="Step3: 网络设置"></a>Step3: 网络设置</h3><p><code>Tips:</code> 建议在安装过程中联网进行安装，这样既能在后续的安装过程中同步升级软件包。如果选择离线安装，后续官方虽然说可以在安装后进行配置，但在多次配置ip却仍旧无法联网，不知道是20.04版本的小Bug还是其他原因。</p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/UbuntuServer/install_3.png"><hr><h3 id="Step4-代理设置"><a href="#Step4-代理设置" class="headerlink" title="Step4: 代理设置"></a>Step4: 代理设置</h3><p><code>Tips:</code> 有的话可以填写，本章节暂不进行配置。</p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/UbuntuServer/install_4.png"><hr><h3 id="Step5-镜像源配置"><a href="#Step5-镜像源配置" class="headerlink" title="Step5: 镜像源配置"></a>Step5: 镜像源配置</h3><p><code>Tips:</code> Ubuntu Server软件下载镜像源可以在安装时进行修改，本篇建议修改为<a href="https://mirror.tuna.tsinghua.edu.cn/help/ubuntu/" target="_blank" rel="noopener">清华大学开源软件镜像</a>：<a href="https://mirrors.tuna.tsinghua.edu.cn/ubuntu/" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/ubuntu/</a></p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/UbuntuServer/install_5.png"><hr><h3 id="Step6-引导空间配置"><a href="#Step6-引导空间配置" class="headerlink" title="Step6: 引导空间配置"></a>Step6: 引导空间配置</h3><p><code>Tips:</code> 可根据需求对引导空间进行调整，本章节暂不进行配置。</p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/UbuntuServer/install_6.png"><hr><h3 id="Step7-分区配置"><a href="#Step7-分区配置" class="headerlink" title="Step7: 分区配置"></a>Step7: 分区配置</h3><p><code>Tips:</code> Linux对于分区较为敏感，类如：/usr /bin /home /efi等等分区都有及其重要的作用，使用时稍有不慎对系统分区进行错误操作将造成毁灭性的严重后果，此处暂不展开分析系统分区的规则与建议，有兴趣的读者可自行前往<a href="https://www.linux.org/" target="_blank" rel="noopener">Linux官方网站</a>学习。</p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/UbuntuServer/install_7.png"><hr><h3 id="Step8-Ubuntu-Server账号配置"><a href="#Step8-Ubuntu-Server账号配置" class="headerlink" title="Step8: Ubuntu Server账号配置"></a>Step8: Ubuntu Server账号配置</h3><p><code>Tips:</code> 设置一个账号用以登录系统，此处要注意username的命名限制。</p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/UbuntuServer/install_9.png"><hr><h3 id="Step9-SSH设置"><a href="#Step9-SSH设置" class="headerlink" title="Step9: SSH设置"></a>Step9: SSH设置</h3><p><code>Tips:</code> Ubuntu Server默认不开放SSH，但配置SSH能使工程师远程连接服务器，本章勾选并下载OpenSSH Server客户端。</p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/UbuntuServer/install_10.png"><hr><h3 id="Step10-等待Ubuntu-Server安装结束"><a href="#Step10-等待Ubuntu-Server安装结束" class="headerlink" title="Step10: 等待Ubuntu Server安装结束"></a>Step10: 等待Ubuntu Server安装结束</h3><p><code>Tips:</code> 若用户在联网状态下安装Ubuntu Server时，安装过程中将会自动检测并下载对应软件包更新。系统安装后需要去除安装介质(U盘\移动硬盘\光驱安装)，并单击Enter键重启，即安装完毕。</p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/UbuntuServer/install_11.png"><hr><h3 id="End-登录系统"><a href="#End-登录系统" class="headerlink" title="End: 登录系统"></a>End: 登录系统</h3><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/UbuntuServer/install_end.png"><hr><h2 id="（二）-远程连接Ubuntu-Server"><a href="#（二）-远程连接Ubuntu-Server" class="headerlink" title="（二）. 远程连接Ubuntu Server"></a>（二）. 远程连接Ubuntu Server</h2><h3 id="Step1-安装net-tools用以查看ip"><a href="#Step1-安装net-tools用以查看ip" class="headerlink" title="Step1: 安装net-tools用以查看ip"></a>Step1: 安装net-tools用以查看ip</h3><pre><code class="bash">sudo apt updatesudo apt upgrade# 若前期安装过程中未联网或未启用ssh的话，需要先下载openssh-serversudo apt install openssh-server# 安装net-tools工具sudo apt install net-tools</code></pre><hr><h3 id="Step2-查看本机ip"><a href="#Step2-查看本机ip" class="headerlink" title="Step2: 查看本机ip"></a>Step2: 查看本机ip</h3><pre><code class="bash">sudo ifconfig</code></pre><hr><h3 id="Step3-修改远程访问权限"><a href="#Step3-修改远程访问权限" class="headerlink" title="Step3: 修改远程访问权限"></a>Step3: 修改远程访问权限</h3><pre><code class="bash"># 修改该文件中PermitRootLogin的值为yesvim /etc/ssh/sshd_config</code></pre><hr><h3 id="Step4-使用指令查看ip"><a href="#Step4-使用指令查看ip" class="headerlink" title="Step4: 使用指令查看ip"></a>Step4: 使用指令查看ip</h3><pre><code class="bash">sudo ifconfig# 查看ip地址ens33: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500        inet 192.168.116.134  netmask 255.255.255.0  broadcast 192.168.116.255        inet6 fe80::20c:29ff:fecb:6b67  prefixlen 64  scopeid 0x20&lt;link&gt;        ether 00:0c:29:cb:6b:67  txqueuelen 1000  (Ethernet)        RX packets 47090  bytes 68633562 (68.6 MB)        RX errors 0  dropped 0  overruns 0  frame 0        TX packets 6040  bytes 421820 (421.8 KB)        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536        inet 127.0.0.1  netmask 255.0.0.0        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;        loop  txqueuelen 1000  (Local Loopback)        RX packets 190  bytes 16652 (16.6 KB)        RX errors 0  dropped 0  overruns 0  frame 0        TX packets 190  bytes 16652 (16.6 KB)        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</code></pre><hr><h3 id="Step5-使用远程链接工具链接"><a href="#Step5-使用远程链接工具链接" class="headerlink" title="Step5: 使用远程链接工具链接"></a>Step5: 使用远程链接工具链接</h3><p><code>Tips:</code> 本章节选用<code>XShell</code>进行远程连接。</p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/UbuntuServer/ubuntu_ssh.png"><hr><h2 id="（三）-Server常用命令"><a href="#（三）-Server常用命令" class="headerlink" title="（三）. Server常用命令"></a>（三）. Server常用命令</h2><pre><code class="bash"># Scan local disksudo fdisk -l# Check disk informationsudo df -HT# Create test dirsudo mkdir xxx# Eg: that you can create a test foldersudo mkdir /test# Mount a HDD/SDD to your systemsudo mount xxxxxx xxxxxx# Eg: you can mount /dev/nvme0n1 with you localDir with /datasudo mount /dev/nvme0n1 /data# Change filesystem to xfssudo mkfs.xfs xxxxxx# Eg: you can make the default change to the disk into xfs filesystem or the other filesystem you want to change(eg: ext4, ext3, ntfs)sudo mkfs.xfs /dev/nvme0n1# If you want to set the block size to another big one, try to add &#39;-b size=8k&#39;sudo mkfs.xfs -b size=xx xxxxxx# Eg: you can change the /dev/nvme0n1 into xfs with it&#39;s blocksize=8k# NOTICE: disk blocksize can not bigger than system default page sizesudo mkfs.xfs -b size=8k /dev/nvme0n1# Get default system pagesizesudo getconf PAGESIZE# Reboot the computer immediatelysudo reboot -h now# Shut down the computer immediatelysudo shutdown -h now</code></pre><hr><h2 id="（四）-通过”dd”关键字对硬盘进行读写测试"><a href="#（四）-通过”dd”关键字对硬盘进行读写测试" class="headerlink" title="（四）. 通过”dd”关键字对硬盘进行读写测试"></a>（四）. 通过”dd”关键字对硬盘进行读写测试</h2><pre><code class="bash"># R/W Test# The server&#39;s write file size is usually 4k and 8K, here the disk will be written test from 4K, 8K, 64K, 1M order, and after the memory cache is cleared, the 1M file on the disk will be read and deleted.# Create Tiny Size Test File &amp;&amp;  Start Write Speed Testsudo dd if=/dev/zero of=./largefile bs=4k count=1024# Create Small Size Test File &amp;&amp;  Start Write Speed Testsudo dd if=/dev/zero of=./largefile bs=8k count=1024# Create Middle Size Test File &amp;&amp;  Start Write Speed Testsudo dd if=/dev/zero of=./largefile bs=64k count=1024# Create Large Size Test File &amp;&amp;  Start Write Speed Testsudo dd if=/dev/zero of=./largefile bs=1M count=1024# Remove RAM Cachesudo sh -c &quot;sync &amp;&amp; echo 3 &gt; /proc/sys/vm/drop_caches&quot;# Check Read Speedsudo dd if=./largefile of=./null bs=8k</code></pre><hr><h2 id="Donate-☕️"><a href="#Donate-☕️" class="headerlink" title="Donate ☕️"></a>Donate ☕️</h2><p>如果你喜欢我的博文，可以通过下面的方式支持我，你的支持是我最大的动力 😘</p><p>转载时请注明出处 ©️PhoenixNest</p><table><thead><tr><th align="center">Donate 😇</th><th align="center">Qr code</th></tr></thead><tbody><tr><td align="center">Wechat</td><td align="center"><img src="/img/wechat.png" alt="Wechat"></td></tr><tr><td align="center">Ali Pay</td><td align="center"><img src="/img/alipay.png" alt="Ali Pay"></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu Server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序 • 自动化测试</title>
      <link href="/MiniProgram-AutoTest/"/>
      <url>/MiniProgram-AutoTest/</url>
      
        <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><blockquote><p>本篇将介绍最近在<code>小程序开发</code>项目上所遇到的有关<code>自动化测试</code>的一些笔记分享。</p></blockquote><p>在进行小程序自动化测试前，你需要准备👇：</p><ul><li><p><a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a> - v8.0及以上</p></li><li><p><a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html" target="_blank" rel="noopener">微信开发者工具</a> - v1.02.1907232及以上</p></li><li><p><a href="https://github.com/wechat-miniprogram/miniprogram-demo" target="_blank" rel="noopener">微信官方小程序Demo</a> - 待测试的项目Demo</p></li></ul><hr><p>参考资料：</p><ul><li><p><a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/auto/" target="_blank" rel="noopener">微信小程序官方自动化测试开发文档</a></p></li><li><p><a href="https://blog.csdn.net/weixin_43827779/article/details/106164261" target="_blank" rel="noopener">小程序自动化测试快速开始</a></p></li><li><p><a href="https://blog.csdn.net/weixin_43827779/article/details/106180757" target="_blank" rel="noopener">小程序自动化测试+jest</a></p></li><li><p><a href="https://blog.csdn.net/qq_40816649/article/details/102463350" target="_blank" rel="noopener">miniprogram-automator微信小程序自动化工具</a></p></li></ul><hr><h2 id="Get-Started"><a href="#Get-Started" class="headerlink" title="Get Started"></a>Get Started</h2><h3 id="Step1-项目初始化"><a href="#Step1-项目初始化" class="headerlink" title="Step1: 项目初始化"></a>Step1: 项目初始化</h3><pre><code class="bash">cd miniprogram-demonpm icd miniprogramnpm i</code></pre><h3 id="Step2-引入自动化测试插件与框架"><a href="#Step2-引入自动化测试插件与框架" class="headerlink" title="Step2: 引入自动化测试插件与框架"></a>Step2: 引入自动化测试插件与框架</h3><p>完成上述步骤后，安装miniprogram-automator，这是一款由<code>微信官方</code>推出的小程序自动化测试框架。</p><pre><code class="bash">npm i miniprogram-automator --save-dev</code></pre><p>引入jset测试框架</p><pre><code class="bash">npm i jest</code></pre><p><strong>PS: 在下载完jest后，还需要前往package.json配置jest。</strong></p><pre><code class="JavaScript">&quot;scripts&quot;: {    &quot;test&quot;: &quot;jest&quot;  }</code></pre><p>添加完上述代码后，在进行测试时系统会<code>自动找到</code>包括.test.js结尾的测试文件并运行。</p><h3 id="Step3-开启自动化测试端口"><a href="#Step3-开启自动化测试端口" class="headerlink" title="Step3: 开启自动化测试端口"></a>Step3: 开启自动化测试端口</h3><p><strong>PS: (该步骤可省略，当第5步出现问题时，可先开启端口再执行第5步命令)</strong></p><p>1) 打开微信开发者工具，前往设置 -&gt; 通用设置 -&gt; 安全 -&gt; 开启服务端口</p><p>2) 前往你的微信开发者工具安装目录，例：D:\微信开发者工具，开启自动化测试端口</p><pre><code class="bash">.\cli.bat --auto 你的项目地址 --auto-port 9420</code></pre><p>当出现以下信息时，表示端口启用成功，并会同时开启/重启微信开发者工具。</p><pre><code class="bash">PS D:\微信web开发者工具&gt; .\cli.bat --auto C:\Users\P7XXTM1-G\Desktop\miniprogram-demo\miniprogram --auto-port 9420√ IDE server has started, listening on http://127.0.0.1:33553[warn] DEPRECATED please upgrade to the following v2 command instead ( doc: https://developers.weixin.qq.com/miniprogram/dev/devtools/cli.html ) cli auto --project C:\Users\P7XXTM1-G\Desktop\miniprogram-demo\miniprogram --auto-port 9420√ Open project with automation enabled success C:\Users\P7XXTM1-G\Desktop\miniprogram-demo\miniprogram</code></pre><hr><h3 id="Step4-编写测试脚本"><a href="#Step4-编写测试脚本" class="headerlink" title="Step4: 编写测试脚本"></a>Step4: 编写测试脚本</h3><p>开启完测试端口后，新建一个miniTest文件夹用于放置测试文件，创建index.test.js文件，开始编写测试脚本。</p><p>此处使用官方的<a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/auto/demo.html" target="_blank" rel="noopener">测试脚本案例👇</a></p><pre><code class="JavaScript">const automator = require(&#39;miniprogram-automator&#39;)describe(&#39;index&#39;, () =&gt; {  let miniProgram  let page  beforeAll(async () =&gt; {    miniProgram = await automator.launch({      cliPath:&#39;D://微信web开发者工具//cli.bat&#39;,// cli.bat文件一般在微信开发者工具目录下，MacOS下一般无需配置cliPath      projectPath: &#39;./&#39; // 默认当前项目地址即可    })    page = await miniProgram.reLaunch(&#39;/page/component/index&#39;) // 测试页面    await page.waitFor(500)  }, 30000)  // 测试脚本  it(&#39;desc&#39;, async () =&gt; {    const desc = await page.$(&#39;.index-desc&#39;)    expect(desc.tagName).toBe(&#39;view&#39;)    expect(await desc.text()).toContain(&#39;以下将展示小程序官方组件能力&#39;)  })  afterAll(async () =&gt; {    await miniProgram.close()  })})</code></pre><h3 id="Step5-开始自动化测试"><a href="#Step5-开始自动化测试" class="headerlink" title="Step5: 开始自动化测试"></a>Step5: 开始自动化测试</h3><p>编写完测试脚本后，在终端输入npm run test，即可进行自动化测试，期间将会<code>打开/重启</code>微信开发者工具。</p><pre><code class="bash">PS C:\Users\P7XXTM1-G\Desktop\miniprogram-demo\miniprogram&gt; npm run test&gt; miniprogram@1.0.0 test C:\Users\P7XXTM1-G\Desktop\miniprogram-demo\miniprogram&gt; jest PASS  miniTest/index.test.js (21.827 s)  index    √ desc (12 ms)Test Suites: 1 passed, 1 totalTests:       1 passed, 1 totalSnapshots:   0 totalTime:        22.683 s, estimated 27 sRan all test suites.</code></pre><p>当出现上述信息时，表示自动化测试已通过。</p><hr><h2 id="API"><a href="#API" class="headerlink" title="API"></a>API</h2><p>• <a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/auto/automator.html" target="_blank" rel="noopener">Automator</a>模块提供了<code>启动及连接开发者工具</code>的方法。</p><p>• <a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/auto/miniprogram.html" target="_blank" rel="noopener">MiniProgram</a>模块提供了<code>控制小程序</code>的方法。</p><p>• <a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/auto/page.html" target="_blank" rel="noopener">Page</a>模块提供了<code>控制小程序页面</code>的方法。</p><p>• <a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/auto/element.html" target="_blank" rel="noopener">Element</a>模块提供了<code>控制小程序页面元素</code>的方法。</p><hr><h2 id="Donate-☕️"><a href="#Donate-☕️" class="headerlink" title="Donate ☕️"></a>Donate ☕️</h2><p>如果你喜欢我的博文，可以通过下面的方式支持我，你的支持是我最大的动力 😘</p><p>转载时请注明出处 ©️PhoenixNest</p><table><thead><tr><th align="center">Donate 😇</th><th align="center">Qr code</th></tr></thead><tbody><tr><td align="center">Wechat</td><td align="center"><img src="/img/wechat.png" alt="Wechat"></td></tr><tr><td align="center">Ali Pay</td><td align="center"><img src="/img/alipay.png" alt="Ali Pay"></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 微信小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WeChat-MiniProgram </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>毛中特概论 • 模拟题整理</title>
      <link href="/Notes-Political/"/>
      <url>/Notes-Political/</url>
      
        <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><blockquote><p>本篇整理了一些我在近期复习专插本考试与参加专插本政治公开课时所遇到的一些模拟练习题。</p></blockquote><hr><h2 id="一-毛泽东思想及其历史地位"><a href="#一-毛泽东思想及其历史地位" class="headerlink" title="(一) 毛泽东思想及其历史地位"></a>(一) 毛泽东思想及其历史地位</h2><h3 id="1-辨析题-坚持群众路线，就要坚持人民是历史发展的根本力量"><a href="#1-辨析题-坚持群众路线，就要坚持人民是历史发展的根本力量" class="headerlink" title="1.(辨析题) 坚持群众路线，就要坚持人民是历史发展的根本力量"></a><strong>1.(辨析题) 坚持群众路线，就要坚持人民是历史发展的根本力量</strong></h3><p><code>关键点</code>：人民群众是历史的主体，是历史的创造者。</p><p>答案：</p><p>正确。群众路线的本质是<code>人民群众是历史的创造者</code>，坚持群众路线就要坚持<code>人民是历史发展的根本力量</code>。</p><p>(1)<code>尊重</code>人民首创精神；<code>尊重</code>人民意愿、经验、权利；<code>正确行使</code>人民给予的权利，<code>自觉接受</code>人民监督。</p><p>(2)坚持<code>全心全意为人民服务的宗旨</code>。在任何时候都把群众利益放在首位。</p><p>(3)保持<code>党同人民群众之间的血肉联系</code>，把群众观点、群众路线深深植根与全党同志思想。落实到每个党员行动上。</p><h3 id="2-简答题-如何科学认识毛泽思想的历史地位"><a href="#2-简答题-如何科学认识毛泽思想的历史地位" class="headerlink" title="2.(简答题) 如何科学认识毛泽思想的历史地位"></a><strong>2.(简答题) 如何科学认识毛泽思想的历史地位</strong></h3><p><code>关键点</code>：马克思主义中国化第一次历史性的飞跃；为中特奠定理论基础；精神财富</p><p>答案：</p><p>(1)是马克思主义中国化<code>第一次历史性的飞跃</code>，为中国特色社会主体理论体系的形成奠定理论基础。</p><p>(2)是中国革命与建设的<code>科学指南</code>，是被实践证明了的关于中国革命与建设的<code>正确理论原则</code>和<code>经验总结</code>。</p><p>(3)是中国共产党和中国人民宝贵的<code>精神财富</code>。</p><p>(4)要将毛泽东晚年所犯的错误同经过长期历史检验而形成为科学理论的毛泽东思想<code>区别</code>开来。</p><hr><h2 id="二-毛泽东思想主要内容和活的灵魂"><a href="#二-毛泽东思想主要内容和活的灵魂" class="headerlink" title="(二) 毛泽东思想主要内容和活的灵魂"></a>(二) 毛泽东思想主要内容和活的灵魂</h2><h3 id="1-辨析题-新民主主义革命的经济纲领是“一化三改”"><a href="#1-辨析题-新民主主义革命的经济纲领是“一化三改”" class="headerlink" title="1.(辨析题)新民主主义革命的经济纲领是“一化三改”"></a><strong>1.(辨析题)新民主主义革命的经济纲领是“一化三改”</strong></h3><p><code>关键点</code>：同过渡时期总路线的主要内容区别开来</p><p>答案：</p><p>错误。“一化三改”是党在过渡时期总路线主要内容的概括。</p><p>新民主主义革命的经济纲领是(<code>两个保护、一个没收</code>)：</p><p>(1)<code>没收</code>封建地主阶级的土地归农民所有，这是新民主主义革命的<code>主要内容</code>。</p><p>(2)<code>没收</code>官僚资本主义的垄断资本归新民主主义的国家所有，这是新民主主义革命的<code>题中之要</code>。</p><p>(3)<code>保护</code>民族工商业，这是新民主主义革命经济纲领中极具<code>特色</code>的一项<code>内容</code>。</p><h3 id="2-简答题-新民主主义革命三大法宝的关系"><a href="#2-简答题-新民主主义革命三大法宝的关系" class="headerlink" title="2.(简答题)新民主主义革命三大法宝的关系"></a><strong>2.(简答题)新民主主义革命三大法宝的关系</strong></h3><p><code>作答思路</code>：提出时间；三大法宝是什么；三者关系</p><p>答案：</p><p>抗战时期，毛泽东系统论述了统一战线、武装斗争、党的建设这三大法宝之间的关系。</p><p>(1)<code>统一战争、武装斗争</code>是中国革命的两个<code>基本特点</code>，是战胜敌人的两个<code>基本武器</code>。</p><p>(2)<code>统一战线</code>是实行武装斗争的<code>统一战线</code>。</p><p>(3)<code>武装斗争</code>是统一战线的<code>中心支柱</code>。</p><p>(4)<code>党的组织</code>是掌握统一战线和武装斗争这两个武器以实行对敌冲锋陷阵的<code>英勇战士</code>。</p><h3 id="3-简答题-新民主主义革命理论的意义"><a href="#3-简答题-新民主主义革命理论的意义" class="headerlink" title="3.(简答题)新民主主义革命理论的意义"></a><strong>3.(简答题)新民主主义革命理论的意义</strong></h3><p>答案：</p><p>新民主主义革命理论是独创性的理论。</p><p>(1)<code>揭示</code>了近代中国革命的<code>发展规律</code>，<code>开辟</code>了马克思主义中国化的<code>发展道路</code>。</p><p>(2)指导完成新民主主义革命，<code>建立了中华人民共和国</code>，中国人民从此站起来了。</p><p>(3)<code>鼓舞和推动</code>了<code>世界人民</code>反抗帝国主义、殖民主义的斗争，<code>增强了他们</code>反对帝国主义斗争<code>的信心</code>。</p><h3 id="4-简答题-简述新民主主义基本纲领"><a href="#4-简答题-简述新民主主义基本纲领" class="headerlink" title="4.(简答题)简述新民主主义基本纲领"></a><strong>4.(简答题)简述新民主主义基本纲领</strong></h3><p><code>作答思路</code>：基本纲领由什么组成；内容是什么；</p><p>新民主主义的基本纲领有：政治纲领、经济纲领、文化纲领</p><p>(1)<code>政治纲领</code>：推翻帝国主义和封建主义的统治，建立一个由无产阶级领导，以工农联盟为基础，各革命阶级联合专政的新民主主义共和国。</p><p>(2)<code>经济纲领</code>：<code>没收</code>封建地主阶级的土地归农民所有；<code>没收</code>官僚资本阶级的垄断资本归新民主主义的国家所有；<code>保护</code>民族工商业。</p><p>(3)<code>文化纲领</code>：无产阶级领导的人民大众的<code>反帝反封建</code>的文化，即<code>民主的科学的大众的</code>文化。</p><h3 id="5-论述题-论述新民主主义革命时期统一战线的构成和实践经验"><a href="#5-论述题-论述新民主主义革命时期统一战线的构成和实践经验" class="headerlink" title="5.(论述题)论述新民主主义革命时期统一战线的构成和实践经验"></a><strong>5.(论述题)论述新民主主义革命时期统一战线的构成和实践经验</strong></h3><p>答案：</p><p>统一战线的<code>构成</code>：</p><p>(1)工人阶级同农民阶级、广大知识分子及其他劳动者的联盟，主要是<code>工农联盟</code>，这<code>是统一战争的基础</code>。</p><p>(2)工人阶级和非劳动人民的联盟，主要是<code>与民族资产阶级的联盟</code>。</p><p>实践<code>经验</code>：</p><p>(1)要<code>建立巩固的工农联盟</code>。</p><p>(2)<code>正确对待资产阶级</code>，尤其是民族资产阶级。</p><p>(3)采取<code>区别对待的方针</code>。</p><p>(4)坚持<code>独立自主原则</code>，保持党在思想上、政治上、组织上的独立性。</p><hr><h2 id="三-社会主义改造理论-•-四-社会主义建设道路初步探索的理论成果"><a href="#三-社会主义改造理论-•-四-社会主义建设道路初步探索的理论成果" class="headerlink" title="(三)社会主义改造理论 • (四)社会主义建设道路初步探索的理论成果"></a>(三)社会主义改造理论 • (四)社会主义建设道路初步探索的理论成果</h2><h3 id="1-简答题-党在过渡时期总路线"><a href="#1-简答题-党在过渡时期总路线" class="headerlink" title="1.(简答题)党在过渡时期总路线"></a><strong>1.(简答题)党在过渡时期总路线</strong></h3><p><code>作答思路</code>：总路线是什么；内容有什么</p><p>答案：</p><p>党在过渡时期总路线的<code>完整表述</code>是：</p><p>(1)<code>这是</code>从中华人民共和国成立的到社会主义改造基本完成的<code>一个过渡时期</code>。</p><p>(2)党在这个时期的<code>总路线和总任务</code>是：要在一个相当长的时期内，逐步<code>实现</code>国家的<code>社会主义工业化</code>，逐步<code>实现</code>国家对<code>农业、手工业、资本主义工商业的社会主义改造</code>。</p><p>党在过渡时期的<code>主要内容是“一化三改”</code>，其中：</p><p>(1)“一化”指的是<code>社会主义工业化</code>。</p><p>(2)“三改”指的是对<code>农业、手工业、资本主义工商业的社会主义改造</code>。</p><p>这是一条社会主义<code>建设与改造同时并举</code>的路线。</p><h3 id="2-简答题-我国社会主义改造的历史经验"><a href="#2-简答题-我国社会主义改造的历史经验" class="headerlink" title="2.(简答题)我国社会主义改造的历史经验"></a><strong>2.(简答题)我国社会主义改造的历史经验</strong></h3><p>答案：</p><p>(1)坚持社会主义<code>建设与改造同时并举</code>。</p><p>(2)采取<code>积极引导、稳步前进</code>的方针。</p><p>(3)用<code>和平方式</code>进行改造</p><h3 id="3-简答题-中国确立社会主义基本制度的重大意义"><a href="#3-简答题-中国确立社会主义基本制度的重大意义" class="headerlink" title="3.(简答题)中国确立社会主义基本制度的重大意义"></a><strong>3.(简答题)中国确立社会主义基本制度的重大意义</strong></h3><p>答案：</p><p>(1)社会主义基本制度的确立<code>是中国历史上最深刻最伟大的变革</code>。</p><p>(2)极大地<code>促进了社会生产力的发展</code>。</p><p>(3)广大劳动人民成为国家的主人，这<code>是中国几千年来阶级关系最根本的变革</code>。</p><p>(4)<code>增强</code>了社会主义力量，对<code>维护世界和平积极影响</code>。</p><p>(5)<code>丰富和发展</code>了科学社会主义理论。</p><h3 id="4-如何调动一切积极因素为社会主义事业服务"><a href="#4-如何调动一切积极因素为社会主义事业服务" class="headerlink" title="4.如何调动一切积极因素为社会主义事业服务"></a><strong>4.如何调动一切积极因素为社会主义事业服务</strong></h3><p><code>作答思路</code>：何时提出；怎么做</p><p>答案：</p><p>《论十大关系》确定了一个基本方针，即调动一切积极因素为社会主义事业服务。</p><p>(1)必须<code>坚持中国共产党的领导</code>。</p><p>(2)必须<code>发展社会主义民主政治</code>。</p><p>(3)<code>科学认识社会主义发展阶段和社会主义建设的规律</code>。毛泽东指出，社会主义发展阶段可分为两个阶段，第一阶段是不发达的社会主义，第二阶段是比较发达的社会主义。</p><h3 id="5-简答题-社会主义道路初步探索的意义"><a href="#5-简答题-社会主义道路初步探索的意义" class="headerlink" title="5.(简答题)社会主义道路初步探索的意义"></a><strong>5.(简答题)社会主义道路初步探索的意义</strong></h3><p>答案：</p><p>(1)<code>巩固和发展</code>了我国的社会主义制度。</p><p>拓展：增强了广大人民群众走社会主义道路的信心，社会主义制度也在实践中得到发展。</p><p>(2)为开创中国特色社会主义提供了<code>宝贵经验</code>、<code>理论准备</code>、<code>物质基础</code>。</p><p>拓展：未开启新时期新道路奠定了重要的思想基础。改革开放以后我国赖以进行现代化建设的物质技术基础，建设等方面的骨干力量和他们的工作经验，大部分是这一时期建设起来的。</p><p>(3)<code>丰富</code>了科学社会主义的理论和实践。</p><p>拓展：丰富了中国社会主义的理论与实践，也丰富了科学社会主义的理论与实践，为其他国家的社会主义建设提供了经验和借鉴。</p><hr><h2 id="五-邓小平理论"><a href="#五-邓小平理论" class="headerlink" title="(五) 邓小平理论"></a>(五) 邓小平理论</h2><h3 id="1-简答题-邓小平关于社会主义本质概括的意义"><a href="#1-简答题-邓小平关于社会主义本质概括的意义" class="headerlink" title="1.(简答题)邓小平关于社会主义本质概括的意义"></a><strong>1.(简答题)邓小平关于社会主义本质概括的意义</strong></h3><p>(1)既包括了社会主义的生产力问题，又包括了以社会主义关系为基础的社会关系问题，是一个有机的整体。(<code>生产力与生产关系</code>)</p><p>(2)为我们<code>坚持完善和发展公有制</code>指明了方向。</p><p>(3)<code>遵循</code>了科学社会主义的基本原则，<code>反映</code>了人民的利益和时代要求，<code>廓清</code>了不合乎时代进步和社会发展规律的模糊观念，<code>摆脱</code>了长期以来拘泥于具体形式而忽略社会主义本质的错误倾向，<code>深化</code>了对科学社会主义的认识。</p><h3 id="2-辨析题-改革是社会主义制度的自我完善和自我发展"><a href="#2-辨析题-改革是社会主义制度的自我完善和自我发展" class="headerlink" title="2.(辨析题)改革是社会主义制度的自我完善和自我发展"></a><strong>2.(辨析题)改革是社会主义制度的自我完善和自我发展</strong></h3><p><code>作答思路</code>：是什么；实质和目标</p><p>(1)改革作为一次新的革命，<code>不是也不允许</code>我们否定和抛弃我们建立起来的社会主义基本制度，他是社会主义的<code>自我完善和自我发展</code>。</p><p>(2)改革<code>不是</code>一个阶级推翻另一个阶级的原来意义上的革命，<code>也不是</code>经济体制细枝末节的修补，<code>而是</code>对体制的根本性变革。</p><p>(3)改革的实质和目标，是要从根本上<code>改变</code>束缚我国生产力发展的<code>经济体制</code>，<code>建立</code>充满生机活力的<code>社会主义新经济体制</code>，同时相应地<code>改革政治体制和其他方面的体制</code>，<code>实现中国社会主义现代</code>。</p><h3 id="3-简答题-邓小平“和平统一，一国两制”的基本内容"><a href="#3-简答题-邓小平“和平统一，一国两制”的基本内容" class="headerlink" title="3.(简答题)邓小平“和平统一，一国两制”的基本内容"></a><strong>3.(简答题)邓小平“和平统一，一国两制”的基本内容</strong></h3><p><code>作答思路</code>：以解决什么问题提出；内容是什么；地位如何</p><p>答案：</p><p>面对港澳台地区<code>尚未统一</code>的问题，邓小平提出<code>“只有实行‘一个国家，两种制度’”</code></p><p>基本内容：</p><p>(1)坚持<code>一个中国</code>，这是“和平统一，一国两制”的<code>核心</code>；</p><p>(2)<code>两制并存</code>，在祖国统一的前提下，<code>国家</code>的<code>主体</code>部分实行<code>社会主义制度</code>，同时在<code>台湾、香港、澳门</code>保持<code>原有社会制度和生活动方式</code>长期不变；</p><p>(3)<code>高度自治</code>，祖国完成统一后，港澳台作为特别行政区，享有不同于中国其他省、市、自治区的高度自治权；</p><p>(4)尽最大努力<code>争取和平统一</code>，但<code>不承诺放弃使用武力</code>；</p><p>(5)解决台湾问题，实现祖国完全统一，<code>寄希望于台湾人民</code>。</p><p><code>地位</code>：“一国两制”构想是对<code>马克思主义国家学说的创造性发展</code>。</p><h3 id="4-简答题-简述社会主义初级阶段理论"><a href="#4-简答题-简述社会主义初级阶段理论" class="headerlink" title="4.(简答题)简述社会主义初级阶段理论"></a><strong>4.(简答题)简述社会主义初级阶段理论</strong></h3><p><code>作答思路</code>：何时提出；是什么；理论的含义；理论的意义</p><p>答案：</p><p>何时提出：党的<code>十三大系统论述</code>了社会主义初级阶段理论。</p><p>是什么：社会主义初级阶段理论是指我国在<code>生产力水平落后</code>、<code>商品经济不发达</code>的条件下建设社会主义必然经历的<code>特定阶段</code>。</p><p>理论的含义：</p><p>(1)我国<code>已经进入</code>社会主义，必须<code>坚持而不能离开</code>社会主义；</p><p>(2)我国社会主义社会<code>还处于</code>不发达的阶段，必须<code>正视而不能超越</code>初级阶段。</p><p>理论的意义：社会主义初级阶段，揭示了当代中国的历史方位，是建设中国特色社会主义的总依据。</p><hr><h2 id="六-“三个代表”重要思想"><a href="#六-“三个代表”重要思想" class="headerlink" title="(六)“三个代表”重要思想"></a>(六)“三个代表”重要思想</h2><h3 id="1-简答题-中国共产党必须始终代表中国先进生产力的发展要求"><a href="#1-简答题-中国共产党必须始终代表中国先进生产力的发展要求" class="headerlink" title="1.(简答题)中国共产党必须始终代表中国先进生产力的发展要求"></a><strong>1.(简答题)中国共产党必须始终代表中国先进生产力的发展要求</strong></h3><p><code>作答思路</code>：是核心观点之一；怎么做</p><p>答案：</p><p>始终代表中国先进生产力的发展要求是“三个代表”重要思想的<code>核心观点之一</code>。始终代表中国先进生产力的发展要求，大力促进先进生产力的发展，是<code>党保持先进性的根本体现和根本要求</code>。</p><p>(1).广大<code>工人、农民和知识分子</code>始终是推动我国先进生产力发展和社会全面进步的<code>根本力量</code>。</p><p>(2).<code>科学技术是第一生产力</code>，是先进生产力的<code>集中体现和主要标志</code>。<code>科技进步是</code>发展先进生产力的<code>决定因素</code>，<code>科学的本质是创新</code>。</p><h3 id="2-简答题-中国共产党必须始终代表中国最广大人民的根本利益"><a href="#2-简答题-中国共产党必须始终代表中国最广大人民的根本利益" class="headerlink" title="2.(简答题)中国共产党必须始终代表中国最广大人民的根本利益"></a><strong>2.(简答题)中国共产党必须始终代表中国最广大人民的根本利益</strong></h3><p><code>作答思路</code>：是核心观点之一；怎么做</p><p>答案：</p><p>始终代表中国最广大人民的根本利益是“三个代表”重要思想的核心观点之一。</p><p>(1).<code>发展好最广大人民的根本利益</code>是我们全部工作的<code>出发点和落脚点</code>。</p><p>(2).为<code>实现人民群众的根本利益而奋斗</code>是我们<code>全部任务和责任</code>。</p><p>(3).党<code>始终坚持人民利益高于一切</code>。党除了最广大人民的利益，<code>没有自己的特殊利益</code>。</p><p>(4).努力使工人、农民、知识分子和其他群众<code>共同享受到经济社会发展的成果</code>。</p><p>(5).人民群众是历史的创造者，是历史的主体。</p><hr><h2 id="七-科学发展观"><a href="#七-科学发展观" class="headerlink" title="(七)科学发展观"></a>(七)科学发展观</h2><h3 id="1-辨析题-以人为本是科学发展观的第一要义"><a href="#1-辨析题-以人为本是科学发展观的第一要义" class="headerlink" title="1.(辨析题)以人为本是科学发展观的第一要义"></a><strong>1.(辨析题)以人为本是科学发展观的第一要义</strong></h3><p><code>作答思路</code>：是什么；地位；怎么做</p><p>答案：</p><p>错误，<code>发展</code>是科学发展观的<code>第一要义</code>，以人为本是科学发展观的核心立场。</p><p>地位：</p><p>(1)发展<code>是人类文明进步的基础</code>，<code>是马克思主义最基本的范畴之一</code>。</p><p>(2)<code>坚持发展是硬道理的本质要求就是坚持科学发展</code>。</p><p>怎么做：</p><p>(1)<code>坚持</code>科学发展，必须<code>加快转变经济发展方式</code>。</p><p>(2)<code>坚持</code>科学发展，必须<code>善于抓住和把握机遇</code>。</p><h3 id="2-简答题-全面协调可持续是科学发展观的基本要求"><a href="#2-简答题-全面协调可持续是科学发展观的基本要求" class="headerlink" title="2.(简答题)全面协调可持续是科学发展观的基本要求"></a><strong>2.(简答题)全面协调可持续是科学发展观的基本要求</strong></h3><p><code>作答思路</code>：是什么；怎么做</p><p>答案：</p><p>是什么：</p><p>(1).<code>“全面”</code>是指发展要有<code>全面性、整体性</code>。</p><p>(2).<code>“协调”</code>是指发展要有<code>协调性、均衡性</code>。</p><p>(3).<code>“可持续”</code>是指发展要有<code>持久性、连续性</code>。</p><p>怎么做：</p><p>(1).坚持<code>全面发展</code>，要<code>正确认识和把握经济、政治、文化、社会、生态文明建设是相互联系、相互促进的</code>。</p><p>(2).坚持<code>协调发展</code>，就是<code>保证中国特色社会主义各个领域协调推进</code>。</p><p>(3).坚持<code>可持续发展</code>，必须<code>走生产发展、生活富裕、生态良好的文明发展</code>。</p><p>(4).坚持<code>可持续发展</code>，还必须<code>建设生态文明</code>。</p><h3 id="3-简答题-简述科学发展观“构建社会主义和谐社会”的基本内容"><a href="#3-简答题-简述科学发展观“构建社会主义和谐社会”的基本内容" class="headerlink" title="3.(简答题)简述科学发展观“构建社会主义和谐社会”的基本内容"></a><strong>3.(简答题)简述科学发展观“构建社会主义和谐社会”的基本内容</strong></h3><p>答案：</p><p>社会和谐是中国特色社会主义的本质属性，深化了对社会主义本质的认识。</p><p>(1).社会主义和谐社会是经济、政治、文化、社会、生态文明建设协调发展的社会，是人与人、人与社会、人与自然整体和谐的社会。</p><p>(2).民主法制、公平正义、诚信友爱、充满活力、安定有序、人与自然和谐相处，是构建社会主义和谐社会的总要求。</p><p>(3).构建社会主义和谐社会，既要从“大社会”着眼，又要从“小社会”着手，以解决人民群众最关心最直接最现实的利益问题为重点。</p><h3 id="4-简答题-简述科学发展观最鲜明的精神实质"><a href="#4-简答题-简述科学发展观最鲜明的精神实质" class="headerlink" title="4.(简答题)简述科学发展观最鲜明的精神实质"></a><strong>4.(简答题)简述科学发展观最鲜明的精神实质</strong></h3><p>答案：</p><p>科学发展观最鲜明的精神实质是解放思想、实事求是、与时俱进、求真务实。</p><p>(1).这个精神实质充分体现了马克思主义、毛泽东思想、邓小平理论、“三个代表”重要思想和科学发展观的历史逻辑和内在联系。</p><p>(2).科学发胀初步形成了马克思主义关于社会主义发展的系统理论，进一步丰富和深化了马克思主义对发展问题的认识。</p><hr><h2 id="Donate-☕️"><a href="#Donate-☕️" class="headerlink" title="Donate ☕️"></a>Donate ☕️</h2><p>如果你喜欢我的博文，可以通过下面的方式支持我，你的支持是我最大的动力 😘</p><p>转载时请注明出处 ©️PhoenixNest</p><table><thead><tr><th align="center">Donate 😇</th><th align="center">Qr code</th></tr></thead><tbody><tr><td align="center">Wechat</td><td align="center"><img src="/img/wechat.png" alt="Wechat"></td></tr><tr><td align="center">Ali Pay</td><td align="center"><img src="/img/alipay.png" alt="Ali Pay"></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Exam </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
