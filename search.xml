<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Welcome To PhoenixNest&#39;s Blog</title>
      <link href="/Welcome/"/>
      <url>/Welcome/</url>
      
        <content type="html"><![CDATA[<h2 id="Who-i-am"><a href="#Who-i-am" class="headerlink" title="Who i am"></a>Who i am</h2><p>欢迎来到我的博客, 我是<code>PhoenixNest • (Peter Chen)</code>。</p><ul><li>一个<code>吉林大学珠海学院</code>计算机学院软件工程专业的<code>应届本科毕业生</code>。</li><li>一个知晓C++、Java、MySQL、SQL Server等拼写的程序猿（发量犹在，Still a ROOKIE）。</li><li>一个做过服务器<code>运维</code>，知晓<code>Linux</code>，调配过<code>数据库</code>与服务器<code>底层</code>硬件的苦逼练习生。</li><li>一个知晓MVVM开发架构，使用过<code>Google JetPack</code>快速开发框架，正在<code>学习Kotlin</code>的Android程序猿。</li><li>一个做过<code>高德地图(Android)</code>开发，正在转入Web前端的新人。</li><li>一个热爱<code>星际争霸2</code>，喜欢暴雪游戏，梦想进入<code>暴雪公司(Blizzard)</code>的SCer。</li><li>一个喜欢游泳，曾做过蛙泳与自由泳教练的泳客。</li><li>一个接触计算机编程开发<code>2年</code>，喜欢学习新技术的<code>软硬件攻城狮</code>。</li><li>一个做过高达模型评测，开过电台的小Up主。</li><li>一个喜欢拍照，喜欢记录生活，不会讲粤语的<code>广东潮汕人</code>。</li></ul><hr><h2 id="The-Original"><a href="#The-Original" class="headerlink" title="The Original"></a>The Original</h2><p>在接触计算机编程的2年，踩了不少坑，从一开始最经典的因为大小写导致程序出现Bug，再到现如今能独立开发Android移动端应用，可以说很大方面来自于自己对技术的热爱与追求。</p><p>有人说编程是枯燥的，但其实也充满了乐趣，你能亲眼看着你的项目如同孩子般，经历不同的成长阶段，从一开始的<code>&quot;Hello World&quot;</code>，再到后来的能够完成诸多需求，成为程序界里的<code>&quot;搬砖工人&quot;</code>(🤣🤣🤣)。</p><p><code>有书，哪里都是图书馆。</code></p><hr><h2 id="Donate-☕️"><a href="#Donate-☕️" class="headerlink" title="Donate ☕️"></a>Donate ☕️</h2><p>如果你喜欢我的博文，可以通过下面的方式支持我，你的支持是我最大的动力 😘</p><p>转载时请注明出处 ©️PhoenixNest</p><table><thead><tr><th align="center">Donate 😇</th><th align="center">Qr code</th></tr></thead><tbody><tr><td align="center">Wechat</td><td align="center"><img src="/img/wechat.png" alt="Wechat"></td></tr><tr><td align="center">Ali Pay</td><td align="center"><img src="/img/alipay.png" alt="Ali Pay"></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> About </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Top </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Software Testing</title>
      <link href="/Notes-Software-Testing/"/>
      <url>/Notes-Software-Testing/</url>
      
        <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>本篇整理了一些我在近期复习软件测试期末考试时所遇到的一些模拟练习题。</p><p>所用教科书：《软件测试方法和技术（第三版）》 – 清华大学出版社</p><hr><h2 id="一-引论"><a href="#一-引论" class="headerlink" title="(一) 引论"></a>(一) 引论</h2><h3 id="1-为什么要开展软件测试活动"><a href="#1-为什么要开展软件测试活动" class="headerlink" title="1.为什么要开展软件测试活动"></a>1.为什么要开展软件测试活动</h3><p>(1) 软件测试是保证软件质量的重要手段，所有软件都会存在或多或少的问题，错误需要测试来发现，同时还需要测试来评估错误密度。</p><p>(2) 软件测试是软件质量保证的关键步骤，越早发现错误代价越低。</p><h3 id="2-什么是软件测试"><a href="#2-什么是软件测试" class="headerlink" title="2.什么是软件测试"></a>2.什么是软件测试</h3><p>软件测试是验证和有效性确认构成的整体。</p><h3 id="3-软件测试和开发的关系"><a href="#3-软件测试和开发的关系" class="headerlink" title="3.软件测试和开发的关系"></a>3.软件测试和开发的关系</h3><p>测试活动在开发之后，测试与开发同步进行，最后再进行总的测试，没有开发就没有测试，不同的软件开发模型中，测试所处位置不同。</p><h3 id="4-软件测试与质量保证的关系"><a href="#4-软件测试与质量保证的关系" class="headerlink" title="4.软件测试与质量保证的关系"></a>4.软件测试与质量保证的关系</h3><p>软件测试和软件质量是对立统一的，软件测试既是找bug的，又能保证软件质量。对软件进行充分的测试才能够有效的保证软件质量，对软件产品进行充分测试，找出其中的缺陷。</p><hr><h2 id="二-软件测试基本概念"><a href="#二-软件测试基本概念" class="headerlink" title="(二) 软件测试基本概念"></a>(二) 软件测试基本概念</h2><h3 id="1-软件质量的定义"><a href="#1-软件质量的定义" class="headerlink" title="1.软件质量的定义"></a>1.软件质量的定义</h3><p>(1) 软件产品满足规定的和隐含的与需求能力有关的全部特征与特性</p><p>(2) 软件各种属性的组合程度</p><p>(3) 用户对软件产品的综合反映程度</p><p>(4) 软件在使用过程中满足用户需求的程度</p><h3 id="2-软件缺陷的定义"><a href="#2-软件缺陷的定义" class="headerlink" title="2.软件缺陷的定义"></a>2.软件缺陷的定义</h3><p>(1)从<code>产品内部</code>看，软件缺陷是<code>软件产品开发和维护过程中所存在的错误、毛病等各种问题</code>。</p><p>(2)从<code>外部</code>看，软件缺陷是<code>系统所需要实现的某种功能的失效或违背</code></p><h4 id="2-1-什么是软件缺陷"><a href="#2-1-什么是软件缺陷" class="headerlink" title="2.1 什么是软件缺陷"></a>2.1 什么是软件缺陷</h4><p>(1) 软件未实现产品说明书要求的功能。</p><p>(2) 软件出现了产品说明书提到不应该的错误。</p><p>(3) 软件实现了产品说明书未提到的功能。</p><p>(4) 软件未实现产品说明书<code>未提到但应实现的目标</code>。</p><p>(5) 软件难以理解、不易使用、运行缓慢等问题。</p><h4 id="2-2-修复-软件缺陷的代价"><a href="#2-2-修复-软件缺陷的代价" class="headerlink" title="2.2 修复.软件缺陷的代价"></a>2.2 修复.软件缺陷的代价</h4><p>软件缺陷随着时间的推移所带来的成本越来越大。</p><h3 id="3-软件测试的分类"><a href="#3-软件测试的分类" class="headerlink" title="3.软件测试的分类"></a>3.软件测试的分类</h3><p>单元测试 -&gt; 集成测试 -&gt; (功能测试) -&gt; 系统测试 -&gt; 验收测试</p><p>按<code>测试层次</code>：</p><p>(1) 底层测试：单元测试。</p><p>(2) 接口层次：集成测试，完成系统内单元之间接口和单元集成为一个完整系统的测试。</p><p>(3) 系统测试：负载测试、压力测试、强壮性测试。</p><p>(4) 用户层次：验收测试，验收用户是否真正所需要的产品特性，验收测试关注用户环境、用户数据，用户也需要参与测试。</p><hr><p>按<code>测试对象</code>：</p><p>(1) 单元测试</p><p>(2) 程序测试</p><p>(3) 系统测试</p><p>(4) 文档测试</p><p>(5) Web应用测试、客户端测试</p><p>(6) 数据库测试、服务器测试</p><hr><p>按<code>测试目的</code>：</p><p>(1) 功能测试：黑盒和白盒测试</p><p>(2) 性能测试</p><p>(3) 压力测试</p><p>(4) 可靠性测试</p><p>(5) 安全性测试</p><p>(6) 兼容性测试</p><p>(7) 回归测试</p><hr><p>按<code>测试阶段</code>：</p><p>(1) 需求评审、设计评审</p><p>(2) 单元测试</p><p>(3) 集成测试</p><p>(4) 系统测试</p><p>(5) 验收测试：α测、β测</p><hr><p>根据系统内部结构和具体实现算法角度分为黑盒测试和白盒测试两类；</p><p>根据测试对象在测试过程中是否发生状态变化分为动态测试和静态测试方法；</p><h3 id="4-测试计划"><a href="#4-测试计划" class="headerlink" title="4.测试计划"></a>4.测试计划</h3><p>(1) 规定<code>测试活动的范围、方法、资源和进度</code>；</p><p>(2) 明确正在测试的<code>项目</code>、要测试的<code>特性</code>、要执行的<code>测试任务</code>、每个任务的<code>负责人</code>以及与计划相关的<code>风险</code>。</p><h3 id="5-测试用例"><a href="#5-测试用例" class="headerlink" title="5.测试用例"></a>5.测试用例</h3><p>有效性、组织性、可复用性、跟踪、测试证实</p><p>(1) 测试用例是为了特定目的而设计的测试数据及其相关的测试规程的一个特定集合，或是有效发现软件缺陷的<code>最小测试执行单元</code>。</p><p>(2) 测试用例是测试工作的指导，是软件测试的必须遵守的准则，更是软件测试质量稳定的根本保障。</p><p>(3) 测试用例是测试执行的基础。</p><hr><h2 id="三-软件测试方法"><a href="#三-软件测试方法" class="headerlink" title="(三) 软件测试方法"></a>(三) 软件测试方法</h2><h3 id="1-基于直觉和经验的方法"><a href="#1-基于直觉和经验的方法" class="headerlink" title="1.基于直觉和经验的方法"></a>1.基于直觉和经验的方法</h3><p>错误推测法：</p><p>基于经验和直觉推测程序中所有可能存在的各种错误，从而有针对性地设计测试用例。</p><hr><h3 id="2-基于输入域的方法-黑盒"><a href="#2-基于输入域的方法-黑盒" class="headerlink" title="2.基于输入域的方法(黑盒)"></a>2.基于输入域的方法(黑盒)</h3><h4 id="2-1-等价类划分法"><a href="#2-1-等价类划分法" class="headerlink" title="2.1 等价类划分法"></a>2.1 等价类划分法</h4><p>等价类的分类：<code>有效</code>等价类、<code>无效</code>等价类。</p><p>有效等价类：是有意义的、合理的输入数据，可以检查程序是否实现了规格说明书中所规定的功能和性能。</p><p>无效等价类：不妈祖程序输入要求或无效的输入数据构成的集合。</p><p><code>PS</code>：在规定了输入数据必须遵守的规则的情况下，可确定一个有效等价类和若干个无效等价类。</p><h4 id="2-2-边界值分析法"><a href="#2-2-边界值分析法" class="headerlink" title="2.2 边界值分析法"></a>2.2 边界值分析法</h4><p>边界值分析是一种<code>补充等价类划分</code>的测试用例设计技术。</p><p>设计方法：</p><p>(1) 确定边界情况<code>(选择等价类边界)</code>。</p><p>(2) 选取<code>正好等于、刚刚大于或刚刚小于</code>边界值作为测试数据。</p><hr><h3 id="3-基于逻辑覆盖的方法-白盒"><a href="#3-基于逻辑覆盖的方法-白盒" class="headerlink" title="3.基于逻辑覆盖的方法(白盒)"></a>3.基于逻辑覆盖的方法(白盒)</h3><h4 id="3-3-1-判定覆盖"><a href="#3-3-1-判定覆盖" class="headerlink" title="3.3.1 判定覆盖"></a>3.3.1 判定覆盖</h4><p>使得程序中每个判定至少为True或False各一次。</p><h4 id="3-3-2-条件覆盖"><a href="#3-3-2-条件覆盖" class="headerlink" title="3.3.2 条件覆盖"></a>3.3.2 条件覆盖</h4><p>使得判定中的每个条件获得各种可能的结果。</p><h4 id="3-3-3-判定-条件覆盖"><a href="#3-3-3-判定-条件覆盖" class="headerlink" title="3.3.3 判定-条件覆盖"></a>3.3.3 判定-条件覆盖</h4><p>同时满足判定覆盖和条件覆盖。即使得程序中每个判定至少为True或False各一次，同时使得判定中的每个条件获得各种可能的结果。</p><h4 id="3-3-4-基本路径覆盖"><a href="#3-3-4-基本路径覆盖" class="headerlink" title="3.3.4 基本路径覆盖"></a>3.3.4 基本路径覆盖</h4><p>设计所有的测试用例，覆盖程序中所有可能的、独立的执行路径。</p><hr><p>V(G) = 区域数目</p><p>V(G) = 边界数目 - 节点数目 + 2</p><p>V(G) = 判断节点数 + 1</p><hr><h2 id="四-软件测试流程与规范"><a href="#四-软件测试流程与规范" class="headerlink" title="(四) 软件测试流程与规范"></a>(四) 软件测试流程与规范</h2><h3 id="W模型"><a href="#W模型" class="headerlink" title="W模型"></a>W模型</h3><p>测试过程和开发过程贯穿了软件过程的整个生命周期，它们是相辅相成的关系，有以下的关键点：</p><p>(1) 测试过程和开发过程是同时开始，同时结束两者保持同步关系。</p><p>(2) 测试过程是对开发过程中的阶段性结果和产品进行验证的过程，两者相互依赖。</p><p>前期：测试过程依赖于开发过程。</p><p>后期：开发过程更多地依赖于测试过程。</p><p>(3) 测试过程和开发过程的工作重点可能不一样，两者有各自的特点，不论在资源和风险管理中，两者都存在差异。</p><hr><h3 id="敏捷测试"><a href="#敏捷测试" class="headerlink" title="敏捷测试"></a>敏捷测试</h3><p>目标：尽快的交付高质量的软件。</p><p>核心(质量内建的三个关键实践)：测试左移、持续测试、测试驱动开发。</p><p>敏捷测试是一套解决方案、一类测试操作与管理的框架、一组实践或由一定顺序的测试活动构成的特定的测试流程。是不断修正质量指标、正确建立测试策略，确认客户的有效需求能得以圆满实现和确保整个生产的过程安全的、及时的发布最终产品。</p><hr><h3 id="TMM的五个等级"><a href="#TMM的五个等级" class="headerlink" title="TMM的五个等级"></a>TMM的五个等级</h3><h4 id="1-初始级"><a href="#1-初始级" class="headerlink" title="1.初始级"></a>1.初始级</h4><p>(1) 没有正式的文档化和结构化。</p><p>(2) 测试在编码后执行，与调试没有区别。</p><p>(3) 测试的目的被理解为证明软件正常工作。</p><h4 id="2-定义级"><a href="#2-定义级" class="headerlink" title="2.定义级"></a>2.定义级</h4><p>(1) 组织已设定测试方针和目标。</p><p>(2) 引入了测试计划过程。</p><p>(3) 具有基本的测试技术和方法。</p><h4 id="3-集成"><a href="#3-集成" class="headerlink" title="3.集成"></a>3.集成</h4><p>(1) 测试过程和软件开发周期集成在一起。</p><p>(2) 标准、步骤和方法的文档化。</p><p>(3) 相应的监督和控制措施。</p><h4 id="4-管理-amp-度量"><a href="#4-管理-amp-度量" class="headerlink" title="4.管理&amp;度量"></a>4.管理&amp;度量</h4><p>(1) 测试过程可有效地度量、管理。</p><h4 id="5-优化"><a href="#5-优化" class="headerlink" title="5.优化"></a>5.优化</h4><p>(1) 测试过程的数据可以用户防止错误。</p><p>(2) 注意力集中在优化已建立的过程的发生。</p><hr><h2 id="五-单元测试与集成测试"><a href="#五-单元测试与集成测试" class="headerlink" title="(五) 单元测试与集成测试"></a>(五) 单元测试与集成测试</h2><h3 id="1-单元测试的原则"><a href="#1-单元测试的原则" class="headerlink" title="1.单元测试的原则"></a>1.单元测试的原则</h3><p>自动化、独立性、可重复</p><h3 id="2-单元测试的任务"><a href="#2-单元测试的任务" class="headerlink" title="2.单元测试的任务"></a>2.单元测试的任务</h3><p>(1) 单元独立执行路径的测试：检查每一条独立执行路径的测试，保证每条语句至少被执行一次(基本路径测试)</p><p>(2) 单元局部数据结构的测试：检查局部数据结构完整性。</p><p>(3) 单元接口测试：检查模块接口是否正确。</p><p>(4) 单元边界条件的测试：检查临界数据处理的正确性。</p><p>(5) 单元容错性测试：预见、预设的各种出错处理是否正确有效。</p><p>(6) 内存分析</p><h3 id="3-单元测试常用工具"><a href="#3-单元测试常用工具" class="headerlink" title="3.单元测试常用工具"></a>3.单元测试常用工具</h3><p>单元测试工具：(xUnit工具家族)Junit、CppUnit、NUnit、HtmlUnit</p><p>静态检查工具：CheckStyle、PMD、FindBug</p><p>单元性能测试工具：SourceMonitor</p><hr><h3 id="4-静态测试"><a href="#4-静态测试" class="headerlink" title="4.静态测试"></a>4.静态测试</h3><p>包括：<code>需求评审、互查、走查、设计评审</code></p><p>定义：在<code>不执行软件</code>的条件下有条理地仔细审查<code>软件设计、体系结构和代码</code>，从而找出<code>软件缺陷</code>的过程。有时也称为结构分析。</p><p>作用：</p><p>(1) 尽早发现软件缺陷，以找出动态黑盒白盒测试难以揭示或发现的软件缺陷。</p><p>(2) 为接受该软件的黑盒测试员进行测试设计测试案例提供思路，他们不必了解代码细节，但是根据审查备注，可以确定有问题或者容易存在软件缺陷的特性范围。</p><p>问题：认为会减慢软件开发过程。</p><hr><h3 id="5-动态测试"><a href="#5-动态测试" class="headerlink" title="5.动态测试"></a>5.动态测试</h3><h4 id="5-1-驱动程序"><a href="#5-1-驱动程序" class="headerlink" title="5.1 驱动程序"></a>5.1 驱动程序</h4><p>驱动程序/驱动模块(Driver)：用以模拟被测模块的上级模块。</p><p>作用：接受测试数据，把相关的数据传送给被测模块，启动被测模块，并打印出相应的结果。</p><h4 id="5-2-桩程序"><a href="#5-2-桩程序" class="headerlink" title="5.2 桩程序"></a>5.2 桩程序</h4><p>桩程序/桩模块(Stub)：用以模拟被测模块工作过程中所调用的模块。</p><p>作用：由被测模块调用，一般只进行很少的数据处理。例如打印入口和返回，以便于检验被测模块与其下级模块的接口。</p><hr><h3 id="6-自顶向下和自底向上的集成方法"><a href="#6-自顶向下和自底向上的集成方法" class="headerlink" title="6.自顶向下和自底向上的集成方法"></a>6.自顶向下和自底向上的集成方法</h3><p>自顶向下法：类似树的层次遍历，依次结合各个模块。</p><p>自底向上法：从“原子”模块开始集成以进行测试。</p><hr><h2 id="六-系统测试"><a href="#六-系统测试" class="headerlink" title="(六)系统测试"></a>(六)系统测试</h2><h3 id="1-性能测试"><a href="#1-性能测试" class="headerlink" title="1.性能测试"></a>1.性能测试</h3><p>性能测试就是为了发现系统性能问题或获取系统性能相关指标(如运行速度、响应时间、资源使用率等)</p><h3 id="1-1-性能测试指标"><a href="#1-1-性能测试指标" class="headerlink" title="1.1 性能测试指标"></a>1.1 性能测试指标</h3><h4 id="系统资源"><a href="#系统资源" class="headerlink" title="系统资源"></a>系统资源</h4><p>CPU、内存占用率等。</p><h4 id="系统行为"><a href="#系统行为" class="headerlink" title="系统行为"></a>系统行为</h4><p>(1) 请求响应时间</p><p>客户端向服务器提交一个请求到收到响应之间的间隔时间。</p><p>(2) 事务响应时间</p><p>事务由一系列请求组成，事务的响应时间就是这些请求完成处理所花费的时间。</p><p>(3) 数据吞吐量</p><p>单位时间内客户端和服务器之间网络上传输的数据量。</p><h3 id="1-2-系统负载及其模式"><a href="#1-2-系统负载及其模式" class="headerlink" title="1.2 系统负载及其模式"></a>1.2 系统负载及其模式</h3><h4 id="要素"><a href="#要素" class="headerlink" title="要素"></a>要素</h4><p>并发用户并发数量 + 思考时间 + 每次请求发送的数据量 + 负载模式</p><p>(1) 在线用户：通过浏览器访问登录Web应用系统后没有退出该应用系统的用户。</p><p>(2) 并发用户：严格意义上，这些用户选择在同一时间做同一事情或同一操作；不严格地说，并发用户同时在线并操作系统，但可以是不相同操作。</p><p>(3) 用户并发数量：上述并发用户的数量，近似于同时在线的用户数量，但不等于在线用户数。</p><p>(4) 思考时间：浏览器在收到响应后到提交下一个请求之间的间隔时间。</p><p>负载模式：一次加载、递增加载、高低突变加载、随即加载等方式。</p><h3 id="2-软件兼容性测试"><a href="#2-软件兼容性测试" class="headerlink" title="2.软件兼容性测试"></a>2.软件兼容性测试</h3><p>是指验证软件之间是否正确地交互和共享信息。</p><p>要考虑的问题：</p><p>何种平台、何种应用软件、何种标准或规范、何种数据。</p><h3 id="3-向前和向后兼容"><a href="#3-向前和向后兼容" class="headerlink" title="3.向前和向后兼容"></a>3.向前和向后兼容</h3><p>向后兼容指的是可以使用软件的以前版本。</p><p>向前兼容指的是可以使用软件的未来版本。</p><hr><h2 id="七-验收测试"><a href="#七-验收测试" class="headerlink" title="(七)验收测试"></a>(七)验收测试</h2><h3 id="1-进行验收测试的条件，通过标准"><a href="#1-进行验收测试的条件，通过标准" class="headerlink" title="1.进行验收测试的条件，通过标准"></a>1.进行验收测试的条件，通过标准</h3><p>验收测试是在软件产品完成了功能测试和系统测试之后、产品发布之前所进行的软件测试活动。</p><p>标准：</p><p>(1) 完全执行了验收测试计划中的每个测试用例。</p><p>(2) 在验收测试中发现的错误已经得到修改并通过了测试或经过评估留到下一版本中修改。</p><p>(3) 完成验收测试报告。</p><h3 id="2-如何进行产品说明书的验证"><a href="#2-如何进行产品说明书的验证" class="headerlink" title="2.如何进行产品说明书的验证"></a>2.如何进行产品说明书的验证</h3><p>测试人员根据产品说明书，逐字逐句地验证产品每一项特征，并在验证结束时提交基于产品规格说明书地验证报告。</p><h3 id="3-用户界面测试有哪些要素"><a href="#3-用户界面测试有哪些要素" class="headerlink" title="3.用户界面测试有哪些要素"></a>3.用户界面测试有哪些要素</h3><p>(1) 符合标准和规范</p><p>(2) 直观性</p><p>(3) 一致性</p><p>(4) 灵活性</p><p>(5) 舒适性</p><p>(6) 正确性</p><p>(7) 实用性</p><hr><h2 id="八-软件本地化测试"><a href="#八-软件本地化测试" class="headerlink" title="(八)软件本地化测试"></a>(八)软件本地化测试</h2><h3 id="1-定义"><a href="#1-定义" class="headerlink" title="1.定义"></a>1.定义</h3><h4 id="1-1-G11N-I18N-L10N"><a href="#1-1-G11N-I18N-L10N" class="headerlink" title="1.1 G11N = I18N + L10N"></a>1.1 G11N = I18N + L10N</h4><p>软件全球化 = 软件国际化 + 软件本地化</p><h4 id="1-2-软件国际化-Internationlization-I18N"><a href="#1-2-软件国际化-Internationlization-I18N" class="headerlink" title="1.2 软件国际化(Internationlization, I18N)"></a>1.2 软件国际化(Internationlization, I18N)</h4><p>是在软件设计和文档开发过程中，使得功能和代码设计能处理多种语言和文化传统。创建不要语言版本时，不需要重新设计源程序代码的软件工程方法。</p><h4 id="1-3-软件本地化-Localization-L10N"><a href="#1-3-软件本地化-Localization-L10N" class="headerlink" title="1.3 软件本地化(Localization, L10N)"></a>1.3 软件本地化(Localization, L10N)</h4><p>是将一个软件产品按特定国家/地区或语言市场的需要进行<code>全面定制</code>的过程。</p><h3 id="2-I18N与L10N的关系"><a href="#2-I18N与L10N的关系" class="headerlink" title="2. I18N与L10N的关系"></a>2. I18N与L10N的关系</h3><p>(1) 国际化是本地化的基础和前提，为本地化做准备，使本地化过程不需要对代码进行改动就能完成。</p><p>(2) 本地化是国际化向特定本地语言环境的转换，本地化要适应国际化的规定。</p><p>(3) 国际化软件，或在应用软件运行时可以动态切换语言，或在软件启动前或启动时可以设置语言。</p><hr><h2 id="九-测试自动化"><a href="#九-测试自动化" class="headerlink" title="(九)测试自动化"></a>(九)测试自动化</h2><h3 id="1-手工测试和自动化测试的区别"><a href="#1-手工测试和自动化测试的区别" class="headerlink" title="1.手工测试和自动化测试的区别"></a>1.手工测试和自动化测试的区别</h3><p>(1) 自动运行的速度更快、执行效率高，是手工无法相比的。</p><p>(2) 手工测试会感觉累，但机器不会感觉累，可以不间断工作。</p><p>(3) 测试结果准确。</p><p>(4) 可靠。人可以撒谎，但机器不会。</p><p>(5) 可复用性。一旦完成所用脚本，可多次执行。</p><p>(6) 特别能力。当需要模拟大量并发的时候，人工测试显然是不现实的，但机器则可以模拟大量的并发量。</p><h3 id="2-测试自动化实现中，关键的技术是什么？"><a href="#2-测试自动化实现中，关键的技术是什么？" class="headerlink" title="2.测试自动化实现中，关键的技术是什么？"></a>2.测试自动化实现中，关键的技术是什么？</h3><p>识别用户界面的元素以及捕获键盘、鼠标的输入，将操作过程转换为测试工具可执行的脚本；然后，对脚本进行修改和优化，加入测试的验证点；最后通过测试工具运行测试脚本，将实际输出与期望结果进行比对，确定是否存在差异。</p><hr><h2 id="十-部署测试环境"><a href="#十-部署测试环境" class="headerlink" title="(十) 部署测试环境"></a>(十) 部署测试环境</h2><h3 id="1-测试环境的定义"><a href="#1-测试环境的定义" class="headerlink" title="1.测试环境的定义"></a>1.测试环境的定义</h3><h4 id="1-1-设计环境"><a href="#1-1-设计环境" class="headerlink" title="1.1 设计环境"></a>1.1 设计环境</h4><p>设计环境指编制测试计划、说明、报告及与测试有关的文件所基于的软、硬件设备和支持。</p><h4 id="1-2-实施环境"><a href="#1-2-实施环境" class="headerlink" title="1.2 实施环境"></a>1.2 实施环境</h4><p>实施环境指对软件系统进行各项测试所基于的软、硬件设备和支持。</p><h4 id="1-3-管理环境"><a href="#1-3-管理环境" class="headerlink" title="1.3 管理环境"></a>1.3 管理环境</h4><p>管理环境指管理测试资源所基于的软、硬件设备和支持。</p><h3 id="2-要素"><a href="#2-要素" class="headerlink" title="2.要素"></a>2.要素</h3><h4 id="1-软件"><a href="#1-软件" class="headerlink" title="(1) 软件"></a>(1) 软件</h4><p>操作系统、网络协议和应用程序。</p><h4 id="2-硬件"><a href="#2-硬件" class="headerlink" title="(2) 硬件"></a>(2) 硬件</h4><p>网络设备、服务器、测试用机。</p><h4 id="3-网络环境"><a href="#3-网络环境" class="headerlink" title="(3) 网络环境"></a>(3) 网络环境</h4><p>相关网络设备、网络系统软件及配置。</p><h4 id="4-数据准备"><a href="#4-数据准备" class="headerlink" title="(4) 数据准备"></a>(4) 数据准备</h4><p>测试数据、要尽可能的取得大量真实数据。</p><h4 id="5-测试工具"><a href="#5-测试工具" class="headerlink" title="(5) 测试工具"></a>(5) 测试工具</h4><p>自动化及测试管理软件，监控诊断的使用工具等。</p><hr><h2 id="十一-测试执行、缺陷报告与跟踪"><a href="#十一-测试执行、缺陷报告与跟踪" class="headerlink" title="(十一)测试执行、缺陷报告与跟踪"></a>(十一)测试执行、缺陷报告与跟踪</h2><h3 id="1-软件缺陷的生命周期"><a href="#1-软件缺陷的生命周期" class="headerlink" title="1.软件缺陷的生命周期"></a>1.软件缺陷的生命周期</h3><p>发现 -&gt; 打开 -&gt; 修复 -&gt; 关闭</p><p>“新打开的”：发现 -&gt; 打开</p><p>“已修正的”：打开 -&gt; 修复</p><p>“已关闭的”：修复 -&gt; 关闭</p><p>生命周期的概念是一个物种从诞生到消亡经历了不同的生命阶段，软件缺陷生命周期指的是一个软件缺陷被发现、报告到这个缺陷被修复、验证直到最后关闭的完整过程。</p><h3 id="2-软件缺陷的等级"><a href="#2-软件缺陷的等级" class="headerlink" title="2.软件缺陷的等级"></a>2.软件缺陷的等级</h3><h4 id="2-1-严重性"><a href="#2-1-严重性" class="headerlink" title="2.1 严重性"></a>2.1 严重性</h4><p>分类：</p><p>(1) 致命：系统崩溃、数据丢失、数据毁坏、安全性被破坏。</p><p>(2) 严重：功能或特性没有实现，主要功能部分丧失，次要功能部分丧失或致命错误声明。</p><p>(3) 一般：系统的部分功能没有完全实现，但不影响用户的正常使用。例如：提示信息不太准确；用户界面差；操作时间长等一些问题。</p><p>(4) 较小：小问题，对功能几乎没有影响。</p><h4 id="2-2-优先级"><a href="#2-2-优先级" class="headerlink" title="2.2 优先级"></a>2.2 优先级</h4><p>分类：</p><p>(1) 立即修复(P1)：缺陷导致系统几乎不能使用或测试不能继续，需立即修复。</p><p>(2) 高优先级(P2)：缺陷严重，影响测试，需优先考虑。</p><p>(3) 正常排队(P3)：缺陷正常排队等待修复。</p><p>(4) 低优先级(P4)：即使有此缺陷产品也能发布，可在开发人员有时间的时候纠正。</p><h3 id="3-如何有效描述软件缺陷"><a href="#3-如何有效描述软件缺陷" class="headerlink" title="3.如何有效描述软件缺陷"></a>3.如何有效描述软件缺陷</h3><p>基本原则：</p><p>(1) 单一准确：尽量一个报告只针对一个软件缺陷。</p><p>(2) 可再现：提供精确步骤，可再现并修复缺陷。</p><p>(3) 完整统一：完整前后统一的软件缺陷。</p><p>(4) 短小简练：只给出事实和演示软件缺陷必须的细节。</p><p>(5) 特点条件；通常情况下软件没有问题，而是在特点条件下出现，所以缺陷描述时不要忽视这些特定条件</p><p>(6) 对缺陷跟踪到底：从发现Bug开始，要保证它被正确的报告直至修复的全过程。</p><p>(7) 不要评价缺陷。</p><h3 id="4-缺陷报告"><a href="#4-缺陷报告" class="headerlink" title="4.缺陷报告"></a>4.缺陷报告</h3><p>组成：</p><p>一份优秀的缺陷报告记录不仅包括了期望结果、实际结果和必要的附件，还提供必要的数据、测试环境或条件，以及简单的分析。</p><!-- 缺陷分布报告、缺陷趋势报告、缺陷年龄报告、缺陷结果进度报告 --><hr><h2 id="Donate-☕️"><a href="#Donate-☕️" class="headerlink" title="Donate ☕️"></a>Donate ☕️</h2><p>如果你喜欢我的博文，可以通过下面的方式支持我，你的支持是我最大的动力 😘</p><p>转载时请注明出处 ©️PhoenixNest</p><table><thead><tr><th align="center">Donate 😇</th><th align="center">Qr code</th></tr></thead><tbody><tr><td align="center">Wechat</td><td align="center"><img src="/img/wechat.png" alt="Wechat"></td></tr><tr><td align="center">Ali Pay</td><td align="center"><img src="/img/alipay.png" alt="Ali Pay"></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Exam </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDS • Snort</title>
      <link href="/IDS-Snort/"/>
      <url>/IDS-Snort/</url>
      
        <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>本篇将介绍我在工作期间，对办公室的一台<code>测试用服务器</code>部署<code>IDS(intrusion detection system)入侵检测系统</code>时的一些笔记分享。</p><hr><p>参考资料:</p><ul><li><p><a href="https://www.snort.org/" target="_blank" rel="noopener">Snort Official</a></p></li><li><p><a href="https://linuxhint.com/snort-ubuntu-tutorial/" target="_blank" rel="noopener">LinuxHint • Snort Ubuntu Tutorial</a></p></li><li><p><a href="https://www.wireshark.org/" target="_blank" rel="noopener">WireShark</a></p></li></ul><hr><h2 id="About"><a href="#About" class="headerlink" title="About"></a>About</h2><p>本篇将介绍在诸多<code>开源</code>的IDS中，一个广为人知的开源系统<code>Snort</code>。</p><p>在1998年，Martin Roesch用C语言开发了开放源代码(Open Source)的入侵检测系统Snort。直至今天，Snort已发展成为一个具有多平台(Multi-Platform)、<code>实时(Real-Time)流量分析</code>、<code>网络IP数据包(Pocket)记录</code>等特性的强大的网络入侵检测/防御系统(Network Intrusion Detection/Prevention System)，即<code>NIDS/NIPS</code>。Snort符合通用公共许可(GPL——GNU General Pubic License)，在网上可以通过免费下载获得Snort，并且只需要几分钟就可以安装并开始使用。</p><hr><h2 id="一-部署Snort"><a href="#一-部署Snort" class="headerlink" title="(一) 部署Snort"></a>(一) 部署Snort</h2><pre><code class="bash">sudo apt-get install libpcap-dev bison flexsudo apt-get install snort</code></pre><h2 id="二-嗅探"><a href="#二-嗅探" class="headerlink" title="(二) 嗅探"></a>(二) 嗅探</h2><h3 id="1-基础用法"><a href="#1-基础用法" class="headerlink" title="1. 基础用法"></a>1. 基础用法</h3><pre><code class="bash">sudo snort -v</code></pre><h3 id="2-展示数据内容"><a href="#2-展示数据内容" class="headerlink" title="2. 展示数据内容"></a>2. 展示数据内容</h3><pre><code class="bash">sudo snort -vd</code></pre><h2 id="三-网络IP数据包记录"><a href="#三-网络IP数据包记录" class="headerlink" title="(三) 网络IP数据包记录"></a>(三) 网络IP数据包记录</h2><pre><code class="bash">sudo mkdir snortLogssudo snort -d -l snortLogs</code></pre><p>以上命令将会在snortLogs文件夹(用户可自行选择日志文件保存位置)下创建一个<code>.log.xxxxxx</code>结尾的日志文件，要查看该文件，可<code>直接</code>通过[WireShark]<a href="https://www.wireshark.org/download.html)`打开`，或使用以下命令：" target="_blank" rel="noopener">https://www.wireshark.org/download.html)`打开`，或使用以下命令：</a></p><pre><code class="bash">snort -d -v -r your-log-file-name.log.xxxxxx</code></pre><h2 id="四-NIDS"><a href="#四-NIDS" class="headerlink" title="(四) NIDS"></a>(四) NIDS</h2><p>未完待续…</p><hr><h2 id="Donate-☕️"><a href="#Donate-☕️" class="headerlink" title="Donate ☕️"></a>Donate ☕️</h2><p>如果你喜欢我的博文，可以通过下面的方式支持我，你的支持是我最大的动力 😘</p><p>转载时请注明出处 ©️PhoenixNest</p><table><thead><tr><th align="center">Donate 😇</th><th align="center">Qr code</th></tr></thead><tbody><tr><td align="center">Wechat</td><td align="center"><img src="/img/wechat.png" alt="Wechat"></td></tr><tr><td align="center">Ali Pay</td><td align="center"><img src="/img/alipay.png" alt="Ali Pay"></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> IDS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Snort </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu Server • OpenStack</title>
      <link href="/Ubuntu-Server-OpenStack/"/>
      <url>/Ubuntu-Server-OpenStack/</url>
      
        <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>本篇将介绍最近在 <code>Ubuntu Sever 20.04LTS</code> 上折腾 <code>OpenStack</code>时的一些笔记分享。</p><p>在对OpenStack进行部署前，你需要执行👇：</p><pre><code class="bash"># refresh software listsudo apt-get update# [Optional] Upgrade your local softwaresudo apt-get upgrade# install MicroStacksudo snap install microstack --classic --beta# Once installed, you should see the following message on the terminal:microstack (beta) stein from Canonical✓ installed</code></pre><hr><p>参考资料：</p><p><a href="https://ubuntu.com/openstack/install" target="_blank" rel="noopener">Canonical • Install OpenStack yourself</a></p><p><a href="https://ask.openstack.org/en/question/125321/microstack-init-stops-at-waiting-for-rabbitmq/" target="_blank" rel="noopener">OpenStack • Microstack init stops at Waiting for RabbitMQ</a></p><p><a href="https://docs.openstack.org/newton/install-guide-ubuntu/" target="_blank" rel="noopener">OpenStack • Installation Tutorial for Ubuntu</a></p><p><a href="https://docs.openstack.org/image-guide/ubuntu-image.html" target="_blank" rel="noopener">OpenStack • Example: Ubuntu image</a></p><p><a href="https://docs.openstack.org/horizon/queens/install/install-ubuntu.html" target="_blank" rel="noopener">OpenStack • Install and configure for Ubuntu</a></p><hr><h2 id="About"><a href="#About" class="headerlink" title="About"></a>About</h2><p>OpenStack是一个开源的云计算管理平台项目，是一系列软件开源项目的组合。由NASA(美国国家航空航天局)和Rackspace合作研发并发起，以Apache许可证（Apache软件基金会发布的一个自由软件许可证）授权的开源代码项目。</p><p>OpenStack为私有云和公有云提供可扩展的弹性的云计算服务。项目目标是提供实施简单、可大规模扩展、丰富、标准统一的云计算管理平台。</p><hr><!-- ## （一）初始化 MicroStack```bashsudo microstack.init --auto...2019-12-16 12:38:33,223 - microstack_init - INFO - Complete.Marked microstack as initialized!``` --><h2 id="Donate-☕️"><a href="#Donate-☕️" class="headerlink" title="Donate ☕️"></a>Donate ☕️</h2><p>如果你喜欢我的博文，可以通过下面的方式支持我，你的支持是我最大的动力 😘</p><p>转载时请注明出处 ©️PhoenixNest</p><table><thead><tr><th align="center">Donate 😇</th><th align="center">Qr code</th></tr></thead><tbody><tr><td align="center">Wechat</td><td align="center"><img src="/img/wechat.png" alt="Wechat"></td></tr><tr><td align="center">Ali Pay</td><td align="center"><img src="/img/alipay.png" alt="Ali Pay"></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu Server </tag>
            
            <tag> OpenStack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu Server • MySQL</title>
      <link href="/Ubuntu-Server-MySQL/"/>
      <url>/Ubuntu-Server-MySQL/</url>
      
        <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>本篇将介绍最近在 <code>Ubuntu Server 20.04LTS</code> 上折腾 <code>MySQL</code>时的一些笔记分享。</p><p>在对MySQL进行部署与配置前，你需要执行👇：</p><pre><code class="bash"># refresh software listsudo apt-get update# [Optional] Upgrade your local softwaresudo apt-get upgrade# install MySQLsudo apt-get install mysql-server</code></pre><hr><p>参考资料：</p><ul><li><p><a href="https://www.digitalocean.com/community/tutorials/how-to-move-a-mysql-data-directory-to-a-new-location-on-ubuntu-16-04" target="_blank" rel="noopener">Digital Ocean - How To Move a MySQL Data Directory to a New Location on Ubuntu</a></p></li><li><p><a href="https://zhuanlan.zhihu.com/p/89427540?utm_source=wechat_session" target="_blank" rel="noopener">知乎 • MySQL骨灰级性能优化</a></p></li><li><p><a href="https://dev.mysql.com/doc/refman/8.0/en/mysqlslap.html" target="_blank" rel="noopener">mysqlslap — A Load Emulation Client</a></p></li></ul><hr><h2 id="About"><a href="#About" class="headerlink" title="About"></a>About</h2><p>MySQL是一个关系型数据库管理系统，由瑞典MySQL AB 公司开发，属于 Oracle 旗下产品。MySQL 是最流行的关系型数据库管理系统之一，在 WEB 应用方面，MySQL是最好的 RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件之一。</p><p>MySQL是一种关系型数据库管理系统，关系数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。</p><p>MySQL所使用的 SQL 语言是用于访问数据库的最常用标准化语言。MySQL 软件采用了双授权政策，分为社区版和商业版，由于其体积小、速度快、总体拥有成本低，尤其是开放源码这一特点，一般中小型网站的开发都选择 MySQL 作为网站数据库。</p><hr><h2 id="（一）修改MySQL数据源Data文件夹位置"><a href="#（一）修改MySQL数据源Data文件夹位置" class="headerlink" title="（一）修改MySQL数据源Data文件夹位置"></a>（一）修改MySQL数据源Data文件夹位置</h2><p><code>Tips:</code> 原有MySQL的Data路径为/var/lib/mysql/，当我们进行长期存储时，硬盘空间将会持续吃紧，故本章介绍如何迁移MySQL中的Data路径以将MySQL的数据保存更换到新硬盘。</p><h3 id="Step1-关闭MySQL服务"><a href="#Step1-关闭MySQL服务" class="headerlink" title="Step1: 关闭MySQL服务"></a>Step1: 关闭MySQL服务</h3><pre><code class="bash"># 检查原有Data目录位置，默认的MySQL中Data文件夹位置位于 /var/lib/mysql/sudo mysql# 输出结果：Welcome to the MySQL monitor.  Commands end with ; or \g.Your MySQL connection id is 8Server version: 8.0.21-0ubuntu0.20.04.3 (Ubuntu)Copyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Type &#39;help;&#39; or &#39;\h&#39; for help. Type &#39;\c&#39; to clear the current input statement.mysql&gt; select @@datadir;+-------------------+| @@datadir         |+-------------------+| /var/lib/mysql/ |+-------------------+1 row in set (0.00 sec)# 关闭MySQL服务sudo systemctl stop mysql</code></pre><hr><h3 id="Step2-检查MySQL运行状况"><a href="#Step2-检查MySQL运行状况" class="headerlink" title="Step2: 检查MySQL运行状况"></a>Step2: 检查MySQL运行状况</h3><pre><code class="bash">sudo systemctl status mysql# 输出结果：• mysql.service - MySQL Community Server     Loaded: loaded (/lib/systemd/system/mysql.service; enabled; vendor preset: enabled)     Active: inactive (dead) since Mon 2020-08-03 03:32:37 UTC; 1h 55min ago   Main PID: 5065 (code=exited, status=0/SUCCESS)     Status: &quot;Server shutdown complete&quot;Aug 03 03:06:59 ubuntu-server systemd[1]: Starting MySQL Community Server...Aug 03 03:07:00 ubuntu-server systemd[1]: Started MySQL Community Server.Aug 03 03:32:35 ubuntu-server systemd[1]: Stopping MySQL Community Server...Aug 03 03:32:37 ubuntu-server systemd[1]: mysql.service: Succeeded.Aug 03 03:32:37 ubuntu-server systemd[1]: Stopped MySQL Community Server.</code></pre><hr><h3 id="Step3-迁移原MySQL数据文件"><a href="#Step3-迁移原MySQL数据文件" class="headerlink" title="Step3: 迁移原MySQL数据文件"></a>Step3: 迁移原MySQL数据文件</h3><p><code>Tips:</code> 假定待迁移Data目录为: /data/test</p><pre><code class="bash">sudo rsync -av /var/lib/mysql /data/test</code></pre><hr><h3 id="Step4-备份原MySQL数据文件"><a href="#Step4-备份原MySQL数据文件" class="headerlink" title="Step4: 备份原MySQL数据文件"></a>Step4: 备份原MySQL数据文件</h3><pre><code class="bash">sudo mv /var/lib/mysql /var/lib/mysql.bak</code></pre><hr><h3 id="Step5-交接目标目录权限"><a href="#Step5-交接目标目录权限" class="headerlink" title="Step5: 交接目标目录权限"></a>Step5: 交接目标目录权限</h3><pre><code class="bash">sudo chown -R mysql:mysql /data/test</code></pre><hr><h3 id="Step6-修改MySQL配置文件"><a href="#Step6-修改MySQL配置文件" class="headerlink" title="Step6: 修改MySQL配置文件"></a>Step6: 修改MySQL配置文件</h3><pre><code class="bash">sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf</code></pre><p><code>Tips:</code> 修改[mysqld]组中datadir的属性值，新增一行datadir键值。</p><pre><code class="bash">······[mysqld]## * Basic Settings#user            = mysql# pid-file      = /var/run/mysqld/mysqld.pid# socket        = /var/run/mysqld/mysqld.sock# port          = 3306# datadir       = /var/lib/mysql  datadir       = /data/test/mysql······</code></pre><hr><h3 id="Step7-修改apparmor的别名配置文件"><a href="#Step7-修改apparmor的别名配置文件" class="headerlink" title="Step7: 修改apparmor的别名配置文件"></a>Step7: 修改apparmor的别名配置文件</h3><pre><code class="bash">sudo vim /etc/apparmor.d/tunables/alias</code></pre><p><code>Tips:</code> 新增一项别名，并指向目标位置。</p><pre><code class="bash"># Alias rules can be used to rewrite paths and are done after variable# resolution. For example, if &#39;/usr&#39; is on removable media:# alias /usr/ -&gt; /mnt/usr/,## Or if mysql databases are stored in /home:# alias /var/lib/mysql/ -&gt; /home/mysql/,  alias /var/lib/mysql/ -&gt; /data/test/mysql/,</code></pre><hr><h3 id="Step8-重启系统apparmor服务"><a href="#Step8-重启系统apparmor服务" class="headerlink" title="Step8: 重启系统apparmor服务"></a>Step8: 重启系统apparmor服务</h3><pre><code class="bash">sudo invoke-rc.d apparmor reloadsudo systemctl restart apparmor</code></pre><hr><h3 id="Step9-越过MySQL检查"><a href="#Step9-越过MySQL检查" class="headerlink" title="Step9: 越过MySQL检查"></a>Step9: 越过MySQL检查</h3><pre><code class="bash">sudo mkdir /var/lib/mysql/mysql -p</code></pre><hr><h3 id="Step10-重启MySQL服务"><a href="#Step10-重启MySQL服务" class="headerlink" title="Step10: 重启MySQL服务"></a>Step10: 重启MySQL服务</h3><pre><code class="bash">sudo systemctl start mysqlsudo systemctl status mysql# 输出结果：● mysql.service - MySQL Community Server     Loaded: loaded (/lib/systemd/system/mysql.service; enabled; vendor preset: enabled)     Active: active (running) since Mon 2020-08-03 05:42:18 UTC; 7s ago    Process: 10205 ExecStartPre=/usr/share/mysql/mysql-systemd-start pre (code=exited, status&gt;   Main PID: 10228 (mysqld)     Status: &quot;Server is operational&quot;      Tasks: 39 (limit: 2249)     Memory: 334.7M     CGroup: /system.slice/mysql.service             └─10228 /usr/sbin/mysqldAug 03 05:42:17 ubuntu-server systemd[1]: Starting MySQL Community Server...Aug 03 05:42:18 ubuntu-server systemd[1]: Started MySQL Community Server.</code></pre><hr><h3 id="End-修改后的MySQL中Data位置"><a href="#End-修改后的MySQL中Data位置" class="headerlink" title="End: 修改后的MySQL中Data位置"></a>End: 修改后的MySQL中Data位置</h3><pre><code class="bash">sudo mysql# 输出结果：Welcome to the MySQL monitor.  Commands end with ; or \g.Your MySQL connection id is 8Server version: 8.0.21-0ubuntu0.20.04.3 (Ubuntu)Copyright (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Type &#39;help;&#39; or &#39;\h&#39; for help. Type &#39;\c&#39; to clear the current input statement.mysql&gt; select @@datadir;+-------------------+| @@datadir         |+-------------------+| /data/test/mysql/ |+-------------------+1 row in set (0.00 sec)</code></pre><hr><h2 id="（二）通过mysqlslap对MySQL进行压力测试"><a href="#（二）通过mysqlslap对MySQL进行压力测试" class="headerlink" title="（二）通过mysqlslap对MySQL进行压力测试"></a>（二）通过mysqlslap对MySQL进行压力测试</h2><h3 id="mysqlLslap"><a href="#mysqlLslap" class="headerlink" title="mysqlLslap"></a>mysqlLslap</h3><p>先来看看MySQL官方对mysqlslap工具的介绍：mysqlslap is a diagnostic program designed to emulate client load for a MySQL server and to report the timing of each stage. It works as if multiple clients are accessing the server.</p><p><code>简明概括</code>就是mysqlslap是MySQL5.1.4之后<code>自带</code>的benchmark<code>基准测试</code>工具，该工具可以模拟多个客户端同时<code>并发</code>的向服务器发出查询更新，给出了<code>性能测试</code>数据而且提供了<code>多种引擎的性能比较</code>。</p><p>该工具有诸多可选项可供选择以实现大部分场景下对MySQL<code>模拟</code>进行压力测试。</p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/UbuntuServer/MySQL/mysqlslap.png"><hr><h3 id="Tips-以下是常用的部分参数"><a href="#Tips-以下是常用的部分参数" class="headerlink" title="Tips: 以下是常用的部分参数"></a><code>Tips:</code> 以下是常用的部分参数</h3><pre><code class="bash"># 连接到的MySQL服务器的主机名(或IP地址)，默认为本地localhost--host=host_name# 连接MySQL服务时用的用户名(如：root)--user=root# 连接MySQL服务时用的密码(如：root)--password# 指定测试时生成的临时数据库名称(如：test)--create-schema=test# 工具自动生成测试用SQL语句--auto-generate-sql# 选择生成的SQL语句的格式(write, read, update, mixed)--auto-generate-sql-load-type=write# 执行的SQL总数量--number-of-queries=100000# 并发数，模拟多少个客户端同时执行query--concurrency=200# 引擎(如：myisam,innodb)--engines=innodb# 迭代的实验次数--iterations=100</code></pre><hr><h3 id="以下是我的机器上对MySQL进行一组压力测试的结果"><a href="#以下是我的机器上对MySQL进行一组压力测试的结果" class="headerlink" title="以下是我的机器上对MySQL进行一组压力测试的结果"></a>以下是我的机器上对MySQL进行一组压力测试的结果</h3><p><code>写入:</code></p><pre><code class="bash"># 写入脚本sudo mysqlslap --user=root --password=root --create-schema=test --auto-generate-sql --auto-generate-sql-load-type=write --concurrency=20 --number-of-queries=1000 --iterations=100# 结果mysqlslap: [Warning] Using a password on the command line interface can be insecure.Benchmark    Average number of seconds to run all queries: 0.205 seconds    Minimum number of seconds to run all queries: 0.173 seconds    Maximum number of seconds to run all queries: 0.395 seconds    Number of clients running queries: 20    Average number of queries per client: 50</code></pre><hr><p><code>读取:</code></p><pre><code class="bash"># 读取脚本sudo mysqlslap --user=root --password=root --create-schema=test --auto-generate-sql --auto-generate-sql-load-type=read --concurrency=20 --number-of-queries=1000 --iterations=100# 结果mysqlslap: [Warning] Using a password on the command line interface can be insecure.Benchmark    Average number of seconds to run all queries: 0.132 seconds    Minimum number of seconds to run all queries: 0.120 seconds    Maximum number of seconds to run all queries: 0.191 seconds    Number of clients running queries: 20    Average number of queries per client: 50</code></pre><hr><h2 id="Donate-☕️"><a href="#Donate-☕️" class="headerlink" title="Donate ☕️"></a>Donate ☕️</h2><p>如果你喜欢我的博文，可以通过下面的方式支持我，你的支持是我最大的动力 😘</p><p>转载时请注明出处 ©️PhoenixNest</p><table><thead><tr><th align="center">Donate 😇</th><th align="center">Qr code</th></tr></thead><tbody><tr><td align="center">Wechat</td><td align="center"><img src="/img/wechat.png" alt="Wechat"></td></tr><tr><td align="center">Ali Pay</td><td align="center"><img src="/img/alipay.png" alt="Ali Pay"></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu Server </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Road to UbuntuServer</title>
      <link href="/Road-to-UbuntuServer/"/>
      <url>/Road-to-UbuntuServer/</url>
      
        <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>本篇将介绍最近在<code>Dell PowerEdge R420</code>服务器上折腾<code>Ubuntu Server 20.04LTS</code>的一些笔记分享。</p><p>在对服务器进行配置与操作前，你需要准备👇：</p><ul><li><p>下载<a href="http://releases.ubuntu.com/20.04/" target="_blank" rel="noopener">Ubuntu Server 20.04LTS</a>镜像并将其<a href="https://rufus.ie/zh_CN.html" target="_blank" rel="noopener">刷入U盘</a></p></li><li><p><code>(建议)</code>在<code>有网络</code>连接的情况下安装Ubuntu Server 20.04LTS</p></li></ul><hr><p>参考资料:</p><ul><li><p><a href="https://ubuntu.com/download/server" target="_blank" rel="noopener">Download Ubuntu Server</a></p></li><li><p><a href="https://ubuntu.com/tutorials/install-ubuntu-server#1-overview" target="_blank" rel="noopener">Install Ubuntu Server</a></p></li><li><p><a href="https://www.tecmint.com/install-ubuntu-20-04-server/" target="_blank" rel="noopener">How to Install Ubuntu 20.04 Server</a></p></li><li><p><a href="https://linuxize.com/post/how-to-enable-ssh-on-ubuntu-20-04/#:~:text=%20Perform%20the%20following%20steps%20as%20root%20or,verify%20that%20SSH%20is%20running%20by...%20More%20" target="_blank" rel="noopener">How to Enable SSH on Ubuntu 20.04</a></p></li></ul><hr><h2 id="About"><a href="#About" class="headerlink" title="About"></a>About</h2><p>Ubuntu是一个以<code>桌面应用</code>为主的Linux操作系统，其名称来自非洲南部祖鲁语或豪萨语的“ubuntu”一词，意思是“人性”“我的存在是因为大家的存在”，是非洲传统的一种价值观。</p><p>Ubuntu基于<code>Debian发行版</code>和Gnome桌面环境，而从11.04版起，Ubuntu发行版放弃了Gnome桌面环境，改为Unity。从前人们认为Linux难以安装、难以使用，在Ubuntu出现后这些都成为了历史。</p><p>Ubuntu也拥有庞大的社区力量，用户可以方便地从社区获得帮助。自Ubuntu 18.04 LTS其，Ubuntu发行版又重新开始使用GNOME3桌面环境。</p><hr><h2 id="（一）-安装Ubuntu-Server"><a href="#（一）-安装Ubuntu-Server" class="headerlink" title="（一）. 安装Ubuntu Server"></a>（一）. 安装Ubuntu Server</h2><h3 id="Step1-选择语言"><a href="#Step1-选择语言" class="headerlink" title="Step1: 选择语言"></a>Step1: 选择语言</h3><p><code>Tips:</code> Ubuntu Server无简中，本章节将介绍英文版安装。</p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/UbuntuServer/install_1.png"><hr><h3 id="Step2-选择键盘布局"><a href="#Step2-选择键盘布局" class="headerlink" title="Step2: 选择键盘布局"></a>Step2: 选择键盘布局</h3><p><code>Tips:</code> 该处使用美式键盘布局即可，通用大部分的键盘布局。</p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/UbuntuServer/install_2.png"><hr><h3 id="Step3-网络设置"><a href="#Step3-网络设置" class="headerlink" title="Step3: 网络设置"></a>Step3: 网络设置</h3><p><code>Tips:</code> 建议在安装过程中联网进行安装，这样既能在后续的安装过程中同步升级软件包。如果选择离线安装，后续官方虽然说可以在安装后进行配置，但在多次配置ip却仍旧无法联网，不知道是20.04版本的小Bug还是其他原因。</p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/UbuntuServer/install_3.png"><hr><h3 id="Step4-代理设置"><a href="#Step4-代理设置" class="headerlink" title="Step4: 代理设置"></a>Step4: 代理设置</h3><p><code>Tips:</code> 有的话可以填写，本章节暂不进行配置。</p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/UbuntuServer/install_4.png"><hr><h3 id="Step5-镜像源配置"><a href="#Step5-镜像源配置" class="headerlink" title="Step5: 镜像源配置"></a>Step5: 镜像源配置</h3><p><code>Tips:</code> Ubuntu Server软件下载镜像源可以在安装时进行修改，本篇建议修改为<a href="https://mirror.tuna.tsinghua.edu.cn/help/ubuntu/" target="_blank" rel="noopener">清华大学开源软件镜像</a>：<a href="https://mirrors.tuna.tsinghua.edu.cn/ubuntu/" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/ubuntu/</a></p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/UbuntuServer/install_5.png"><hr><h3 id="Step6-引导空间配置"><a href="#Step6-引导空间配置" class="headerlink" title="Step6: 引导空间配置"></a>Step6: 引导空间配置</h3><p><code>Tips:</code> 可根据需求对引导空间进行调整，本章节暂不进行配置。</p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/UbuntuServer/install_6.png"><hr><h3 id="Step7-分区配置"><a href="#Step7-分区配置" class="headerlink" title="Step7: 分区配置"></a>Step7: 分区配置</h3><p><code>Tips:</code> Linux对于分区较为敏感，类如：/usr /bin /home /efi等等分区都有及其重要的作用，使用时稍有不慎对系统分区进行错误操作将造成毁灭性的严重后果，此处暂不展开分析系统分区的规则与建议，有兴趣的读者可自行前往<a href="https://www.linux.org/" target="_blank" rel="noopener">Linux官方网站</a>学习。</p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/UbuntuServer/install_7.png"><hr><h3 id="Step8-Ubuntu-Server账号配置"><a href="#Step8-Ubuntu-Server账号配置" class="headerlink" title="Step8: Ubuntu Server账号配置"></a>Step8: Ubuntu Server账号配置</h3><p><code>Tips:</code> 设置一个账号用以登录系统，此处要注意username的命名限制。</p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/UbuntuServer/install_9.png"><hr><h3 id="Step9-SSH设置"><a href="#Step9-SSH设置" class="headerlink" title="Step9: SSH设置"></a>Step9: SSH设置</h3><p><code>Tips:</code> Ubuntu Server默认不开放SSH，但配置SSH能使工程师远程连接服务器，本章勾选并下载OpenSSH Server客户端。</p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/UbuntuServer/install_10.png"><hr><h3 id="Step10-等待Ubuntu-Server安装结束"><a href="#Step10-等待Ubuntu-Server安装结束" class="headerlink" title="Step10: 等待Ubuntu Server安装结束"></a>Step10: 等待Ubuntu Server安装结束</h3><p><code>Tips:</code> 若用户在联网状态下安装Ubuntu Server时，安装过程中将会自动检测并下载对应软件包更新。系统安装后需要去除安装介质(U盘\移动硬盘\光驱安装)，并单击Enter键重启，即安装完毕。</p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/UbuntuServer/install_11.png"><hr><h3 id="End-登录系统"><a href="#End-登录系统" class="headerlink" title="End: 登录系统"></a>End: 登录系统</h3><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/UbuntuServer/install_end.png"><hr><h2 id="（二）-远程连接Ubuntu-Server"><a href="#（二）-远程连接Ubuntu-Server" class="headerlink" title="（二）. 远程连接Ubuntu Server"></a>（二）. 远程连接Ubuntu Server</h2><h3 id="Step1-安装net-tools用以查看ip"><a href="#Step1-安装net-tools用以查看ip" class="headerlink" title="Step1: 安装net-tools用以查看ip"></a>Step1: 安装net-tools用以查看ip</h3><pre><code class="bash">sudo apt updatesudo apt upgrade# 若前期安装过程中未联网或未启用ssh的话，需要先下载openssh-serversudo apt install openssh-server# 安装net-tools工具sudo apt install net-tools</code></pre><hr><h3 id="Step2-查看本机ip"><a href="#Step2-查看本机ip" class="headerlink" title="Step2: 查看本机ip"></a>Step2: 查看本机ip</h3><pre><code class="bash">sudo ifconfig</code></pre><hr><h3 id="Step3-修改远程访问权限"><a href="#Step3-修改远程访问权限" class="headerlink" title="Step3: 修改远程访问权限"></a>Step3: 修改远程访问权限</h3><pre><code class="bash"># 修改该文件中PermitRootLogin的值为yesvim /etc/ssh/sshd_config</code></pre><hr><h3 id="Step4-使用指令查看ip"><a href="#Step4-使用指令查看ip" class="headerlink" title="Step4: 使用指令查看ip"></a>Step4: 使用指令查看ip</h3><pre><code class="bash">sudo ifconfig# 查看ip地址ens33: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500        inet 192.168.116.134  netmask 255.255.255.0  broadcast 192.168.116.255        inet6 fe80::20c:29ff:fecb:6b67  prefixlen 64  scopeid 0x20&lt;link&gt;        ether 00:0c:29:cb:6b:67  txqueuelen 1000  (Ethernet)        RX packets 47090  bytes 68633562 (68.6 MB)        RX errors 0  dropped 0  overruns 0  frame 0        TX packets 6040  bytes 421820 (421.8 KB)        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536        inet 127.0.0.1  netmask 255.0.0.0        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;        loop  txqueuelen 1000  (Local Loopback)        RX packets 190  bytes 16652 (16.6 KB)        RX errors 0  dropped 0  overruns 0  frame 0        TX packets 190  bytes 16652 (16.6 KB)        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</code></pre><hr><h3 id="Step5-使用远程链接工具链接"><a href="#Step5-使用远程链接工具链接" class="headerlink" title="Step5: 使用远程链接工具链接"></a>Step5: 使用远程链接工具链接</h3><p><code>Tips:</code> 本章节选用<code>XShell</code>进行远程连接。</p><img src="https://cdn.jsdelivr.net/gh/PhoenixNest/ImageBed@master/UbuntuServer/ubuntu_ssh.png"><hr><h2 id="（三）-Server常用命令"><a href="#（三）-Server常用命令" class="headerlink" title="（三）. Server常用命令"></a>（三）. Server常用命令</h2><pre><code class="bash"># Scan local disksudo fdisk -l# Check disk informationsudo df -HT# Create test dirsudo mkdir xxx# Eg: that you can create a test foldersudo mkdir /test# Mount a HDD/SDD to your systemsudo mount xxxxxx xxxxxx# Eg: you can mount /dev/nvme0n1 with you localDir with /datasudo mount /dev/nvme0n1 /data# Change filesystem to xfssudo mkfs.xfs xxxxxx# Eg: you can make the default change to the disk into xfs filesystem or the other filesystem you want to change(eg: ext4, ext3, ntfs)sudo mkfs.xfs /dev/nvme0n1# If you want to set the block size to another big one, try to add &#39;-b size=8k&#39;sudo mkfs.xfs -b size=xx xxxxxx# Eg: you can change the /dev/nvme0n1 into xfs with it&#39;s blocksize=8k# NOTICE: disk blocksize can not bigger than system default page sizesudo mkfs.xfs -b size=8k /dev/nvme0n1# Get default system pagesizesudo getconf PAGESIZE# Reboot the computer immediatelysudo reboot -h now# Shut down the computer immediatelysudo shutdown -h now</code></pre><hr><h2 id="（四）-通过”dd”关键字对硬盘进行读写测试"><a href="#（四）-通过”dd”关键字对硬盘进行读写测试" class="headerlink" title="（四）. 通过”dd”关键字对硬盘进行读写测试"></a>（四）. 通过”dd”关键字对硬盘进行读写测试</h2><pre><code class="bash"># R/W Test# The server&#39;s write file size is usually 4k and 8K, here the disk will be written test from 4K, 8K, 64K, 1M order, and after the memory cache is cleared, the 1M file on the disk will be read and deleted.# Create Tiny Size Test File &amp;&amp;  Start Write Speed Testsudo dd if=/dev/zero of=./largefile bs=4k count=1024# Create Small Size Test File &amp;&amp;  Start Write Speed Testsudo dd if=/dev/zero of=./largefile bs=8k count=1024# Create Middle Size Test File &amp;&amp;  Start Write Speed Testsudo dd if=/dev/zero of=./largefile bs=64k count=1024# Create Large Size Test File &amp;&amp;  Start Write Speed Testsudo dd if=/dev/zero of=./largefile bs=1M count=1024# Remove RAM Cachesudo sh -c &quot;sync &amp;&amp; echo 3 &gt; /proc/sys/vm/drop_caches&quot;# Check Read Speedsudo dd if=./largefile of=./null bs=8k</code></pre><hr><h2 id="Donate-☕️"><a href="#Donate-☕️" class="headerlink" title="Donate ☕️"></a>Donate ☕️</h2><p>如果你喜欢我的博文，可以通过下面的方式支持我，你的支持是我最大的动力 😘</p><p>转载时请注明出处 ©️PhoenixNest</p><table><thead><tr><th align="center">Donate 😇</th><th align="center">Qr code</th></tr></thead><tbody><tr><td align="center">Wechat</td><td align="center"><img src="/img/wechat.png" alt="Wechat"></td></tr><tr><td align="center">Ali Pay</td><td align="center"><img src="/img/alipay.png" alt="Ali Pay"></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ubuntu Server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序 • 自动化测试</title>
      <link href="/MiniProgram-AutoTest/"/>
      <url>/MiniProgram-AutoTest/</url>
      
        <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>本篇将介绍最近在<code>小程序开发</code>项目上所遇到的有关<code>自动化测试</code>的一些笔记分享。</p><p>在进行小程序自动化测试前，你需要准备👇：</p><ul><li><p><a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a> - v8.0及以上</p></li><li><p><a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html" target="_blank" rel="noopener">微信开发者工具</a> - v1.02.1907232及以上</p></li><li><p><a href="https://github.com/wechat-miniprogram/miniprogram-demo" target="_blank" rel="noopener">微信官方小程序Demo</a> - 待测试的项目Demo</p></li></ul><hr><p>参考资料：</p><ul><li><p><a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/auto/" target="_blank" rel="noopener">微信小程序官方自动化测试开发文档</a></p></li><li><p><a href="https://blog.csdn.net/weixin_43827779/article/details/106164261" target="_blank" rel="noopener">小程序自动化测试快速开始</a></p></li><li><p><a href="https://blog.csdn.net/weixin_43827779/article/details/106180757" target="_blank" rel="noopener">小程序自动化测试+jest</a></p></li><li><p><a href="https://blog.csdn.net/qq_40816649/article/details/102463350" target="_blank" rel="noopener">miniprogram-automator微信小程序自动化工具</a></p></li></ul><hr><h2 id="Get-Started"><a href="#Get-Started" class="headerlink" title="Get Started"></a>Get Started</h2><h3 id="Step1-项目初始化"><a href="#Step1-项目初始化" class="headerlink" title="Step1: 项目初始化"></a>Step1: 项目初始化</h3><pre><code class="bash">cd miniprogram-demonpm icd miniprogramnpm i</code></pre><h3 id="Step2-引入自动化测试插件与框架"><a href="#Step2-引入自动化测试插件与框架" class="headerlink" title="Step2: 引入自动化测试插件与框架"></a>Step2: 引入自动化测试插件与框架</h3><p>完成上述步骤后，安装miniprogram-automator，这是一款由<code>微信官方</code>推出的小程序自动化测试框架。</p><pre><code class="bash">npm i miniprogram-automator --save-dev</code></pre><p>引入jset测试框架</p><pre><code class="bash">npm i jest</code></pre><p><strong>PS: 在下载完jest后，还需要前往package.json配置jest。</strong></p><pre><code class="JavaScript">&quot;scripts&quot;: {    &quot;test&quot;: &quot;jest&quot;  }</code></pre><p>添加完上述代码后，在进行测试时系统会<code>自动找到</code>包括.test.js结尾的测试文件并运行。</p><h3 id="Step3-开启自动化测试端口"><a href="#Step3-开启自动化测试端口" class="headerlink" title="Step3: 开启自动化测试端口"></a>Step3: 开启自动化测试端口</h3><p><strong>PS: (该步骤可省略，当第5步出现问题时，可先开启端口再执行第5步命令)</strong></p><p>1) 打开微信开发者工具，前往设置 -&gt; 通用设置 -&gt; 安全 -&gt; 开启服务端口</p><p>2) 前往你的微信开发者工具安装目录，例：D:\微信开发者工具，开启自动化测试端口</p><pre><code class="bash">.\cli.bat --auto 你的项目地址 --auto-port 9420</code></pre><p>当出现以下信息时，表示端口启用成功，并会同时开启/重启微信开发者工具。</p><pre><code class="bash">PS D:\微信web开发者工具&gt; .\cli.bat --auto C:\Users\P7XXTM1-G\Desktop\miniprogram-demo\miniprogram --auto-port 9420√ IDE server has started, listening on http://127.0.0.1:33553[warn] DEPRECATED please upgrade to the following v2 command instead ( doc: https://developers.weixin.qq.com/miniprogram/dev/devtools/cli.html ) cli auto --project C:\Users\P7XXTM1-G\Desktop\miniprogram-demo\miniprogram --auto-port 9420√ Open project with automation enabled success C:\Users\P7XXTM1-G\Desktop\miniprogram-demo\miniprogram</code></pre><hr><h3 id="Step4-编写测试脚本"><a href="#Step4-编写测试脚本" class="headerlink" title="Step4: 编写测试脚本"></a>Step4: 编写测试脚本</h3><p>开启完测试端口后，新建一个miniTest文件夹用于放置测试文件，创建index.test.js文件，开始编写测试脚本。</p><p>此处使用官方的<a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/auto/demo.html" target="_blank" rel="noopener">测试脚本案例👇</a></p><pre><code class="JavaScript">const automator = require(&#39;miniprogram-automator&#39;)describe(&#39;index&#39;, () =&gt; {  let miniProgram  let page  beforeAll(async () =&gt; {    miniProgram = await automator.launch({      cliPath:&#39;D://微信web开发者工具//cli.bat&#39;,// cli.bat文件一般在微信开发者工具目录下，MacOS下一般无需配置cliPath      projectPath: &#39;./&#39; // 默认当前项目地址即可    })    page = await miniProgram.reLaunch(&#39;/page/component/index&#39;) // 测试页面    await page.waitFor(500)  }, 30000)  // 测试脚本  it(&#39;desc&#39;, async () =&gt; {    const desc = await page.$(&#39;.index-desc&#39;)    expect(desc.tagName).toBe(&#39;view&#39;)    expect(await desc.text()).toContain(&#39;以下将展示小程序官方组件能力&#39;)  })  afterAll(async () =&gt; {    await miniProgram.close()  })})</code></pre><h3 id="Step5-开始自动化测试"><a href="#Step5-开始自动化测试" class="headerlink" title="Step5: 开始自动化测试"></a>Step5: 开始自动化测试</h3><p>编写完测试脚本后，在终端输入npm run test，即可进行自动化测试，期间将会<code>打开/重启</code>微信开发者工具。</p><pre><code class="bash">PS C:\Users\P7XXTM1-G\Desktop\miniprogram-demo\miniprogram&gt; npm run test&gt; miniprogram@1.0.0 test C:\Users\P7XXTM1-G\Desktop\miniprogram-demo\miniprogram&gt; jest PASS  miniTest/index.test.js (21.827 s)  index    √ desc (12 ms)Test Suites: 1 passed, 1 totalTests:       1 passed, 1 totalSnapshots:   0 totalTime:        22.683 s, estimated 27 sRan all test suites.</code></pre><p>当出现上述信息时，表示自动化测试已通过。</p><hr><h2 id="API"><a href="#API" class="headerlink" title="API"></a>API</h2><p>• <a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/auto/automator.html" target="_blank" rel="noopener">Automator</a>模块提供了<code>启动及连接开发者工具</code>的方法。</p><p>• <a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/auto/miniprogram.html" target="_blank" rel="noopener">MiniProgram</a>模块提供了<code>控制小程序</code>的方法。</p><p>• <a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/auto/page.html" target="_blank" rel="noopener">Page</a>模块提供了<code>控制小程序页面</code>的方法。</p><p>• <a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/auto/element.html" target="_blank" rel="noopener">Element</a>模块提供了<code>控制小程序页面元素</code>的方法。</p><hr><h2 id="Donate-☕️"><a href="#Donate-☕️" class="headerlink" title="Donate ☕️"></a>Donate ☕️</h2><p>如果你喜欢我的博文，可以通过下面的方式支持我，你的支持是我最大的动力 😘</p><p>转载时请注明出处 ©️PhoenixNest</p><table><thead><tr><th align="center">Donate 😇</th><th align="center">Qr code</th></tr></thead><tbody><tr><td align="center">Wechat</td><td align="center"><img src="/img/wechat.png" alt="Wechat"></td></tr><tr><td align="center">Ali Pay</td><td align="center"><img src="/img/alipay.png" alt="Ali Pay"></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 微信小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WeChat-MiniProgram </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>毛中特概论 • 模拟题整理</title>
      <link href="/Notes-Political/"/>
      <url>/Notes-Political/</url>
      
        <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>本篇整理了一些我在近期复习专插本考试与参加专插本政治公开课时所遇到的一些模拟练习题。</p><hr><h2 id="一-毛泽东思想及其历史地位"><a href="#一-毛泽东思想及其历史地位" class="headerlink" title="(一) 毛泽东思想及其历史地位"></a>(一) 毛泽东思想及其历史地位</h2><h3 id="1-辨析题-坚持群众路线，就要坚持人民是历史发展的根本力量"><a href="#1-辨析题-坚持群众路线，就要坚持人民是历史发展的根本力量" class="headerlink" title="1.(辨析题) 坚持群众路线，就要坚持人民是历史发展的根本力量"></a><strong>1.(辨析题) 坚持群众路线，就要坚持人民是历史发展的根本力量</strong></h3><p><code>关键点</code>：人民群众是历史的主体，是历史的创造者。</p><p>答案：</p><p>正确。群众路线的本质是<code>人民群众是历史的创造者</code>，坚持群众路线就要坚持<code>人民是历史发展的根本力量</code>。</p><p>(1)<code>尊重</code>人民首创精神；<code>尊重</code>人民意愿、经验、权利；<code>正确行使</code>人民给予的权利，<code>自觉接受</code>人民监督。</p><p>(2)坚持<code>全心全意为人民服务的宗旨</code>。在任何时候都把群众利益放在首位。</p><p>(3)保持<code>党同人民群众之间的血肉联系</code>，把群众观点、群众路线深深植根与全党同志思想。落实到每个党员行动上。</p><h3 id="2-简答题-如何科学认识毛泽思想的历史地位"><a href="#2-简答题-如何科学认识毛泽思想的历史地位" class="headerlink" title="2.(简答题) 如何科学认识毛泽思想的历史地位"></a><strong>2.(简答题) 如何科学认识毛泽思想的历史地位</strong></h3><p><code>关键点</code>：马克思主义中国化第一次历史性的飞跃；为中特奠定理论基础；精神财富</p><p>答案：</p><p>(1)是马克思主义中国化<code>第一次历史性的飞跃</code>，为中国特色社会主体理论体系的形成奠定理论基础。</p><p>(2)是中国革命与建设的<code>科学指南</code>，是被实践证明了的关于中国革命与建设的<code>正确理论原则</code>和<code>经验总结</code>。</p><p>(3)是中国共产党和中国人民宝贵的<code>精神财富</code>。</p><p>(4)要将毛泽东晚年所犯的错误同经过长期历史检验而形成为科学理论的毛泽东思想<code>区别</code>开来。</p><hr><h2 id="二-毛泽东思想主要内容和活的灵魂"><a href="#二-毛泽东思想主要内容和活的灵魂" class="headerlink" title="(二) 毛泽东思想主要内容和活的灵魂"></a>(二) 毛泽东思想主要内容和活的灵魂</h2><h3 id="1-辨析题-新民主主义革命的经济纲领是“一化三改”"><a href="#1-辨析题-新民主主义革命的经济纲领是“一化三改”" class="headerlink" title="1.(辨析题)新民主主义革命的经济纲领是“一化三改”"></a><strong>1.(辨析题)新民主主义革命的经济纲领是“一化三改”</strong></h3><p><code>关键点</code>：同过渡时期总路线的主要内容区别开来</p><p>答案：</p><p>错误。“一化三改”是党在过渡时期总路线主要内容的概括。</p><p>新民主主义革命的经济纲领是(<code>两个保护、一个没收</code>)：</p><p>(1)<code>没收</code>封建地主阶级的土地归农民所有，这是新民主主义革命的<code>主要内容</code>。</p><p>(2)<code>没收</code>官僚资本主义的垄断资本归新民主主义的国家所有，这是新民主主义革命的<code>题中之要</code>。</p><p>(3)<code>保护</code>民族工商业，这是新民主主义革命经济纲领中极具<code>特色</code>的一项<code>内容</code>。</p><h3 id="2-简答题-新民主主义革命三大法宝的关系"><a href="#2-简答题-新民主主义革命三大法宝的关系" class="headerlink" title="2.(简答题)新民主主义革命三大法宝的关系"></a><strong>2.(简答题)新民主主义革命三大法宝的关系</strong></h3><p><code>作答思路</code>：提出时间；三大法宝是什么；三者关系</p><p>答案：</p><p>抗战时期，毛泽东系统论述了统一战线、武装斗争、党的建设这三大法宝之间的关系。</p><p>(1)<code>统一战争、武装斗争</code>是中国革命的两个<code>基本特点</code>，是战胜敌人的两个<code>基本武器</code>。</p><p>(2)<code>统一战线</code>是实行武装斗争的<code>统一战线</code>。</p><p>(3)<code>武装斗争</code>是统一战线的<code>中心支柱</code>。</p><p>(4)<code>党的组织</code>是掌握统一战线和武装斗争这两个武器以实行对敌冲锋陷阵的<code>英勇战士</code>。</p><h3 id="3-简答题-新民主主义革命理论的意义"><a href="#3-简答题-新民主主义革命理论的意义" class="headerlink" title="3.(简答题)新民主主义革命理论的意义"></a><strong>3.(简答题)新民主主义革命理论的意义</strong></h3><p>答案：</p><p>新民主主义革命理论是独创性的理论。</p><p>(1)<code>揭示</code>了近代中国革命的<code>发展规律</code>，<code>开辟</code>了马克思主义中国化的<code>发展道路</code>。</p><p>(2)指导完成新民主主义革命，<code>建立了中华人民共和国</code>，中国人民从此站起来了。</p><p>(3)<code>鼓舞和推动</code>了<code>世界人民</code>反抗帝国主义、殖民主义的斗争，<code>增强了他们</code>反对帝国主义斗争<code>的信心</code>。</p><h3 id="4-简答题-简述新民主主义基本纲领"><a href="#4-简答题-简述新民主主义基本纲领" class="headerlink" title="4.(简答题)简述新民主主义基本纲领"></a><strong>4.(简答题)简述新民主主义基本纲领</strong></h3><p><code>作答思路</code>：基本纲领由什么组成；内容是什么；</p><p>新民主主义的基本纲领有：政治纲领、经济纲领、文化纲领</p><p>(1)<code>政治纲领</code>：推翻帝国主义和封建主义的统治，建立一个由无产阶级领导，以工农联盟为基础，各革命阶级联合专政的新民主主义共和国。</p><p>(2)<code>经济纲领</code>：<code>没收</code>封建地主阶级的土地归农民所有；<code>没收</code>官僚资本阶级的垄断资本归新民主主义的国家所有；<code>保护</code>民族工商业。</p><p>(3)<code>文化纲领</code>：无产阶级领导的人民大众的<code>反帝反封建</code>的文化，即<code>民主的科学的大众的</code>文化。</p><h3 id="5-论述题-论述新民主主义革命时期统一战线的构成和实践经验"><a href="#5-论述题-论述新民主主义革命时期统一战线的构成和实践经验" class="headerlink" title="5.(论述题)论述新民主主义革命时期统一战线的构成和实践经验"></a><strong>5.(论述题)论述新民主主义革命时期统一战线的构成和实践经验</strong></h3><p>答案：</p><p>统一战线的<code>构成</code>：</p><p>(1)工人阶级同农民阶级、广大知识分子及其他劳动者的联盟，主要是<code>工农联盟</code>，这<code>是统一战争的基础</code>。</p><p>(2)工人阶级和非劳动人民的联盟，主要是<code>与民族资产阶级的联盟</code>。</p><p>实践<code>经验</code>：</p><p>(1)要<code>建立巩固的工农联盟</code>。</p><p>(2)<code>正确对待资产阶级</code>，尤其是民族资产阶级。</p><p>(3)采取<code>区别对待的方针</code>。</p><p>(4)坚持<code>独立自主原则</code>，保持党在思想上、政治上、组织上的独立性。</p><hr><h2 id="三-社会主义改造理论-•-四-社会主义建设道路初步探索的理论成果"><a href="#三-社会主义改造理论-•-四-社会主义建设道路初步探索的理论成果" class="headerlink" title="(三)社会主义改造理论 • (四)社会主义建设道路初步探索的理论成果"></a>(三)社会主义改造理论 • (四)社会主义建设道路初步探索的理论成果</h2><h3 id="1-简答题-党在过渡时期总路线"><a href="#1-简答题-党在过渡时期总路线" class="headerlink" title="1.(简答题)党在过渡时期总路线"></a><strong>1.(简答题)党在过渡时期总路线</strong></h3><p><code>作答思路</code>：总路线是什么；内容有什么</p><p>答案：</p><p>党在过渡时期总路线的<code>完整表述</code>是：</p><p>(1)<code>这是</code>从中华人民共和国成立的到社会主义改造基本完成的<code>一个过渡时期</code>。</p><p>(2)党在这个时期的<code>总路线和总任务</code>是：要在一个相当长的时期内，逐步<code>实现</code>国家的<code>社会主义工业化</code>，逐步<code>实现</code>国家对<code>农业、手工业、资本主义工商业的社会主义改造</code>。</p><p>党在过渡时期的<code>主要内容是“一化三改”</code>，其中：</p><p>(1)“一化”指的是<code>社会主义工业化</code>。</p><p>(2)“三改”指的是对<code>农业、手工业、资本主义工商业的社会主义改造</code>。</p><p>这是一条社会主义<code>建设与改造同时并举</code>的路线。</p><h3 id="2-简答题-我国社会主义改造的历史经验"><a href="#2-简答题-我国社会主义改造的历史经验" class="headerlink" title="2.(简答题)我国社会主义改造的历史经验"></a><strong>2.(简答题)我国社会主义改造的历史经验</strong></h3><p>答案：</p><p>(1)坚持社会主义<code>建设与改造同时并举</code>。</p><p>(2)采取<code>积极引导、稳步前进</code>的方针。</p><p>(3)用<code>和平方式</code>进行改造</p><h3 id="3-简答题-中国确立社会主义基本制度的重大意义"><a href="#3-简答题-中国确立社会主义基本制度的重大意义" class="headerlink" title="3.(简答题)中国确立社会主义基本制度的重大意义"></a><strong>3.(简答题)中国确立社会主义基本制度的重大意义</strong></h3><p>答案：</p><p>(1)社会主义基本制度的确立<code>是中国历史上最深刻最伟大的变革</code>。</p><p>(2)极大地<code>促进了社会生产力的发展</code>。</p><p>(3)广大劳动人民成为国家的主人，这<code>是中国几千年来阶级关系最根本的变革</code>。</p><p>(4)<code>增强</code>了社会主义力量，对<code>维护世界和平积极影响</code>。</p><p>(5)<code>丰富和发展</code>了科学社会主义理论。</p><h3 id="4-如何调动一切积极因素为社会主义事业服务"><a href="#4-如何调动一切积极因素为社会主义事业服务" class="headerlink" title="4.如何调动一切积极因素为社会主义事业服务"></a><strong>4.如何调动一切积极因素为社会主义事业服务</strong></h3><p><code>作答思路</code>：何时提出；怎么做</p><p>答案：</p><p>《论十大关系》确定了一个基本方针，即调动一切积极因素为社会主义事业服务。</p><p>(1)必须<code>坚持中国共产党的领导</code>。</p><p>(2)必须<code>发展社会主义民主政治</code>。</p><p>(3)<code>科学认识社会主义发展阶段和社会主义建设的规律</code>。毛泽东指出，社会主义发展阶段可分为两个阶段，第一阶段是不发达的社会主义，第二阶段是比较发达的社会主义。</p><h3 id="5-简答题-社会主义道路初步探索的意义"><a href="#5-简答题-社会主义道路初步探索的意义" class="headerlink" title="5.(简答题)社会主义道路初步探索的意义"></a><strong>5.(简答题)社会主义道路初步探索的意义</strong></h3><p>答案：</p><p>(1)<code>巩固和发展</code>了我国的社会主义制度。</p><p>拓展：增强了广大人民群众走社会主义道路的信心，社会主义制度也在实践中得到发展。</p><p>(2)为开创中国特色社会主义提供了<code>宝贵经验</code>、<code>理论准备</code>、<code>物质基础</code>。</p><p>拓展：未开启新时期新道路奠定了重要的思想基础。改革开放以后我国赖以进行现代化建设的物质技术基础，建设等方面的骨干力量和他们的工作经验，大部分是这一时期建设起来的。</p><p>(3)<code>丰富</code>了科学社会主义的理论和实践。</p><p>拓展：丰富了中国社会主义的理论与实践，也丰富了科学社会主义的理论与实践，为其他国家的社会主义建设提供了经验和借鉴。</p><hr><h2 id="五-邓小平理论"><a href="#五-邓小平理论" class="headerlink" title="(五) 邓小平理论"></a>(五) 邓小平理论</h2><h3 id="1-简答题-邓小平关于社会主义本质概括的意义"><a href="#1-简答题-邓小平关于社会主义本质概括的意义" class="headerlink" title="1.(简答题)邓小平关于社会主义本质概括的意义"></a><strong>1.(简答题)邓小平关于社会主义本质概括的意义</strong></h3><p>(1)既包括了社会主义的生产力问题，又包括了以社会主义关系为基础的社会关系问题，是一个有机的整体。(<code>生产力与生产关系</code>)</p><p>(2)为我们<code>坚持完善和发展公有制</code>指明了方向。</p><p>(3)<code>遵循</code>了科学社会主义的基本原则，<code>反映</code>了人民的利益和时代要求，<code>廓清</code>了不合乎时代进步和社会发展规律的模糊观念，<code>摆脱</code>了长期以来拘泥于具体形式而忽略社会主义本质的错误倾向，<code>深化</code>了对科学社会主义的认识。</p><h3 id="2-辨析题-改革是社会主义制度的自我完善和自我发展"><a href="#2-辨析题-改革是社会主义制度的自我完善和自我发展" class="headerlink" title="2.(辨析题)改革是社会主义制度的自我完善和自我发展"></a><strong>2.(辨析题)改革是社会主义制度的自我完善和自我发展</strong></h3><p><code>作答思路</code>：是什么；实质和目标</p><p>(1)改革作为一次新的革命，<code>不是也不允许</code>我们否定和抛弃我们建立起来的社会主义基本制度，他是社会主义的<code>自我完善和自我发展</code>。</p><p>(2)改革<code>不是</code>一个阶级推翻另一个阶级的原来意义上的革命，<code>也不是</code>经济体制细枝末节的修补，<code>而是</code>对体制的根本性变革。</p><p>(3)改革的实质和目标，是要从根本上<code>改变</code>束缚我国生产力发展的<code>经济体制</code>，<code>建立</code>充满生机活力的<code>社会主义新经济体制</code>，同时相应地<code>改革政治体制和其他方面的体制</code>，<code>实现中国社会主义现代</code>。</p><h3 id="3-简答题-邓小平“和平统一，一国两制”的基本内容"><a href="#3-简答题-邓小平“和平统一，一国两制”的基本内容" class="headerlink" title="3.(简答题)邓小平“和平统一，一国两制”的基本内容"></a><strong>3.(简答题)邓小平“和平统一，一国两制”的基本内容</strong></h3><p><code>作答思路</code>：以解决什么问题提出；内容是什么；地位如何</p><p>答案：</p><p>面对港澳台地区<code>尚未统一</code>的问题，邓小平提出<code>“只有实行‘一个国家，两种制度’”</code></p><p>基本内容：</p><p>(1)坚持<code>一个中国</code>，这是“和平统一，一国两制”的<code>核心</code>；</p><p>(2)<code>两制并存</code>，在祖国统一的前提下，<code>国家</code>的<code>主体</code>部分实行<code>社会主义制度</code>，同时在<code>台湾、香港、澳门</code>保持<code>原有社会制度和生活动方式</code>长期不变；</p><p>(3)<code>高度自治</code>，祖国完成统一后，港澳台作为特别行政区，享有不同于中国其他省、市、自治区的高度自治权；</p><p>(4)尽最大努力<code>争取和平统一</code>，但<code>不承诺放弃使用武力</code>；</p><p>(5)解决台湾问题，实现祖国完全统一，<code>寄希望于台湾人民</code>。</p><p><code>地位</code>：“一国两制”构想是对<code>马克思主义国家学说的创造性发展</code>。</p><h3 id="4-简答题-简述社会主义初级阶段理论"><a href="#4-简答题-简述社会主义初级阶段理论" class="headerlink" title="4.(简答题)简述社会主义初级阶段理论"></a><strong>4.(简答题)简述社会主义初级阶段理论</strong></h3><p><code>作答思路</code>：何时提出；是什么；理论的含义；理论的意义</p><p>答案：</p><p>何时提出：党的<code>十三大系统论述</code>了社会主义初级阶段理论。</p><p>是什么：社会主义初级阶段理论是指我国在<code>生产力水平落后</code>、<code>商品经济不发达</code>的条件下建设社会主义必然经历的<code>特定阶段</code>。</p><p>理论的含义：</p><p>(1)我国<code>已经进入</code>社会主义，必须<code>坚持而不能离开</code>社会主义；</p><p>(2)我国社会主义社会<code>还处于</code>不发达的阶段，必须<code>正视而不能超越</code>初级阶段。</p><p>理论的意义：社会主义初级阶段，揭示了当代中国的历史方位，是建设中国特色社会主义的总依据。</p><hr><h2 id="六-“三个代表”重要思想"><a href="#六-“三个代表”重要思想" class="headerlink" title="(六)“三个代表”重要思想"></a>(六)“三个代表”重要思想</h2><h3 id="1-简答题-中国共产党必须始终代表中国先进生产力的发展要求"><a href="#1-简答题-中国共产党必须始终代表中国先进生产力的发展要求" class="headerlink" title="1.(简答题)中国共产党必须始终代表中国先进生产力的发展要求"></a><strong>1.(简答题)中国共产党必须始终代表中国先进生产力的发展要求</strong></h3><p><code>作答思路</code>：是核心观点之一；怎么做</p><p>答案：</p><p>始终代表中国先进生产力的发展要求是“三个代表”重要思想的<code>核心观点之一</code>。始终代表中国先进生产力的发展要求，大力促进先进生产力的发展，是<code>党保持先进性的根本体现和根本要求</code>。</p><p>(1).广大<code>工人、农民和知识分子</code>始终是推动我国先进生产力发展和社会全面进步的<code>根本力量</code>。</p><p>(2).<code>科学技术是第一生产力</code>，是先进生产力的<code>集中体现和主要标志</code>。<code>科技进步是</code>发展先进生产力的<code>决定因素</code>，<code>科学的本质是创新</code>。</p><h3 id="2-简答题-中国共产党必须始终代表中国最广大人民的根本利益"><a href="#2-简答题-中国共产党必须始终代表中国最广大人民的根本利益" class="headerlink" title="2.(简答题)中国共产党必须始终代表中国最广大人民的根本利益"></a><strong>2.(简答题)中国共产党必须始终代表中国最广大人民的根本利益</strong></h3><p><code>作答思路</code>：是核心观点之一；怎么做</p><p>答案：</p><p>始终代表中国最广大人民的根本利益是“三个代表”重要思想的核心观点之一。</p><p>(1).<code>发展好最广大人民的根本利益</code>是我们全部工作的<code>出发点和落脚点</code>。</p><p>(2).为<code>实现人民群众的根本利益而奋斗</code>是我们<code>全部任务和责任</code>。</p><p>(3).党<code>始终坚持人民利益高于一切</code>。党除了最广大人民的利益，<code>没有自己的特殊利益</code>。</p><p>(4).努力使工人、农民、知识分子和其他群众<code>共同享受到经济社会发展的成果</code>。</p><p>(5).人民群众是历史的创造者，是历史的主体。</p><hr><h2 id="七-科学发展观"><a href="#七-科学发展观" class="headerlink" title="(七)科学发展观"></a>(七)科学发展观</h2><h3 id="1-辨析题-以人为本是科学发展观的第一要义"><a href="#1-辨析题-以人为本是科学发展观的第一要义" class="headerlink" title="1.(辨析题)以人为本是科学发展观的第一要义"></a><strong>1.(辨析题)以人为本是科学发展观的第一要义</strong></h3><p><code>作答思路</code>：是什么；地位；怎么做</p><p>答案：</p><p>错误，<code>发展</code>是科学发展观的<code>第一要义</code>，以人为本是科学发展观的核心立场。</p><p>地位：</p><p>(1)发展<code>是人类文明进步的基础</code>，<code>是马克思主义最基本的范畴之一</code>。</p><p>(2)<code>坚持发展是硬道理的本质要求就是坚持科学发展</code>。</p><p>怎么做：</p><p>(1)<code>坚持</code>科学发展，必须<code>加快转变经济发展方式</code>。</p><p>(2)<code>坚持</code>科学发展，必须<code>善于抓住和把握机遇</code>。</p><h3 id="2-简答题-全面协调可持续是科学发展观的基本要求"><a href="#2-简答题-全面协调可持续是科学发展观的基本要求" class="headerlink" title="2.(简答题)全面协调可持续是科学发展观的基本要求"></a><strong>2.(简答题)全面协调可持续是科学发展观的基本要求</strong></h3><p><code>作答思路</code>：是什么；怎么做</p><p>答案：</p><p>是什么：</p><p>(1).<code>“全面”</code>是指发展要有<code>全面性、整体性</code>。</p><p>(2).<code>“协调”</code>是指发展要有<code>协调性、均衡性</code>。</p><p>(3).<code>“可持续”</code>是指发展要有<code>持久性、连续性</code>。</p><p>怎么做：</p><p>(1).坚持<code>全面发展</code>，要<code>正确认识和把握经济、政治、文化、社会、生态文明建设是相互联系、相互促进的</code>。</p><p>(2).坚持<code>协调发展</code>，就是<code>保证中国特色社会主义各个领域协调推进</code>。</p><p>(3).坚持<code>可持续发展</code>，必须<code>走生产发展、生活富裕、生态良好的文明发展</code>。</p><p>(4).坚持<code>可持续发展</code>，还必须<code>建设生态文明</code>。</p><h3 id="3-简答题-简述科学发展观“构建社会主义和谐社会”的基本内容"><a href="#3-简答题-简述科学发展观“构建社会主义和谐社会”的基本内容" class="headerlink" title="3.(简答题)简述科学发展观“构建社会主义和谐社会”的基本内容"></a><strong>3.(简答题)简述科学发展观“构建社会主义和谐社会”的基本内容</strong></h3><p>答案：</p><p>社会和谐是中国特色社会主义的本质属性，深化了对社会主义本质的认识。</p><p>(1).社会主义和谐社会是经济、政治、文化、社会、生态文明建设协调发展的社会，是人与人、人与社会、人与自然整体和谐的社会。</p><p>(2).民主法制、公平正义、诚信友爱、充满活力、安定有序、人与自然和谐相处，是构建社会主义和谐社会的总要求。</p><p>(3).构建社会主义和谐社会，既要从“大社会”着眼，又要从“小社会”着手，以解决人民群众最关心最直接最现实的利益问题为重点。</p><h3 id="4-简答题-简述科学发展观最鲜明的精神实质"><a href="#4-简答题-简述科学发展观最鲜明的精神实质" class="headerlink" title="4.(简答题)简述科学发展观最鲜明的精神实质"></a><strong>4.(简答题)简述科学发展观最鲜明的精神实质</strong></h3><p>答案：</p><p>科学发展观最鲜明的精神实质是解放思想、实事求是、与时俱进、求真务实。</p><p>(1).这个精神实质充分体现了马克思主义、毛泽东思想、邓小平理论、“三个代表”重要思想和科学发展观的历史逻辑和内在联系。</p><p>(2).科学发胀初步形成了马克思主义关于社会主义发展的系统理论，进一步丰富和深化了马克思主义对发展问题的认识。</p><hr><h2 id="Donate-☕️"><a href="#Donate-☕️" class="headerlink" title="Donate ☕️"></a>Donate ☕️</h2><p>如果你喜欢我的博文，可以通过下面的方式支持我，你的支持是我最大的动力 😘</p><p>转载时请注明出处 ©️PhoenixNest</p><table><thead><tr><th align="center">Donate 😇</th><th align="center">Qr code</th></tr></thead><tbody><tr><td align="center">Wechat</td><td align="center"><img src="/img/wechat.png" alt="Wechat"></td></tr><tr><td align="center">Ali Pay</td><td align="center"><img src="/img/alipay.png" alt="Ali Pay"></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Exam </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
